{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Hidden, Container, Typography } from '@material-ui/core';\nimport { userAPI } from '@src/api/api';\nimport { AdvrtForm } from './advrt_form/AdvrtForm';\nimport { SuccessAdvrt } from './success_advrt/SuccessAdvrt';\nimport { createAdvrtSchema } from \"@root/validation_schemas/createAdvrtSchema\";\nimport { useFormik, FormikProvider } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { MainLayout } from \"@src/components/MainLayout\"; // styles\n\nimport { useStyles } from './useStyles';\nvar initFields = {\n  title: '',\n  price: '',\n  safe_deal: false,\n  delivery: false,\n  exchange: false,\n  location: null,\n  files: [],\n  description: '',\n  phone: '',\n  week: [{\n    id: 1,\n    name: 'Пн'\n  }, {\n    id: 2,\n    name: 'Вт'\n  }, {\n    id: 3,\n    name: 'Ср'\n  }, {\n    id: 4,\n    name: 'Чт'\n  }, {\n    id: 5,\n    name: 'Пт'\n  }],\n  start_time: '9:00',\n  end_time: '18:00'\n};\nexport var CreateAdvrt = function CreateAdvrt() {\n  _s();\n\n  var _useSelector = useSelector(function (store) {\n    return store;\n  }),\n      createAdvrt = _useSelector.createAdvrt,\n      locations = _useSelector.locations;\n\n  var _useState = useState(false),\n      isPreview = _useState[0],\n      setIsPreview = _useState[1];\n\n  var _useState2 = useState(false),\n      isSuccess = _useState2[0],\n      setIsSuccess = _useState2[1];\n\n  var prepareData = function prepareData(data) {\n    var form = new FormData();\n\n    var safe_deal = data.safe_deal,\n        delivery = data.delivery,\n        exchange = data.exchange,\n        location = data.location,\n        files = data.files,\n        otherValues = _objectWithoutProperties(data, [\"safe_deal\", \"delivery\", \"exchange\", \"location\", \"files\"]);\n\n    form.set('ads_type_id', createAdvrt.adType.id.toString());\n    form.set('parent_categories_id', createAdvrt.category.id.toString());\n    form.set('safe_deal', Number(safe_deal).toString());\n    form.set('delivery', Number(delivery).toString());\n    form.set('exchange', Number(exchange).toString());\n    files.forEach(function (_ref) {\n      var file = _ref.file;\n      return form.append('files[]', file, file.name);\n    });\n\n    for (var key in location) {\n      if (typeof location[key] === 'number') {\n        form.set(key, Number(location[key]).toString());\n      }\n    }\n\n    var _loop = function _loop(_key2) {\n      var value = otherValues[_key2];\n\n      if (value) {\n        if (typeof value === 'string') {\n          form.set(_key2, value);\n        } else if (Array.isArray(value)) {\n          value.forEach(function (value, i) {\n            return form.append(\"\".concat(_key2, \"[\").concat(i, \"]\"), value.id);\n          });\n        } else {\n          if (value.id) {\n            switch (_key2) {\n              case 'models':\n                _key2 = 'model';\n                break;\n\n              case 'colors':\n                _key2 = 'color';\n                break;\n            }\n\n            form.set(\"\".concat(_key2, \"_id\"), value.id);\n          }\n        }\n      }\n\n      _key = _key2;\n    };\n\n    for (var _key in otherValues) {\n      _loop(_key);\n    }\n\n    var _iterator = _createForOfIteratorHelper(form.entries()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _key3 = _step.value;\n        console.log(_key3[0] + '-' + _key3[1]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return form;\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (isPreview) {\n                _context.next = 5;\n                break;\n              }\n\n              setIsPreview(true);\n              _context.next = 9;\n              break;\n\n            case 5:\n              data = prepareData(values);\n              _context.next = 8;\n              return userAPI.createAdvrt(data);\n\n            case 8:\n              // setIsSuccess(true);\n              console.log('success');\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var formik = useFormik({\n    initialValues: initFields,\n    validationSchema: createAdvrtSchema,\n    onSubmit: onSubmit\n  });\n  var setValues = formik.setValues,\n      values = formik.values,\n      errors = formik.errors,\n      setErrors = formik.setErrors,\n      touched = formik.touched,\n      handleBlur = formik.handleBlur;\n\n  var handlePreview = function handlePreview(value) {\n    return function () {\n      setIsPreview(value);\n    };\n  };\n\n  var handleCheckboxChange = function handleCheckboxChange(valName) {\n    return function (_ref3) {\n      var target = _ref3.target;\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valName, target.checked)));\n    };\n  };\n\n  var handleParamsCheckbox = function handleParamsCheckbox(valueName, value) {\n    return function () {\n      if (values[valueName]) {\n        if (values[valueName].some(function (val) {\n          return val.id === value.id;\n        })) {\n          values[valueName].map(function (val, index) {\n            if (val.id === value.id) {\n              values[valueName].splice(index, 1);\n            }\n          });\n          setValues(_objectSpread({}, values));\n        } else {\n          setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, [].concat(_toConsumableArray(values[valueName]), [value]))));\n        }\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, [value])));\n      }\n    };\n  };\n\n  var handleMenuItem = function handleMenuItem(valueName) {\n    return function (newValue, setAnchor) {\n      return function () {\n        setAnchor(null);\n        setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, newValue))); // Reset sub props in values\n\n        Object.keys(newValue).map(function (key) {\n          if (values[key]) {\n            var _objectSpread6;\n\n            setValues(_objectSpread(_objectSpread({}, values), {}, (_objectSpread6 = {}, _defineProperty(_objectSpread6, valueName, newValue), _defineProperty(_objectSpread6, key, _objectSpread({\n              id: null,\n              name: 'Не выбрано'\n            }, newValue[key])), _objectSpread6)));\n          }\n        });\n      };\n    };\n  };\n\n  var handleListItem = function handleListItem(valueName, value) {\n    return function () {\n      if (values[valueName] && values[valueName].id === value.id) {\n        delete values[valueName];\n        setValues(_objectSpread({}, values));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, value)));\n      }\n    };\n  };\n\n  var handleTime = function handleTime(_ref4) {\n    var target = _ref4.target;\n    var name = target.name,\n        value = target.value;\n    var regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\n    var replChars = /^:$/;\n    var isValid = regEx.test(value);\n\n    if (isValid) {\n      var replacedValue = value.replace(regEx, function (m) {\n        return \"00:00\";\n      });\n      console.log(replacedValue);\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, replacedValue)));\n    }\n  };\n\n  useEffect(function () {\n    setErrors({});\n    setValues(_objectSpread({}, initFields));\n    isPreview && setIsPreview(false);\n  }, [createAdvrt.data.id, createAdvrt.data.name]);\n  console.log(values);\n  var classes = useStyles();\n  return __jsx(MainLayout, null, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9\n  }, __jsx(FormikProvider, {\n    value: formik\n  }, __jsx(\"form\", {\n    onSubmit: formik.handleSubmit\n  }, isSuccess ? __jsx(SuccessAdvrt, null) : __jsx(AdvrtForm, {\n    locations: locations,\n    isPreview: isPreview,\n    setIsPreview: setIsPreview,\n    createAdvrt: createAdvrt,\n    errors: errors,\n    touched: touched,\n    values: values,\n    setValues: setValues,\n    handleBlur: handleBlur,\n    handleTime: handleTime,\n    handleMenuItem: handleMenuItem,\n    handleListItem: handleListItem,\n    handleParamsCheckbox: handleParamsCheckbox,\n    handleCheckboxChange: handleCheckboxChange\n  }), __jsx(\"div\", {\n    className: classes.nextButtonBlock\n  }, isPreview && __jsx(ButtonComponent, {\n    className: classes.nextButton,\n    onClick: handlePreview(false)\n  }, __jsx(Typography, null, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")), __jsx(ButtonComponent, {\n    type: \"submit\",\n    disabled: !(createAdvrt.adType.id && createAdvrt.category.id),\n    className: classes.nextButton\n  }, __jsx(Typography, null, isPreview ? 'Создать' : 'Далее')))))), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 3,\n    container: true,\n    justify: \"flex-end\",\n    className: classes.adBanner\n  }, __jsx(Grid, {\n    item: true,\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"right-banner\"\n  })))))));\n};\n\n_s(CreateAdvrt, \"ifKxh8jXpoU7pHs1La9y+FANXR4=\", false, function () {\n  return [useSelector, useFormik, useStyles];\n});\n\n_c = CreateAdvrt;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdvrt\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/CreateAdvrt.tsx"],"names":["React","useEffect","useState","Grid","Hidden","Container","Typography","userAPI","AdvrtForm","SuccessAdvrt","createAdvrtSchema","useFormik","FormikProvider","useSelector","ButtonComponent","MainLayout","useStyles","initFields","title","price","safe_deal","delivery","exchange","location","files","description","phone","week","id","name","start_time","end_time","CreateAdvrt","store","createAdvrt","locations","isPreview","setIsPreview","isSuccess","setIsSuccess","prepareData","data","form","FormData","otherValues","set","adType","toString","category","Number","forEach","file","append","key","value","Array","isArray","i","entries","console","log","onSubmit","values","formik","initialValues","validationSchema","setValues","errors","setErrors","touched","handleBlur","handlePreview","handleCheckboxChange","valName","target","checked","handleParamsCheckbox","valueName","some","val","map","index","splice","handleMenuItem","newValue","setAnchor","Object","keys","handleListItem","handleTime","regEx","replChars","isValid","test","replacedValue","replace","m","classes","handleSubmit","nextButtonBlock","nextButton","adBanner"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {Grid, Hidden, Container, Typography} from '@material-ui/core';\r\nimport {userAPI} from '@src/api/api';\r\nimport {AdvrtForm} from './advrt_form/AdvrtForm';\r\nimport {SuccessAdvrt} from './success_advrt/SuccessAdvrt';\r\nimport {CreateAdFields} from \"@root/interfaces/Advertisement\";\r\nimport {createAdvrtSchema} from \"@root/validation_schemas/createAdvrtSchema\";\r\nimport {useFormik, FormikProvider} from \"formik\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport {MainLayout} from \"@src/components/MainLayout\";\r\n// styles\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nconst initFields: CreateAdFields = {\r\n    title: '',\r\n    price: '',\r\n    safe_deal: false,\r\n    delivery: false,\r\n    exchange: false,\r\n    location: null,\r\n    files: [],\r\n    description: '',\r\n    phone: '',\r\n    week: [\r\n        {id: 1, name: 'Пн'},\r\n        {id: 2, name: 'Вт'},\r\n        {id: 3, name: 'Ср'},\r\n        {id: 4, name: 'Чт'},\r\n        {id: 5, name: 'Пт'},\r\n    ],\r\n    start_time: '9:00',\r\n    end_time: '18:00'\r\n};\r\n\r\nexport const CreateAdvrt: FC<void> = () => {\r\n    const {createAdvrt, locations} = useSelector((store: RootState) => store);\r\n\r\n    const [isPreview, setIsPreview] = useState(false);\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n    const prepareData = (data: CreateAdFields) => {\r\n        const form = new FormData();\r\n        const {\r\n            safe_deal,\r\n            delivery,\r\n            exchange,\r\n            location,\r\n            files,\r\n            ...otherValues\r\n        } = data;\r\n\r\n        form.set('ads_type_id', createAdvrt.adType.id.toString());\r\n        form.set('parent_categories_id', createAdvrt.category.id.toString());\r\n        form.set('safe_deal', Number(safe_deal).toString());\r\n        form.set('delivery', Number(delivery).toString());\r\n        form.set('exchange', Number(exchange).toString());\r\n        files.forEach(({file}: any) => (\r\n            form.append('files[]', file, file.name))\r\n        );\r\n\r\n        for (const key in location) {\r\n            if (typeof location[key] === 'number') {\r\n                form.set(key, Number(location[key]).toString());\r\n            }\r\n        }\r\n\r\n        for (let key in otherValues) {\r\n            const value = otherValues[key];\r\n            if (value) {\r\n                if (typeof value === 'string') {\r\n                    form.set(key, value);\r\n                } else if (Array.isArray(value)) {\r\n                    value.forEach((value, i) => (\r\n                        form.append(`${key}[${i}]`, value.id))\r\n                    )\r\n                } else {\r\n                    if (value.id) {\r\n                        switch (key) {\r\n                            case 'models' :\r\n                                key = 'model'\r\n                                break;\r\n                            case 'colors' :\r\n                                key = 'color'\r\n                                break;\r\n                        }\r\n                        form.set(`${key}_id`, value.id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const key of form.entries()) {\r\n            console.log(key[0] + '-' + key[1]);\r\n        }\r\n\r\n        return form;\r\n    };\r\n\r\n    const onSubmit = async (values: CreateAdFields) => {\r\n        try {\r\n            if (!isPreview) {\r\n                setIsPreview(true);\r\n            } else {\r\n                const data = prepareData(values);\r\n                await userAPI.createAdvrt(data);\r\n                // setIsSuccess(true);\r\n                console.log('success');\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initFields,\r\n        validationSchema: createAdvrtSchema,\r\n        onSubmit\r\n    });\r\n\r\n    const {\r\n        setValues,\r\n        values,\r\n        errors,\r\n        setErrors,\r\n        touched,\r\n        handleBlur,\r\n    } = formik;\r\n\r\n    const handlePreview = (value) => () => {\r\n        setIsPreview(value);\r\n    };\r\n\r\n    const handleCheckboxChange = (valName) => ({target}) => {\r\n        setValues({...values, [valName]: target.checked});\r\n    };\r\n\r\n    const handleParamsCheckbox = (valueName, value) => () => {\r\n        if (values[valueName]) {\r\n            if (values[valueName].some(val => val.id === value.id)) {\r\n                values[valueName].map((val, index) => {\r\n                    if (val.id === value.id) {\r\n                        values[valueName].splice(index, 1)\r\n                    }\r\n                });\r\n                setValues({...values});\r\n            } else {\r\n                setValues({\r\n                        ...values,\r\n                        [valueName]: [...values[valueName], value]\r\n                    }\r\n                );\r\n            }\r\n        } else {\r\n            setValues({...values, [valueName]: [value]});\r\n        }\r\n    };\r\n\r\n    const handleMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n        setAnchor(null);\r\n\r\n        setValues({\r\n            ...values,\r\n            [valueName]: newValue\r\n        });\r\n\r\n        // Reset sub props in values\r\n        Object.keys(newValue).map(key => {\r\n            if (values[key]) {\r\n                setValues({\r\n                    ...values,\r\n                    [valueName]: newValue,\r\n                    [key]: {id: null, name: 'Не выбрано', ...newValue[key]}\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleListItem = (valueName, value) => () => {\r\n        if (values[valueName] && values[valueName].id === value.id) {\r\n            delete values[valueName];\r\n\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                [valueName]: value\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTime = ({target}) => {\r\n        const {name, value} = target;\r\n        const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\r\n        const replChars = /^:$/;\r\n        const isValid = regEx.test(value);\r\n        if (isValid) {\r\n            const replacedValue = value.replace(regEx, (m) => {\r\n                return `00:00`;\r\n            });\r\n            console.log(replacedValue)\r\n            setValues({...values, [name]: replacedValue});\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setErrors({});\r\n        setValues({...initFields});\r\n        isPreview && setIsPreview(false);\r\n    }, [createAdvrt.data.id, createAdvrt.data.name]);\r\n\r\n    console.log(values)\r\n    const classes = useStyles();\r\n    return (\r\n        <MainLayout>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} md={9}>\r\n                        <FormikProvider value={formik}>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                {\r\n                                    isSuccess\r\n                                        ? <SuccessAdvrt/>\r\n                                        : (\r\n                                            <AdvrtForm\r\n                                                locations={locations}\r\n                                                isPreview={isPreview}\r\n                                                setIsPreview={setIsPreview}\r\n                                                createAdvrt={createAdvrt}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                values={values}\r\n                                                setValues={setValues}\r\n                                                handleBlur={handleBlur}\r\n                                                handleTime={handleTime}\r\n                                                handleMenuItem={handleMenuItem}\r\n                                                handleListItem={handleListItem}\r\n                                                handleParamsCheckbox={handleParamsCheckbox}\r\n                                                handleCheckboxChange={handleCheckboxChange}\r\n                                            />\r\n                                        )\r\n                                }\r\n                                <div className={classes.nextButtonBlock}>\r\n                                    {\r\n                                        isPreview && (\r\n                                            <ButtonComponent\r\n                                                className={classes.nextButton}\r\n                                                onClick={handlePreview(false)}\r\n                                            >\r\n                                                <Typography>\r\n                                                    Назад\r\n                                                </Typography>\r\n                                            </ButtonComponent>\r\n                                        )\r\n                                    }\r\n                                    <ButtonComponent\r\n                                        type='submit'\r\n                                        disabled={!(createAdvrt.adType.id && createAdvrt.category.id)}\r\n                                        className={classes.nextButton}\r\n                                    >\r\n                                        <Typography>\r\n                                            {\r\n                                                isPreview\r\n                                                    ? 'Создать'\r\n                                                    : 'Далее'\r\n                                            }\r\n                                        </Typography>\r\n                                    </ButtonComponent>\r\n                                </div>\r\n                            </form>\r\n                        </FormikProvider>\r\n                    </Grid>\r\n                    <Hidden smDown>\r\n                        <Grid\r\n                            item\r\n                            md={3}\r\n                            container\r\n                            justify=\"flex-end\"\r\n                            className={classes.adBanner}\r\n                        >\r\n                            <Grid item md={12}>\r\n                                <div className=\"right-banner\"/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Hidden>\r\n                </Grid>\r\n            </Container>\r\n        </MainLayout>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}