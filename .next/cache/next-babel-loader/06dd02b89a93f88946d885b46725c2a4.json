{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Fragment } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { AdvrtParams } from './AdvrtParams';\nimport { dataPrepare } from \"@src/components/advertisement/create_advrt/advrt_form/advrt_params/helpers\";\nimport { useStyles } from './useStyles';\nexport const AdvrtParamsContainer = props => {\n  const {\n    isPreview,\n    createAdvrt,\n    values,\n    errors,\n    touched,\n    handleParamsInput\n  } = props;\n  const {\n    subCategory\n  } = createAdvrt;\n  const {\n    adParams\n  } = values;\n  const data = isPreview ? adParams : dataPrepare(subCategory.data, adParams);\n  const classes = useStyles({\n    isPreview\n  });\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root\n  }, Object.keys(data).map(key => {\n    return __jsx(Fragment, {\n      key: key\n    }, __jsx(AdvrtParams, _extends({}, props, {\n      list: {\n        data: data[key],\n        key\n      }\n    })));\n  }));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/advrt_form/advrt_params/AdvrtParamsContainer.tsx"],"names":["React","Fragment","Grid","AdvrtParams","dataPrepare","useStyles","AdvrtParamsContainer","props","isPreview","createAdvrt","values","errors","touched","handleParamsInput","subCategory","adParams","data","classes","root","Object","keys","map","key"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,IAAR,QAA+B,mBAA/B;AAGA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,WAAR,QAA0B,4EAA1B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAO,MAAMC,oBAA6B,GAAIC,KAAD,IAAW;AACpD,QAAM;AACFC,IAAAA,SADE;AAEFC,IAAAA,WAFE;AAGFC,IAAAA,MAHE;AAIFC,IAAAA,MAJE;AAKFC,IAAAA,OALE;AAMFC,IAAAA;AANE,MAOFN,KAPJ;AAUA,QAAM;AAACO,IAAAA;AAAD,MAAgBL,WAAtB;AAEA,QAAM;AAACM,IAAAA;AAAD,MAAaL,MAAnB;AAEA,QAAMM,IAAI,GAAGR,SAAS,GAAGO,QAAH,GAAcX,WAAW,CAACU,WAAW,CAACE,IAAb,EAAmBD,QAAnB,CAA/C;AAEA,QAAME,OAAO,GAAGZ,SAAS,CAAC;AAACG,IAAAA;AAAD,GAAD,CAAzB;AACA,SACI,MAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,OAAO,EAAE,CAFb;AAGI,IAAA,SAAS,EAAES,OAAO,CAACC;AAHvB,KAMQC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,GAAlB,CAAsBC,GAAG,IAAI;AACzB,WACI,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA;AAAf,OACI,MAAC,WAAD,eAAiBf,KAAjB;AAAwB,MAAA,IAAI,EAAE;AAACS,QAAAA,IAAI,EAAEA,IAAI,CAACM,GAAD,CAAX;AAAkBA,QAAAA;AAAlB;AAA9B,OADJ,CADJ;AA8EH,GA/ED,CANR,CADJ;AA0FH,CA5GM","sourcesContent":["import React, {FC, Fragment} from \"react\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport {CustomFormikField} from \"@src/components/elements/custom_formik_field/CustomFormikField\";\r\nimport {isRequired} from '@root/validation_schemas/createAdvrtSchema';\r\nimport {AdvrtParams} from './AdvrtParams';\r\nimport {dataPrepare} from \"@src/components/advertisement/create_advrt/advrt_form/advrt_params/helpers\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const AdvrtParamsContainer: FC<any> = (props) => {\r\n    const {\r\n        isPreview,\r\n        createAdvrt,\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleParamsInput,\r\n    } = props;\r\n\r\n\r\n    const {subCategory} = createAdvrt;\r\n\r\n    const {adParams} = values;\r\n\r\n    const data = isPreview ? adParams : dataPrepare(subCategory.data, adParams);\r\n\r\n    const classes = useStyles({isPreview});\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={2}\r\n            className={classes.root}\r\n        >\r\n            {\r\n                Object.keys(data).map(key => {\r\n                    return (\r\n                        <Fragment key={key}>\r\n                            <AdvrtParams {...props} list={{data: data[key], key}}/>\r\n                            {/*{*/}\r\n                            {/*    key === 'body' && (*/}\r\n                            {/*        <>*/}\r\n                            {/*            <Grid*/}\r\n                            {/*                item*/}\r\n                            {/*                container*/}\r\n                            {/*                spacing={2}*/}\r\n                            {/*                xs={12}*/}\r\n                            {/*                sm={6}*/}\r\n                            {/*                className={classes.gridItem}*/}\r\n                            {/*            >*/}\r\n                            {/*                <Typography variant=\"subtitle1\">*/}\r\n                            {/*                    year*/}\r\n                            {/*                    {*/}\r\n                            {/*                        isRequired(key)*/}\r\n                            {/*                        && !isPreview*/}\r\n                            {/*                        && <span className='error-text'>*</span>*/}\r\n                            {/*                    }*/}\r\n                            {/*                    {*/}\r\n                            {/*                        errors.year*/}\r\n                            {/*                        && touched.year*/}\r\n                            {/*                        && <span className='error-text'> {errors.year}</span>*/}\r\n                            {/*                    }*/}\r\n                            {/*                </Typography>*/}\r\n                            {/*                {isPreview*/}\r\n                            {/*                    ? <Typography>{adParams.year} г.</Typography>*/}\r\n                            {/*                    : <CustomFormikField*/}\r\n                            {/*                        className={*/}\r\n                            {/*                            errors.year*/}\r\n                            {/*                            && touched.year ? 'error-border' : ''*/}\r\n                            {/*                        }*/}\r\n                            {/*                        name='year'*/}\r\n                            {/*                        placeholder='Год выпуска'*/}\r\n                            {/*                        value={adParams.year ?? ''}*/}\r\n                            {/*                        onChange={handleParamsInput('year')}*/}\r\n                            {/*                    />}*/}\r\n                            {/*            </Grid>*/}\r\n                            {/*            <Grid*/}\r\n                            {/*                item*/}\r\n                            {/*                container*/}\r\n                            {/*                xs={12}*/}\r\n                            {/*                sm={6}*/}\r\n                            {/*                className={classes.gridItem}*/}\r\n                            {/*            >*/}\r\n                            {/*                <Typography variant=\"subtitle1\">*/}\r\n                            {/*                    mileage*/}\r\n                            {/*                    {*/}\r\n                            {/*                        isRequired(key)*/}\r\n                            {/*                        && !isPreview*/}\r\n                            {/*                        && <span className='error-text'>*</span>*/}\r\n                            {/*                    }*/}\r\n                            {/*                    {*/}\r\n                            {/*                        errors.mileage*/}\r\n                            {/*                        && touched.mileage*/}\r\n                            {/*                        && <span className='error-text'> {errors.mileage}</span>*/}\r\n                            {/*                    }*/}\r\n                            {/*                </Typography>*/}\r\n                            {/*                {isPreview*/}\r\n                            {/*                    ? <Typography>{adParams.mileage} км.</Typography>*/}\r\n                            {/*                    : <CustomFormikField*/}\r\n                            {/*                        className={*/}\r\n                            {/*                            errors.mileage*/}\r\n                            {/*                            && touched.mileage ? 'error-border' : ''*/}\r\n                            {/*                        }*/}\r\n                            {/*                        name='mileage'*/}\r\n                            {/*                        placeholder='Пробег'*/}\r\n                            {/*                        value={adParams.mileage ?? ''}*/}\r\n                            {/*                        onChange={handleParamsInput('mileage')}*/}\r\n                            {/*                    />}*/}\r\n                            {/*            </Grid>*/}\r\n                            {/*        </>*/}\r\n                            {/*    )*/}\r\n                            {/*}*/}\r\n                        </Fragment>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}