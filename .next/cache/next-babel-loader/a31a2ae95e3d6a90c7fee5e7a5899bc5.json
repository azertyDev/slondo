{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Hidden, Container } from '@material-ui/core';\nimport { useSelector } from \"react-redux\";\nimport { MainLayout } from \"@src/components/MainLayout\";\nimport { AdvrtFormContainer } from './advrt_form/AdvrtFormContainer';\nimport { useStyles } from './useStyles';\nimport { i18n } from \"@root/i18n\";\nimport { userAPI } from '@src/api/api';\nimport { CreateAdvrt } from \"@src/components/advertisement/create_advrt/CreateAdvrt\";\nvar initCreateAdState = {\n  isFetch: false,\n  error: null,\n  adType: {\n    id: null,\n    name: '',\n    currency: [],\n    expired: []\n  },\n  category: {\n    id: null,\n    name: '',\n    childs: []\n  },\n  subCategory: {\n    id: null,\n    name: '',\n    data: null\n  }\n};\nexport var CreateAdvrtContainer = function CreateAdvrtContainer() {\n  _s();\n\n  var lang = i18n.language;\n  var categoriesList = useSelector(function (_ref) {\n    var categories = _ref.categories;\n    return categories.list;\n  });\n\n  var _useState = useState(0),\n      tabValue = _useState[0],\n      setTabValue = _useState[1];\n\n  var _useState2 = useState([]),\n      adTypes = _useState2[0],\n      setAdTypes = _useState2[1];\n\n  var _useState3 = useState(initCreateAdState),\n      createAdvrt = _useState3[0],\n      setCreateAdvrt = _useState3[1];\n\n  var category = createAdvrt.category,\n      subCategory = createAdvrt.subCategory;\n\n  var getAdTypes = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _adTypes;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                isFetch: true\n              }));\n              _context.next = 4;\n              return userAPI.getAdTypes(lang);\n\n            case 4:\n              _adTypes = _context.sent;\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                isFetch: false\n              }));\n              setAdTypes(_adTypes);\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                adType: _adTypes[0]\n              }));\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                error: _context.t0\n              }));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function getAdTypes() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleTab = function handleTab(_, newValue) {\n    setTabValue(newValue);\n\n    switch (tabValue) {\n      case 0:\n        setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n          adType: adTypes[0]\n        }));\n        break;\n\n      case 1:\n        setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n          adType: adTypes[1]\n        }));\n        break;\n    }\n  };\n\n  var handleCtgr = function handleCtgr(id, name, childs) {\n    return function () {\n      setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n        category: {\n          id: id,\n          name: name,\n          childs: childs\n        }\n      }));\n    };\n  };\n\n  var handleSubCtgr = function handleSubCtgr(subCtgryID) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var dataForCreateAd;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return userAPI.getAdDataForCreate(category.id, subCtgryID, lang);\n\n            case 2:\n              dataForCreateAd = _context2.sent;\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                subCategory: _objectSpread(_objectSpread({}, subCategory), {}, {\n                  data: dataForCreateAd\n                })\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n  };\n\n  useEffect(function () {\n    getAdTypes();\n  }, []);\n  var classes = useStyles();\n  return __jsx(MainLayout, null, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9\n  }, createAdvrt.category.id ? __jsx(AdvrtFormContainer, {\n    createAdvrt: createAdvrt\n  }) : __jsx(CreateAdvrt, {\n    handleTab: handleTab,\n    handleCtgr: handleCtgr,\n    handleSubCtgr: handleSubCtgr,\n    tabValue: tabValue,\n    createAdvrt: createAdvrt,\n    categoriesList: categoriesList\n  })), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 3,\n    className: classes.adBanner\n  }, __jsx(\"div\", {\n    className: \"right-banner\"\n  }))))));\n};\n\n_s(CreateAdvrtContainer, \"kJcllaW1F6oqitnXhcvgd+DynBo=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = CreateAdvrtContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdvrtContainer\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/CreateAdvrtContainer.tsx"],"names":["React","useEffect","useState","Grid","Hidden","Container","useSelector","MainLayout","AdvrtFormContainer","useStyles","i18n","userAPI","CreateAdvrt","initCreateAdState","isFetch","error","adType","id","name","currency","expired","category","childs","subCategory","data","CreateAdvrtContainer","lang","language","categoriesList","categories","list","tabValue","setTabValue","adTypes","setAdTypes","createAdvrt","setCreateAdvrt","getAdTypes","handleTab","_","newValue","handleCtgr","handleSubCtgr","subCtgryID","getAdDataForCreate","dataForCreateAd","classes","adBanner"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {Grid, Hidden, Container} from '@material-ui/core';\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {MainLayout} from \"@src/components/MainLayout\";\r\nimport {AdvrtFormContainer} from './advrt_form/AdvrtFormContainer';\r\nimport {useStyles} from './useStyles';\r\nimport {i18n} from \"@root/i18n\";\r\nimport {userAPI} from '@src/api/api';\r\nimport {CreateAdvrt} from \"@src/components/advertisement/create_advrt/CreateAdvrt\";\r\n\r\n\r\nconst initCreateAdState = {\r\n    isFetch: false,\r\n    error: null,\r\n    adType: {\r\n        id: null,\r\n        name: '',\r\n        currency: [],\r\n        expired: [],\r\n    },\r\n    category: {\r\n        id: null,\r\n        name: '',\r\n        childs: []\r\n    },\r\n    subCategory: {\r\n        id: null,\r\n        name: '',\r\n        data: null\r\n    }\r\n};\r\n\r\nexport const CreateAdvrtContainer: FC<void> = () => {\r\n    const lang = i18n.language;\r\n\r\n    const categoriesList = useSelector(({categories}: RootState) => categories.list);\r\n\r\n    const [tabValue, setTabValue] = useState(0);\r\n\r\n    const [adTypes, setAdTypes] = useState([]);\r\n\r\n    const [createAdvrt, setCreateAdvrt] = useState(initCreateAdState);\r\n\r\n    const {category, subCategory} = createAdvrt;\r\n\r\n    const getAdTypes = async () => {\r\n        try {\r\n            setCreateAdvrt({...createAdvrt, isFetch: true});\r\n            const adTypes = await userAPI.getAdTypes(lang);\r\n            setCreateAdvrt({...createAdvrt, isFetch: false});\r\n\r\n            setAdTypes(adTypes);\r\n            setCreateAdvrt({\r\n                ...createAdvrt,\r\n                adType: adTypes[0]\r\n            })\r\n        } catch (error) {\r\n            setCreateAdvrt({...createAdvrt, error});\r\n        }\r\n    };\r\n\r\n    const handleTab = (_, newValue) => {\r\n        setTabValue(newValue);\r\n        switch (tabValue) {\r\n            case 0:\r\n                setCreateAdvrt({\r\n                    ...createAdvrt,\r\n                    adType: adTypes[0]\r\n                });\r\n                break;\r\n            case 1:\r\n                setCreateAdvrt({\r\n                    ...createAdvrt,\r\n                    adType: adTypes[1]\r\n                });\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleCtgr = (id, name, childs) => () => {\r\n        setCreateAdvrt({\r\n            ...createAdvrt,\r\n            category: {\r\n                id,\r\n                name,\r\n                childs\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSubCtgr = (subCtgryID) => async () => {\r\n        const dataForCreateAd = await userAPI.getAdDataForCreate(category.id, subCtgryID, lang)\r\n        setCreateAdvrt({\r\n            ...createAdvrt,\r\n            subCategory: {\r\n                ...subCategory,\r\n                data: dataForCreateAd\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAdTypes();\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <MainLayout>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} md={9}>\r\n                        {\r\n                            createAdvrt.category.id\r\n                                ? <AdvrtFormContainer createAdvrt={createAdvrt}/>\r\n                                : <CreateAdvrt\r\n                                    handleTab={handleTab}\r\n                                    handleCtgr={handleCtgr}\r\n                                    handleSubCtgr={handleSubCtgr}\r\n                                    tabValue={tabValue}\r\n                                    createAdvrt={createAdvrt}\r\n                                    categoriesList={categoriesList}\r\n                                />\r\n                        }\r\n                    </Grid>\r\n                    <Hidden smDown>\r\n                        <Grid item md={3} className={classes.adBanner}>\r\n                            <div className=\"right-banner\"/>\r\n                        </Grid>\r\n                    </Hidden>\r\n                </Grid>\r\n            </Container>\r\n        </MainLayout>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}