{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\nimport Head from 'next/head';\nimport theme from '../src/theme';\nimport { createWrapper } from \"next-redux-wrapper\";\nimport store from '../src/redux/store';\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  React.useEffect(function () {\n    // Remove the server-side injected CSS.\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"My page\")), __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(Provider, {\n    store: pageProps.store\n  }, __jsx(CssBaseline, null), __jsx(Component, pageProps))));\n} //makeStore function that returns a new store for every request\n\n\n_s(MyApp, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MyApp;\n\nvar makeStore = function makeStore() {\n  return store;\n};\n\nvar wrapper = createWrapper(makeStore); //withRedux wrapper that passes the store to the App Component\n\nexport default wrapper.withRedux(makeStore)(MyApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/pages/_app.tsx"],"names":["React","Provider","ThemeProvider","CssBaseline","Head","theme","createWrapper","store","MyApp","Component","pageProps","useEffect","jssStyles","document","querySelector","parentElement","removeChild","makeStore","wrapper","withRedux"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,mBAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,KAAT,OAAiD;AAAA;;AAAA,MAAjCC,SAAiC,QAAjCA,SAAiC;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AAE7CV,EAAAA,KAAK,CAACW,SAAN,CAAgB,YAAM;AAClB;AACA,QAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACXA,MAAAA,SAAS,CAACG,aAAV,CAAwBC,WAAxB,CAAoCJ,SAApC;AACH;AACJ,GAND,EAMG,EANH;AASA,SACI,4BACI,MAAC,IAAD,QACI,+BADJ,CADJ,EAII,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEP;AAAtB,KACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEK,SAAS,CAACH;AAA3B,KACI,MAAC,WAAD,OADJ,EAEI,MAAC,SAAD,EAAeG,SAAf,CAFJ,CADJ,CAJJ,CADJ;AAaH,C,CAGD;;;GA3BSF,K;;KAAAA,K;;AA4BT,IAAMS,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMV,KAAN;AAAA,CAAlB;;AACA,IAAMW,OAAO,GAAGZ,aAAa,CAACW,SAAD,CAA7B,C,CAEA;;AACA,eAAeC,OAAO,CAACC,SAAR,CAAkBF,SAAlB,EAA6BT,KAA7B,CAAf","sourcesContent":["import React from 'react'\nimport {Provider} from 'react-redux'\nimport {ThemeProvider, CssBaseline} from '@material-ui/core'\nimport Head from 'next/head'\nimport {AppProps} from 'next/app'\nimport theme from '../src/theme'\n\nimport {createWrapper} from \"next-redux-wrapper\"\nimport store from '../src/redux/store'\n\nfunction MyApp({Component, pageProps}: AppProps) {\n\n    React.useEffect(() => {\n        // Remove the server-side injected CSS.\n        const jssStyles = document.querySelector('#jss-server-side');\n        if (jssStyles) {\n            jssStyles.parentElement.removeChild(jssStyles);\n        }\n    }, []);\n\n\n    return (\n        <>\n            <Head>\n                <title>My page</title>\n            </Head>\n            <ThemeProvider theme={theme}>\n                <Provider store={pageProps.store}>\n                    <CssBaseline/>\n                    <Component {...pageProps} />\n                </Provider>\n            </ThemeProvider>\n        </>\n    );\n}\n\n\n//makeStore function that returns a new store for every request\nconst makeStore = () => store;\nconst wrapper = createWrapper(makeStore);\n\n//withRedux wrapper that passes the store to the App Component\nexport default wrapper.withRedux(makeStore)(MyApp)"]},"metadata":{},"sourceType":"module"}