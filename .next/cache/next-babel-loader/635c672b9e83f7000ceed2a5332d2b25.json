{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { userApi } from '../../api/api';\nexport var fetchRequest = function fetchRequest() {\n  return {\n    type: 'FETCH_REQUEST'\n  };\n};\nexport var getSuccess = function getSuccess(imgs) {\n  return {\n    type: 'GET_SUCCESS',\n    imgs: imgs\n  };\n};\nexport var getError = function getError(errors) {\n  return {\n    type: 'GET_ERROR',\n    errors: errors\n  };\n};\nexport var fetchMainSliderImgs = function fetchMainSliderImgs() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var imgs;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(fetchRequest());\n              _context.prev = 1;\n              _context.next = 4;\n              return userApi.getMainSliderImgs();\n\n            case 4:\n              imgs = _context.sent;\n              return _context.abrupt(\"return\", dispatch(getSuccess(imgs)));\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", dispatch(getError([_context.t0])));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/actions/mainSliderActions.ts"],"names":["userApi","fetchRequest","type","getSuccess","imgs","getError","errors","fetchMainSliderImgs","dispatch","getMainSliderImgs"],"mappings":";;AAAA,SAAQA,OAAR,QAAsB,eAAtB;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO;AAC/BC,IAAAA,IAAI,EAAE;AADyB,GAAP;AAAA,CAArB;AAGP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI;AAAA,SAAK;AAC/BF,IAAAA,IAAI,EAAE,aADyB;AAE/BE,IAAAA,IAAI,EAAJA;AAF+B,GAAL;AAAA,CAAvB;AAIP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM;AAAA,SAAK;AAC/BJ,IAAAA,IAAI,EAAE,WADyB;AAE/BI,IAAAA,MAAM,EAANA;AAF+B,GAAL;AAAA,CAAvB;AAKP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACrC;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACHA,cAAAA,QAAQ,CAACP,YAAY,EAAb,CAAR;AADG;AAAA;AAAA,qBAGoBD,OAAO,CAACS,iBAAR,EAHpB;;AAAA;AAGOL,cAAAA,IAHP;AAAA,+CAIQI,QAAQ,CAACL,UAAU,CAACC,IAAD,CAAX,CAJhB;;AAAA;AAAA;AAAA;AAAA,+CAMQI,QAAQ,CAACH,QAAQ,CAAC,aAAD,CAAT,CANhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AASH,CAVM","sourcesContent":["import {userApi} from '../../api/api'\r\n\r\n\r\nexport const fetchRequest = () => ({\r\n    type: 'FETCH_REQUEST'\r\n});\r\nexport const getSuccess = imgs => ({\r\n    type: 'GET_SUCCESS',\r\n    imgs\r\n});\r\nexport const getError = errors => ({\r\n    type: 'GET_ERROR',\r\n    errors\r\n});\r\n\r\nexport const fetchMainSliderImgs = () => {\r\n    return async (dispatch) => {\r\n        dispatch(fetchRequest());\r\n        try {\r\n            const imgs = await userApi.getMainSliderImgs();\r\n            return dispatch(getSuccess(imgs));\r\n        } catch (e) {\r\n            return dispatch(getError([e]));\r\n        }\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}