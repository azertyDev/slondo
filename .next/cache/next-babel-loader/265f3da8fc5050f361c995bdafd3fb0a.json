{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { CategoriesSlider } from \"@src/components/header/sliders/categoriesSlider/CategoriesSlider\";\nimport { userAPI } from \"@src/api/api\";\nimport { i18n } from \"@root/i18n\";\nconst sliderDataList = {\n  id: null,\n  name: '',\n  images: {\n    id: null,\n    url: {\n      extra: ''\n    }\n  },\n  icons: {\n    id: null,\n    url: {\n      extra: ''\n    }\n  },\n  childs: [],\n  has_auction: false\n};\nconst initSliders = [];\n\nfor (let i = 1; i <= 12; i++) {\n  initSliders.push(sliderDataList);\n}\n\nconst initialState = {\n  isFetch: false,\n  error: null,\n  list: initSliders\n};\nexport const CategoriesSliderContainer = props => {\n  const lang = i18n.language;\n  const {\n    0: sliderData,\n    1: setSliderData\n  } = useState(initialState);\n\n  const setSlidersData = async (state, setState, lang) => {\n    try {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        isFetch: true\n      }));\n      const newData = await userAPI.getCategories(lang);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        isFetch: false\n      }));\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        list: [...newData]\n      }));\n    } catch (e) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        error: e.message\n      }));\n    }\n  };\n\n  useEffect(() => {\n    setSlidersData(sliderData, setSliderData, lang);\n  }, []);\n  return __jsx(CategoriesSlider, {\n    t: props.t,\n    sliderData: sliderData\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/header/sliders/categoriesSlider/CategoriesSliderContainer.tsx"],"names":["React","useEffect","useState","CategoriesSlider","userAPI","i18n","sliderDataList","id","name","images","url","extra","icons","childs","has_auction","initSliders","i","push","initialState","isFetch","error","list","CategoriesSliderContainer","props","lang","language","sliderData","setSliderData","setSlidersData","state","setState","newData","getCategories","e","message","t"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,gBAAR,QAA+B,kEAA/B;AAEA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAAQC,IAAR,QAAmB,YAAnB;AAEA,MAAMC,cAA4B,GAAG;AACjCC,EAAAA,EAAE,EAAE,IAD6B;AAEjCC,EAAAA,IAAI,EAAE,EAF2B;AAGjCC,EAAAA,MAAM,EAAE;AAACF,IAAAA,EAAE,EAAE,IAAL;AAAWG,IAAAA,GAAG,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR;AAAhB,GAHyB;AAIjCC,EAAAA,KAAK,EAAE;AAACL,IAAAA,EAAE,EAAE,IAAL;AAAWG,IAAAA,GAAG,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR;AAAhB,GAJ0B;AAKjCE,EAAAA,MAAM,EAAE,EALyB;AAMjCC,EAAAA,WAAW,EAAE;AANoB,CAArC;AASA,MAAMC,WAA2B,GAAG,EAApC;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BD,EAAAA,WAAW,CAACE,IAAZ,CAAiBX,cAAjB;AACH;;AAED,MAAMY,YAAwB,GAAG;AAC7BC,EAAAA,OAAO,EAAE,KADoB;AAE7BC,EAAAA,KAAK,EAAE,IAFsB;AAG7BC,EAAAA,IAAI,EAAEN;AAHuB,CAAjC;AAMA,OAAO,MAAMO,yBAAyB,GAAIC,KAAD,IAAW;AAChD,QAAMC,IAAI,GAAGnB,IAAI,CAACoB,QAAlB;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BzB,QAAQ,CAACgB,YAAD,CAA5C;;AAEA,QAAMU,cAAc,GAAG,OAAOC,KAAP,EAAcC,QAAd,EAAwBN,IAAxB,KAAiC;AACpD,QAAI;AACAM,MAAAA,QAAQ,iCACDD,KADC;AAEJV,QAAAA,OAAO,EAAE;AAFL,SAAR;AAKA,YAAMY,OAAO,GAAG,MAAM3B,OAAO,CAAC4B,aAAR,CAAsBR,IAAtB,CAAtB;AAEAM,MAAAA,QAAQ,iCACDD,KADC;AAEJV,QAAAA,OAAO,EAAE;AAFL,SAAR;AAKAW,MAAAA,QAAQ,iCACDD,KADC;AAEJR,QAAAA,IAAI,EAAE,CACF,GAAGU,OADD;AAFF,SAAR;AAMH,KAnBD,CAmBE,OAAOE,CAAP,EAAU;AACRH,MAAAA,QAAQ,iCACDD,KADC;AAEJT,QAAAA,KAAK,EAAEa,CAAC,CAACC;AAFL,SAAR;AAIH;AACJ,GA1BD;;AA4BAjC,EAAAA,SAAS,CAAC,MAAM;AACZ2B,IAAAA,cAAc,CAACF,UAAD,EAAaC,aAAb,EAA4BH,IAA5B,CAAd;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,MAAC,gBAAD;AAAkB,IAAA,CAAC,EAAED,KAAK,CAACY,CAA3B;AAA8B,IAAA,UAAU,EAAET;AAA1C,IAAP;AACH,CArCM","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {CategoriesSlider} from \"@src/components/header/sliders/categoriesSlider/CategoriesSlider\";\r\nimport {Categories, CategoryType} from \"@root/interfaces/Categories\";\r\nimport {userAPI} from \"@src/api/api\";\r\nimport {i18n} from \"@root/i18n\";\r\n\r\nconst sliderDataList: CategoryType = {\r\n    id: null,\r\n    name: '',\r\n    images: {id: null, url: {extra: ''}},\r\n    icons: {id: null, url: {extra: ''}},\r\n    childs: [],\r\n    has_auction: false\r\n}\r\n\r\nconst initSliders: CategoryType[] = [];\r\n\r\nfor (let i = 1; i <= 12; i++) {\r\n    initSliders.push(sliderDataList);\r\n}\r\n\r\nconst initialState: Categories = {\r\n    isFetch: false,\r\n    error: null,\r\n    list: initSliders,\r\n};\r\n\r\nexport const CategoriesSliderContainer = (props) => {\r\n    const lang = i18n.language;\r\n    const [sliderData, setSliderData] = useState(initialState);\r\n\r\n    const setSlidersData = async (state, setState, lang) => {\r\n        try {\r\n            setState({\r\n                ...state,\r\n                isFetch: true\r\n            })\r\n\r\n            const newData = await userAPI.getCategories(lang);\r\n\r\n            setState({\r\n                ...state,\r\n                isFetch: false\r\n            });\r\n\r\n            setState({\r\n                ...state,\r\n                list: [\r\n                    ...newData\r\n                ]\r\n            });\r\n        } catch (e) {\r\n            setState({\r\n                ...state,\r\n                error: e.message\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSlidersData(sliderData, setSliderData, lang);\r\n    }, [])\r\n\r\n    return <CategoriesSlider t={props.t} sliderData={sliderData}/>\r\n};"]},"metadata":{},"sourceType":"module"}