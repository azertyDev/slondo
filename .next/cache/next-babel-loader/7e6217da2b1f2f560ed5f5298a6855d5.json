{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { FormikProvider } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { AdvrtForm } from './AdvrtForm';\nexport var autoSelectKeys = ['condition', 'area'];\nexport var textFieldKeys = ['area'];\nvar numberRegEx = /^[0-9]*$/;\nexport var AdvrtFormContainer = function AdvrtFormContainer(props) {\n  _s();\n\n  var createAdvrt = props.createAdvrt,\n      setIsForm = props.setIsForm,\n      isPreview = props.isPreview,\n      setIsPreview = props.setIsPreview,\n      formik = props.formik,\n      isSuccess = props.isSuccess,\n      setIsSuccess = props.setIsSuccess;\n\n  var _useSelector = useSelector(function (store) {\n    return store;\n  }),\n      locations = _useSelector.locations;\n\n  var values = formik.values,\n      errors = formik.errors,\n      touched = formik.touched,\n      setValues = formik.setValues,\n      setTouched = formik.setTouched,\n      handleBlur = formik.handleBlur,\n      handleSubmit = formik.handleSubmit; // eslint-disable-next-line prefer-const\n\n  var adParams = values.adParams,\n      auction = values.auction;\n\n  var handleBackBtn = function handleBackBtn() {\n    if (isPreview) {\n      setIsPreview(false);\n    } else {\n      setIsForm(false);\n      setIsSuccess(false);\n    }\n  };\n\n  var handleCheckboxChange = function handleCheckboxChange(valName) {\n    return function (_ref) {\n      var target = _ref.target;\n      var isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price'].some(function (fieldName) {\n        return fieldName === valName;\n      });\n\n      if (isAuctionField) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, _defineProperty({}, valName, target.checked))\n        }));\n      } else if (valName === 'price_by_now') {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, auction), {}, {\n            price_by_now: {\n              isActive: target.checked,\n              value: auction.price_by_now.value\n            }\n          })\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valName, target.checked)));\n      }\n    };\n  };\n\n  var handleParamsCheckbox = function handleParamsCheckbox(valueName, value) {\n    return function () {\n      if (adParams[valueName]) {\n        if (adParams[valueName].some(function (val) {\n          return val.id === value.id;\n        })) {\n          adParams[valueName].map(function (val, index) {\n            if (val.id === value.id) {\n              adParams[valueName].splice(index, 1);\n            }\n          });\n        } else {\n          adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, [].concat(_toConsumableArray(adParams[valueName]), [value])));\n        }\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, [value]));\n      }\n\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        adParams: adParams\n      }));\n    };\n  };\n\n  var handleMenuItem = function handleMenuItem(valueName) {\n    return function (newValue, setAnchor) {\n      return function () {\n        setAnchor(null);\n\n        if (valueName === 'currency') {\n          setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, newValue)));\n        } else if (valueName === 'duration') {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            auction: _objectSpread(_objectSpread({}, values.auction), {}, _defineProperty({}, valueName, newValue))\n          }));\n        } else {\n          // Reset sub props in values\n          Object.keys(newValue).map(function (key) {\n            if (adParams[key]) {\n              adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, key, {\n                id: null,\n                name: 'Не выбрано'\n              }));\n            }\n\n            setValues(_objectSpread(_objectSpread({}, values), {}, {\n              adParams: _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, newValue))\n            }));\n          });\n        }\n      };\n    };\n  };\n\n  var handleListItem = function handleListItem(valueName, value) {\n    return function () {\n      if (adParams[valueName] && adParams[valueName].id === value.id) {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, {\n          id: null,\n          name: 'Не выбрано'\n        }));\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, value));\n      }\n\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        adParams: adParams\n      }));\n    };\n  };\n\n  var handleInput = function handleInput(valueName) {\n    return function (_ref2) {\n      var target = _ref2.target;\n\n      if (numberRegEx.test(target.value)) {\n        if (valueName === 'price') {\n          setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, target.value)));\n        } else {\n          adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, target.value));\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            adParams: adParams\n          }));\n        }\n      }\n    };\n  };\n\n  var handleAuctionInput = function handleAuctionInput(valName) {\n    return function (_ref3) {\n      var target = _ref3.target;\n\n      if (numberRegEx.test(target.value)) {\n        if (valName === 'price_by_now') {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            auction: _objectSpread(_objectSpread({}, values.auction), {}, _defineProperty({}, valName, {\n              isActive: true,\n              value: target.value\n            }))\n          }));\n        } else {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            auction: _objectSpread(_objectSpread({}, values.auction), {}, _defineProperty({}, valName, target.value))\n          }));\n        }\n      }\n    };\n  };\n\n  var handleSwitch = function handleSwitch(_, value) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n        isActive: value\n      })\n    }));\n  };\n\n  var handleWeekDay = function handleWeekDay(value) {\n    return function () {\n      if (values.avalTime.week.some(function (val) {\n        return val.id === value.id;\n      })) {\n        values.avalTime.week.map(function (val, index) {\n          if (val.id === value.id) {\n            values.avalTime.week.splice(index, 1);\n          }\n        });\n        setValues(_objectSpread({}, values));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n            week: [].concat(_toConsumableArray(values.avalTime.week), [value])\n          })\n        }));\n      }\n    };\n  };\n\n  var handleTime = function handleTime(_ref4) {\n    var target = _ref4.target;\n    var value = target.value;\n    var regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\n    var isValid = regEx.test(value);\n\n    if (isValid) {\n      value = value.replace(/^:(.+)/, function (m) {\n        return \"00\".concat(m);\n      }).replace(/(.+):$/, function (m) {\n        return \"\".concat(m, \"00\");\n      });\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, _defineProperty({}, target.name, value))\n      }));\n    }\n  };\n\n  console.log(errors);\n  return __jsx(FormikProvider, {\n    value: formik\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(AdvrtForm, {\n    isSuccess: isSuccess,\n    locations: locations,\n    isPreview: isPreview,\n    setIsPreview: setIsPreview,\n    createAdvrt: createAdvrt,\n    errors: errors,\n    touched: touched,\n    setTouched: setTouched,\n    values: values,\n    setValues: setValues,\n    handleBlur: handleBlur,\n    handleTime: handleTime,\n    handleSwitch: handleSwitch,\n    handleWeekDay: handleWeekDay,\n    handleBackBtn: handleBackBtn,\n    handleMenuItem: handleMenuItem,\n    handleListItem: handleListItem,\n    handleInput: handleInput,\n    handleAuctionInput: handleAuctionInput,\n    handleParamsCheckbox: handleParamsCheckbox,\n    handleCheckboxChange: handleCheckboxChange\n  })));\n};\n\n_s(AdvrtFormContainer, \"ZFmjFBT7yWnOsHasemC59VJKYL0=\", false, function () {\n  return [useSelector];\n});\n\n_c = AdvrtFormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdvrtFormContainer\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/advrt_form/AdvrtFormContainer.tsx"],"names":["React","FormikProvider","useSelector","AdvrtForm","autoSelectKeys","textFieldKeys","numberRegEx","AdvrtFormContainer","props","createAdvrt","setIsForm","isPreview","setIsPreview","formik","isSuccess","setIsSuccess","store","locations","values","errors","touched","setValues","setTouched","handleBlur","handleSubmit","adParams","auction","handleBackBtn","handleCheckboxChange","valName","target","isAuctionField","some","fieldName","checked","price_by_now","isActive","value","handleParamsCheckbox","valueName","val","id","map","index","splice","handleMenuItem","newValue","setAnchor","Object","keys","key","name","handleListItem","handleInput","test","handleAuctionInput","handleSwitch","_","avalTime","handleWeekDay","week","handleTime","regEx","isValid","replace","m","console","log"],"mappings":"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","sourcesContent":["import React, {FC} from 'react';\r\nimport {FormikProvider} from \"formik\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AdvrtForm} from './AdvrtForm';\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\n\r\n\r\nexport const autoSelectKeys = [\r\n    'condition',\r\n    'area'\r\n];\r\n\r\nexport const textFieldKeys = [\r\n    'area'\r\n];\r\n\r\nconst numberRegEx = /^[0-9]*$/;\r\n\r\n\r\nexport const AdvrtFormContainer: FC<any> = (props) => {\r\n    const {\r\n        createAdvrt,\r\n        setIsForm,\r\n        isPreview,\r\n        setIsPreview,\r\n        formik,\r\n        isSuccess,\r\n        setIsSuccess,\r\n    } = props;\r\n\r\n    const {locations} = useSelector((store: RootState) => store);\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        touched,\r\n        setValues,\r\n        setTouched,\r\n        handleBlur,\r\n        handleSubmit,\r\n    } = formik;\r\n\r\n    // eslint-disable-next-line prefer-const\r\n    let {adParams, auction} = values;\r\n\r\n    const handleBackBtn = () => {\r\n        if (isPreview) {\r\n            setIsPreview(false);\r\n        } else {\r\n            setIsForm(false);\r\n            setIsSuccess(false);\r\n        }\r\n    };\r\n\r\n    const handleCheckboxChange = (valName) => ({target}) => {\r\n        const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price']\r\n            .some(fieldName => fieldName === valName);\r\n\r\n        if (isAuctionField) {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valName]: target.checked\r\n                }\r\n            });\r\n        } else if (valName === 'price_by_now') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...auction,\r\n                    price_by_now: {\r\n                        isActive: target.checked,\r\n                        value: auction.price_by_now.value\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            setValues({...values, [valName]: target.checked});\r\n        }\r\n    };\r\n\r\n    const handleParamsCheckbox = (valueName, value) => () => {\r\n        if (adParams[valueName]) {\r\n            if (adParams[valueName].some(val => val.id === value.id)) {\r\n                adParams[valueName].map((val, index) => {\r\n                    if (val.id === value.id) {\r\n                        adParams[valueName].splice(index, 1);\r\n                    }\r\n                });\r\n            } else {\r\n                adParams = {\r\n                    ...adParams,\r\n                    [valueName]: [...adParams[valueName], value]\r\n                };\r\n            }\r\n        } else {\r\n            adParams = {...adParams, [valueName]: [value]};\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n        setAnchor(null);\r\n\r\n        if (valueName === 'currency') {\r\n            setValues({\r\n                ...values,\r\n                [valueName]: newValue\r\n            });\r\n        } else if (valueName === 'duration') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valueName]: newValue\r\n                }\r\n            });\r\n        } else {\r\n            // Reset sub props in values\r\n            Object.keys(newValue).map(key => {\r\n                if (adParams[key]) {\r\n                    adParams = {\r\n                        ...adParams,\r\n                        [key]: {id: null, name: 'Не выбрано'}\r\n                    };\r\n                }\r\n                setValues({\r\n                    ...values,\r\n                    adParams: {\r\n                        ...adParams,\r\n                        [valueName]: newValue\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleListItem = (valueName, value) => () => {\r\n        if (adParams[valueName] && adParams[valueName].id === value.id) {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: {id: null, name: 'Не выбрано'}\r\n            };\r\n        } else {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: value\r\n            };\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleInput = (valueName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valueName === 'price') {\r\n                setValues({...values, [valueName]: target.value})\r\n            } else {\r\n                adParams = {...adParams, [valueName]: target.value};\r\n                setValues({...values, adParams})\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleAuctionInput = (valName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valName === 'price_by_now') {\r\n                setValues({\r\n                    ...values,\r\n                    auction: {\r\n                        ...values.auction,\r\n                        [valName]: {\r\n                            isActive: true,\r\n                            value: target.value\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    auction: {\r\n                        ...values.auction,\r\n                        [valName]: target.value\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSwitch = (_, value) => {\r\n        setValues({\r\n            ...values,\r\n            avalTime: {\r\n                ...values.avalTime,\r\n                isActive: value\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleWeekDay = (value) => () => {\r\n        if (values.avalTime.week.some(val => val.id === value.id)) {\r\n            values.avalTime.week.map((val, index) => {\r\n                if (val.id === value.id) {\r\n                    values.avalTime.week.splice(index, 1)\r\n                }\r\n            });\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    week: [\r\n                        ...values.avalTime.week,\r\n                        value\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTime = ({target}) => {\r\n        let {value} = target;\r\n        const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\r\n        const isValid = regEx.test(value);\r\n\r\n        if (isValid) {\r\n            value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    [target.name]: value\r\n                }\r\n            });\r\n        }\r\n    };\r\n    console.log(errors)\r\n    return (\r\n        <FormikProvider value={formik}>\r\n            <form onSubmit={handleSubmit}>\r\n                <AdvrtForm\r\n                    isSuccess={isSuccess}\r\n                    locations={locations}\r\n                    isPreview={isPreview}\r\n                    setIsPreview={setIsPreview}\r\n                    createAdvrt={createAdvrt}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    setTouched={setTouched}\r\n                    values={values}\r\n                    setValues={setValues}\r\n                    handleBlur={handleBlur}\r\n                    handleTime={handleTime}\r\n                    handleSwitch={handleSwitch}\r\n                    handleWeekDay={handleWeekDay}\r\n                    handleBackBtn={handleBackBtn}\r\n                    handleMenuItem={handleMenuItem}\r\n                    handleListItem={handleListItem}\r\n                    handleInput={handleInput}\r\n                    handleAuctionInput={handleAuctionInput}\r\n                    handleParamsCheckbox={handleParamsCheckbox}\r\n                    handleCheckboxChange={handleCheckboxChange}\r\n                />\r\n            </form>\r\n        </FormikProvider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}