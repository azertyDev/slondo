{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { userAPI } from \"@src/api/api\";\nimport { i18n } from '@root/i18n';\nimport { useRouter } from 'next/router';\nimport { ShowAdLot } from \"@src/components/advertisement/show_advertisement/ShowAdLot\";\nconst initValues = {\n  id: null,\n  name: ''\n};\nconst initialAdData = {\n  isFetch: false,\n  error: null,\n  data: {\n    id: null,\n    title: '',\n    currency: initValues,\n    condition: initValues,\n    created_at: null,\n    expiration_at: null,\n    number_of_views: null,\n    images: [],\n    description: '',\n    region: initValues,\n    city: initValues,\n    district: initValues\n  }\n};\nexport const ShowAdLotContainer = ({\n  t\n}) => {\n  const {\n    0: adData,\n    1: setAdData\n  } = useState(initialAdData);\n  const adsId = useRouter().query.id;\n  const lang = i18n.language;\n\n  const fetchAdData = async () => {\n    try {\n      setAdData(_objectSpread(_objectSpread({}, adData), {}, {\n        isFetch: true\n      }));\n\n      const _await$userAPI$getAdd = await userAPI.getAddById(adsId, lang),\n            {\n        title,\n        currency,\n        condition,\n        images,\n        description,\n        region,\n        city,\n        district\n      } = _await$userAPI$getAdd,\n            otherData = _objectWithoutProperties(_await$userAPI$getAdd, [\"title\", \"currency\", \"condition\", \"images\", \"description\", \"region\", \"city\", \"district\"]);\n\n      setAdData(_objectSpread(_objectSpread({}, adData), {}, {\n        isFetch: false\n      }));\n      setAdData(_objectSpread(_objectSpread({}, adData), {}, {\n        data: _objectSpread({\n          title,\n          images,\n          description,\n          currency: currency !== null && currency !== void 0 ? currency : initValues,\n          condition: condition !== null && condition !== void 0 ? condition : initValues,\n          region: region !== null && region !== void 0 ? region : initValues,\n          city: city !== null && city !== void 0 ? city : initValues,\n          district: district !== null && district !== void 0 ? district : initValues\n        }, otherData)\n      }));\n    } catch (e) {\n      setAdData(_objectSpread(_objectSpread({}, adData), {}, {\n        error: e.message\n      }));\n    }\n  };\n\n  useEffect(() => {\n    fetchAdData();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(ShowAdLot, {\n    adData: adData,\n    t: t\n  }));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/show_advertisement/showAdLotContainer.tsx"],"names":["React","useEffect","useState","userAPI","i18n","useRouter","ShowAdLot","initValues","id","name","initialAdData","isFetch","error","data","title","currency","condition","created_at","expiration_at","number_of_views","images","description","region","city","district","ShowAdLotContainer","t","adData","setAdData","adsId","query","lang","language","fetchAdData","getAddById","otherData","e","message"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {userAPI} from \"@src/api/api\";\r\nimport {i18n} from '@root/i18n';\r\nimport {useRouter} from 'next/router';\r\nimport {ShowAdLot} from \"@src/components/advertisement/show_advertisement/ShowAdLot\";\r\n\r\n\r\nconst initValues = {id: null, name: ''};\r\n\r\nconst initialAdData = {\r\n    isFetch: false,\r\n    error: null,\r\n    data: {\r\n        id: null,\r\n        title: '',\r\n        currency: initValues,\r\n        condition: initValues,\r\n        created_at: null,\r\n        expiration_at: null,\r\n        number_of_views: null,\r\n        images: [],\r\n        description: '',\r\n        region: initValues,\r\n        city: initValues,\r\n        district: initValues,\r\n    },\r\n};\r\n\r\nexport const ShowAdLotContainer = ({t}) => {\r\n    const [adData, setAdData] = useState(initialAdData);\r\n    const adsId = useRouter().query.id;\r\n    const lang = i18n.language;\r\n\r\n    const fetchAdData = async () => {\r\n        try {\r\n            setAdData({\r\n                ...adData,\r\n                isFetch: true\r\n            });\r\n\r\n            const {\r\n                title,\r\n                currency,\r\n                condition,\r\n                images,\r\n                description,\r\n                region,\r\n                city,\r\n                district,\r\n                ...otherData\r\n            } = await userAPI.getAddById(adsId, lang);\r\n\r\n            setAdData({\r\n                ...adData,\r\n                isFetch: false\r\n            });\r\n\r\n            setAdData({\r\n                ...adData,\r\n                data: {\r\n                    title,\r\n                    images,\r\n                    description,\r\n                    currency: currency ?? initValues,\r\n                    condition: condition ?? initValues,\r\n                    region: region ?? initValues,\r\n                    city: city ?? initValues,\r\n                    district: district ?? initValues,\r\n                    ...otherData\r\n                }\r\n            });\r\n\r\n        } catch (e) {\r\n            setAdData({\r\n                ...adData,\r\n                error: e.message\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAdData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <ShowAdLot adData={adData} t={t}/>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}