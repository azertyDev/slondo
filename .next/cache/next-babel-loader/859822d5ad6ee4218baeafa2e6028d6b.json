{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Image from 'next/image';\nexport const CustomImageTag = (_ref) => {\n  let {\n    src\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"src\"]);\n\n  return __jsx(Image, _extends({}, props, {\n    src: src,\n    unsized: true\n  }));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/custom_image_tag/CustomImageTag.tsx"],"names":["React","Image","CustomImageTag","src","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,UAAqB;AAAA,MAApB;AAACC,IAAAA;AAAD,GAAoB;AAAA,MAAXC,KAAW;;AAC/C,SAAO,MAAC,KAAD,eAAWA,KAAX;AAAkB,IAAA,GAAG,EAAED,GAAvB;AAA4B,IAAA,OAAO;AAAnC,KAAP;AACH,CAFM","sourcesContent":["import React from 'react';\r\nimport Image from 'next/image';\r\n\r\nexport const CustomImageTag = ({src, ...props}) => {\r\n    return <Image {...props} src={src} unsized/>;\r\n};"]},"metadata":{},"sourceType":"module"}