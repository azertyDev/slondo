{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchCategories } from '../thunks/categoriesThunk';\nconst initialState = {\n  isFetch: false,\n  isAuth: false,\n  error: null\n};\nconst advertisementSlice = createSlice({\n  name: 'advertisement',\n  initialState,\n  reducers: {\n    setIsAuth: (state, action) => {\n      state.isAuth = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchCategories.fulfilled, state => {\n      state.isFetch = false;\n      state.isAuth = true;\n    });\n    builder.addCase(fetchCategories.rejected, (state, action) => {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  setIsAuth\n} = advertisementSlice.actions;\nexport const advertisementReducer = advertisementSlice.reducer;","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/slices/categoriesSlice.ts"],"names":["createSlice","fetchCategories","initialState","isFetch","isAuth","error","advertisementSlice","name","reducers","setIsAuth","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","advertisementReducer","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,eAAR,QAA8B,2BAA9B;AASA,MAAMC,YAAuB,GAAG;AAC5BC,EAAAA,OAAO,EAAE,KADmB;AAE5BC,EAAAA,MAAM,EAAE,KAFoB;AAG5BC,EAAAA,KAAK,EAAE;AAHqB,CAAhC;AAMA,MAAMC,kBAAkB,GAAGN,WAAW,CAAC;AACnCO,EAAAA,IAAI,EAAE,eAD6B;AAEnCL,EAAAA,YAFmC;AAGnCM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACN,MAAN,GAAeO,MAAM,CAACC,OAAtB;AACH;AAHK,GAHyB;AAQnCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBd,eAAe,CAACe,OAAhC,EAA0CN,KAAD,IAAW;AAChDA,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACAO,MAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AACH,KAHD;AAIAS,IAAAA,OAAO,CAACC,OAAR,CAAgBd,eAAe,CAACgB,SAAhC,EAA4CP,KAAD,IAAW;AAClDA,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACN,MAAN,GAAe,IAAf;AACH,KAHD;AAIAU,IAAAA,OAAO,CAACC,OAAR,CAAgBd,eAAe,CAACiB,QAAhC,EAA0C,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACzDD,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;AACH,KAHD;AAIH;AArBkC,CAAD,CAAtC;AAwBA,OAAO,MAAM;AAACH,EAAAA;AAAD,IAAcH,kBAAkB,CAACa,OAAvC;AACP,OAAO,MAAMC,oBAAoB,GAAGd,kBAAkB,CAACe,OAAhD","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\nimport {fetchCategories} from '../thunks/categoriesThunk'\r\n\r\n\r\nexport type AuthTypes = {\r\n    isFetch: boolean,\r\n    isAuth: boolean,\r\n    error?: any\r\n};\r\n\r\nconst initialState: AuthTypes = {\r\n    isFetch: false,\r\n    isAuth: false,\r\n    error: null\r\n};\r\n\r\nconst advertisementSlice = createSlice({\r\n    name: 'advertisement',\r\n    initialState,\r\n    reducers: {\r\n        setIsAuth: (state, action) => {\r\n            state.isAuth = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchCategories.pending, (state) => {\r\n            state.isFetch = true;\r\n            state.error = null;\r\n        })\r\n        builder.addCase(fetchCategories.fulfilled, (state) => {\r\n            state.isFetch = false;\r\n            state.isAuth = true;\r\n        })\r\n        builder.addCase(fetchCategories.rejected, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = action.payload;\r\n        })\r\n    }\r\n});\r\n\r\nexport const {setIsAuth} = advertisementSlice.actions;\r\nexport const advertisementReducer = advertisementSlice.reducer;"]},"metadata":{},"sourceType":"module"}