{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { CustomSlider } from \"@src/components/elements/custom_slider/CustomSlider\";\nimport { settings } from './sliderSettings';\nimport { Link } from \"@root/i18n\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useStyles } from './useStyles';\nimport { useSelector } from \"react-redux\";\nexport const CategoriesSlider = ({\n  t\n}) => {\n  const {\n    isFetch,\n    error,\n    list\n  } = useSelector(store => store.categories);\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    className: \"title\",\n    variant: \"h2\"\n  }, t('popularCategories')), __jsx(\"div\", {\n    className: \"category-slider\"\n  }, __jsx(CustomSlider, settings, error ? __jsx(Typography, {\n    className: \"error-text\"\n  }, error) : list.map(category => isFetch ? __jsx(\"div\", {\n    className: \"category\",\n    key: category.id\n  }, __jsx(Skeleton, {\n    variant: \"circle\",\n    width: 100,\n    height: 100\n  }), __jsx(Skeleton, {\n    variant: \"text\",\n    width: 100,\n    height: 16\n  })) : __jsx(Link, {\n    href: \"#\",\n    key: category.id\n  }, __jsx(\"a\", {\n    title: category.name\n  }, __jsx(\"div\", {\n    className: \"category\"\n  }, __jsx(\"div\", {\n    className: \"bg-layer\"\n  }, __jsx(\"div\", {\n    className: \"medium\"\n  }, __jsx(\"img\", {\n    src: category.images.url.default,\n    alt: \"category\"\n  }))), __jsx(\"span\", null, category.name))))))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/main/categoriesSlider/CategoriesSlider.tsx"],"names":["React","Typography","CustomSlider","settings","Link","Skeleton","useStyles","useSelector","CategoriesSlider","t","isFetch","error","list","store","categories","classes","root","map","category","id","name","images","url","default"],"mappings":";AAAA,OAAOA,KAAP,MAAwB,OAAxB;AAEA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,YAAR,QAA2B,qDAA3B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,IAAR,QAAmB,YAAnB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAIA,OAAO,MAAMC,gBAA2B,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAS;AAChD,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBL,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACC,UAA7B,CAA1C;AAEA,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAES,OAAO,CAACC;AAAxB,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,OAAtB;AAA8B,IAAA,OAAO,EAAC;AAAtC,KAA4CP,CAAC,CAAC,mBAAD,CAA7C,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,YAAD,EAAkBN,QAAlB,EACKQ,KAAK,GACA,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC;AAAtB,KAAoCA,KAApC,CADA,GAEAC,IAAI,CAACK,GAAL,CAASC,QAAQ,IACfR,OAAO,GACD;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEQ,QAAQ,CAACC;AAAxC,KACE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC,QAAlB;AAA2B,IAAA,KAAK,EAAE,GAAlC;AAAuC,IAAA,MAAM,EAAE;AAA/C,IADF,EAEE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC,MAAlB;AAAyB,IAAA,KAAK,EAAE,GAAhC;AAAqC,IAAA,MAAM,EAAE;AAA7C,IAFF,CADC,GAKD,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAe,IAAA,GAAG,EAAED,QAAQ,CAACC;AAA7B,KACE;AAAG,IAAA,KAAK,EAAED,QAAQ,CAACE;AAAnB,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,GAAG,EAAEF,QAAQ,CAACG,MAAT,CAAgBC,GAAhB,CAAoBC,OAA9B;AAAuC,IAAA,GAAG,EAAC;AAA3C,IADJ,CADJ,CADJ,EAMI,oBAAOL,QAAQ,CAACE,IAAhB,CANJ,CADJ,CADF,CANR,CAHV,CADJ,CAFJ,CADJ;AA8BH,CAlCM","sourcesContent":["import React, {FC} from 'react';\r\nimport {WithT} from \"i18next\";\r\nimport {Typography} from '@material-ui/core';\r\nimport {CustomSlider} from \"@src/components/elements/custom_slider/CustomSlider\";\r\nimport {settings} from './sliderSettings';\r\nimport {Link} from \"@root/i18n\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport {useStyles} from './useStyles';\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\n\r\n\r\nexport const CategoriesSlider: FC<WithT> = ({t}) => {\r\n    const {isFetch, error, list} = useSelector((store: RootState) => store.categories);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography className='title' variant=\"h2\">{t('popularCategories')}</Typography>\r\n            <div className=\"category-slider\">\r\n                <CustomSlider {...settings}>\r\n                    {error\r\n                        ? <Typography className=\"error-text\">{error}</Typography>\r\n                        : list.map(category => (\r\n                            isFetch\r\n                                ? <div className='category' key={category.id}>\r\n                                    <Skeleton variant=\"circle\" width={100} height={100}/>\r\n                                    <Skeleton variant=\"text\" width={100} height={16}/>\r\n                                </div>\r\n                                : <Link href=\"#\" key={category.id}>\r\n                                    <a title={category.name}>\r\n                                        <div className='category'>\r\n                                            <div className=\"bg-layer\">\r\n                                                <div className=\"medium\">\r\n                                                    <img src={category.images.url.default} alt=\"category\"/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <span>{category.name}</span>\r\n                                        </div>\r\n                                    </a>\r\n                                </Link>\r\n                        ))}\r\n                </CustomSlider>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}