{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport { TextField, FormControl } from '@material-ui/core'; // styles\n\nimport { useStyles } from './useStyles';\n\nfunction TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref) {\n      inputRef(_ref ? _ref.inputElement : null);\n    },\n    mask: [/[1-9]/] // placeholderChar={'+(998) ___ __ __'}\n    ,\n    showMask: true\n  }));\n}\n\n_c = TextMaskCustom;\nexport var FormattedInput = function FormattedInput(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    textmask: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(FormControl, {\n    fullWidth: true\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    value: values.textmask,\n    onChange: handleChange,\n    name: \"textmask\",\n    id: \"formatted-text-mask-input\",\n    inputComponent: TextMaskCustom\n  })));\n};\n\n_s(FormattedInput, \"TVFElMGG8j4tqTeGjSswL0GcxJs=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = FormattedInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextMaskCustom\");\n$RefreshReg$(_c2, \"FormattedInput\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/maskedInput/MaskedInput.tsx"],"names":["React","MaskedInput","TextField","FormControl","useStyles","TextMaskCustom","props","inputRef","other","ref","inputElement","FormattedInput","classes","useState","textmask","values","setValues","handleChange","event","target","name","value","root"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,mBAAvC,C,CAEA;;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,MACnBC,QADmB,GACID,KADJ,CACnBC,QADmB;AAAA,MACNC,KADM,4BACIF,KADJ;;AAG3B,SACI,MAAC,WAAD,eACQE,KADR;AAEI,IAAA,GAAG,EAAE,aAACC,IAAD,EAAS;AACVF,MAAAA,QAAQ,CAACE,IAAG,GAAGA,IAAG,CAACC,YAAP,GAAsB,IAA1B,CAAR;AACH,KAJL;AAKI,IAAA,IAAI,EAAE,CAAC,OAAD,CALV,CAMI;AANJ;AAOI,IAAA,QAAQ;AAPZ,KADJ;AAWH;;KAdQL,c;AAgBT,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACL,KAAD,EAAW;AAAA;;AACrC,MAAMM,OAAO,GAAGR,SAAS,EAAzB;;AADqC,wBAETJ,KAAK,CAACa,QAAN,CAAe;AACvCC,IAAAA,QAAQ,EAAE;AAD6B,GAAf,CAFS;AAAA;AAAA,MAE9BC,MAF8B;AAAA,MAEtBC,SAFsB;;AAMrC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5BF,IAAAA,SAAS,iCACFD,MADE,2BAEJG,KAAK,CAACC,MAAN,CAAaC,IAFT,EAEgBF,KAAK,CAACC,MAAN,CAAaE,KAF7B,GAAT;AAIH,GALD;;AAOA,SACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACU;AAAxB,KACI,MAAC,WAAD;AAAa,IAAA,SAAS;AAAtB,KACI,MAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAEP,MAAM,CAACD,QAFlB;AAGI,IAAA,QAAQ,EAAEG,YAHd;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,EAAE,EAAC,2BALP;AAMI,IAAA,cAAc,EAAEZ;AANpB,IADJ,CADJ,CADJ;AAcH,CA3BM;;GAAMM,c;UACOP,S;;;MADPO,c","sourcesContent":["import React from 'react'\r\nimport MaskedInput from 'react-text-mask'\r\nimport { TextField, FormControl } from '@material-ui/core'\r\n\r\n// styles\r\nimport { useStyles } from './useStyles'\r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null)\r\n            }}\r\n            mask={[/[1-9]/]}\r\n            // placeholderChar={'+(998) ___ __ __'}\r\n            showMask\r\n        />\r\n    )\r\n}\r\n\r\nexport const FormattedInput = (props) => {\r\n    const classes = useStyles()\r\n    const [values, setValues] = React.useState({\r\n        textmask: '',\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        setValues({\r\n            ...values,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FormControl fullWidth>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    value={values.textmask}\r\n                    onChange={handleChange}\r\n                    name=\"textmask\"\r\n                    id=\"formatted-text-mask-input\"\r\n                    inputComponent={TextMaskCustom}\r\n                />\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}