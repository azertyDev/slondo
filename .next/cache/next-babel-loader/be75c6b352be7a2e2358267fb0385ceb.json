{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { setErrorMsgAction } from \"@src/redux/slices/errorSlice\";\nexport const stateHelper = async (state, setState, fetchedData, dispatch) => {\n  try {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      isFetch: true\n    }));\n    const ancmnts = await fetchedData;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      ancmnts,\n      isFetch: false\n    }));\n  } catch (e) {\n    dispatch(setErrorMsgAction(e.message));\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      isFetch: false\n    }));\n  }\n};\nexport const categoryDataNormalization = categoryList => {\n  return categoryList.map(category => {\n    const childs = category.childs.map(child => _objectSpread(_objectSpread({}, child), {}, {\n      parentId: category.id\n    }));\n    return _objectSpread(_objectSpread({}, category), {}, {\n      childs\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/helpers.ts"],"names":["setErrorMsgAction","stateHelper","state","setState","fetchedData","dispatch","isFetch","ancmnts","e","message","categoryDataNormalization","categoryList","map","category","childs","child","parentId","id"],"mappings":";;;;;;AAAA,SAAQA,iBAAR,QAAgC,8BAAhC;AAIA,OAAO,MAAMC,WAAW,GAAG,OAAOC,KAAP,EAAcC,QAAd,EAAwBC,WAAxB,EAAqCC,QAArC,KAAkD;AACzE,MAAI;AACAF,IAAAA,QAAQ,iCAAKD,KAAL;AAAYI,MAAAA,OAAO,EAAE;AAArB,OAAR;AAEA,UAAMC,OAAO,GAAG,MAAMH,WAAtB;AAEAD,IAAAA,QAAQ,iCAAKD,KAAL;AAAYK,MAAAA,OAAZ;AAAqBD,MAAAA,OAAO,EAAE;AAA9B,OAAR;AACH,GAND,CAME,OAAOE,CAAP,EAAU;AACRH,IAAAA,QAAQ,CAACL,iBAAiB,CAACQ,CAAC,CAACC,OAAH,CAAlB,CAAR;AACAN,IAAAA,QAAQ,iCAAKD,KAAL;AAAYI,MAAAA,OAAO,EAAE;AAArB,OAAR;AACH;AACJ,CAXM;AAaP,OAAO,MAAMI,yBAAyB,GAAIC,YAAD,IAAkD;AACvF,SAAOA,YAAY,CAACC,GAAb,CAAiBC,QAAQ,IAAI;AAChC,UAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAT,CAAgBF,GAAhB,CAAoBG,KAAK,oCAASA,KAAT;AAAgBC,MAAAA,QAAQ,EAAEH,QAAQ,CAACI;AAAnC,MAAzB,CAAf;AACA,2CAAWJ,QAAX;AAAqBC,MAAAA;AAArB;AACH,GAHM,CAAP;AAIH,CALM","sourcesContent":["import {setErrorMsgAction} from \"@src/redux/slices/errorSlice\";\r\nimport {CategoryType} from \"@root/interfaces/Categories\";\r\n\r\n\r\nexport const stateHelper = async (state, setState, fetchedData, dispatch) => {\r\n    try {\r\n        setState({...state, isFetch: true});\r\n\r\n        const ancmnts = await fetchedData;\r\n\r\n        setState({...state, ancmnts, isFetch: false});\r\n    } catch (e) {\r\n        dispatch(setErrorMsgAction(e.message));\r\n        setState({...state, isFetch: false});\r\n    }\r\n};\r\n\r\nexport const categoryDataNormalization = (categoryList: CategoryType[]): CategoryType[] => {\r\n    return categoryList.map(category => {\r\n        const childs = category.childs.map(child => ({...child, parentId: category.id}));\r\n        return {...category, childs};\r\n    })\r\n};"]},"metadata":{},"sourceType":"module"}