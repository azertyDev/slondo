{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Grid, Typography, Hidden, Tabs, Tab } from '@material-ui/core';\nimport { CardItem } from '@src/components/elements/card/Card';\nimport { Banner } from '@src/components/elements/banner/Banner';\nimport { CustomTabPanel } from '@src/components/elements/custom_tab_panel/CustomTabPanel';\nimport { Link } from '@root/i18n';\nimport { CustomPagination } from \"../../elements/custom_pagination/CustomPagination\";\nimport { useStyles } from './useStyles';\nimport CyrillicToTranslit from 'cyrillic-to-translit-js';\nvar transform = new CyrillicToTranslit().transform;\nvar formattedUrl = /[\\-\\,\\.\\;\\\"\\']+/g;\nexport var MainContent = function MainContent(props) {\n  _s();\n\n  var t = props.t,\n      tabValue = props.tabValue,\n      handleTabChange = props.handleTabChange,\n      adCardData = props.adCardData,\n      lotCardData = props.lotCardData;\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"\\u0412\\u0441\\u0435 \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    md: 9,\n    xs: 12,\n    item: true\n  }, __jsx(Tabs, {\n    value: tabValue,\n    onChange: handleTabChange,\n    indicatorColor: \"primary\",\n    className: \"tabs\",\n    variant: \"fullWidth\"\n  }, __jsx(Tab, {\n    label: __jsx(Typography, {\n      variant: \"h6\"\n    }, t('allAds')),\n    value: 0\n  }), __jsx(Tab, {\n    label: __jsx(Typography, {\n      variant: \"h6\"\n    }, t('allLots')),\n    value: 1\n  })))), __jsx(Grid, {\n    container: true,\n    className: \"cards-container\"\n  }, __jsx(Grid, {\n    item: true,\n    md: 9,\n    xs: 12\n  }, __jsx(CustomTabPanel, {\n    value: tabValue,\n    index: 0\n  }, adCardData.error ? __jsx(Typography, {\n    variant: \"subtitle1\",\n    className: \"error-text\"\n  }, adCardData.error) : __jsx(\"div\", {\n    className: \"ads-wrapper\"\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    spacing: 1\n  }, adCardData.cardData.data.map(function (item, index) {\n    var translatedTitle = transform(item.title).toLowerCase().replace(formattedUrl, ' ').replace(/\\s+/g, '-');\n    return __jsx(Grid, {\n      key: index,\n      xs: 6,\n      sm: 4,\n      lg: 3,\n      item: true\n    }, __jsx(Link, {\n      href: \"/\".concat(translatedTitle, \"-\").concat(item.id)\n    }, __jsx(\"a\", null, __jsx(CardItem, _extends({}, item, {\n      isFetch: adCardData.isFetch,\n      cardType: t('ad'),\n      className: \"card-item\"\n    })))));\n  })))), __jsx(CustomTabPanel, {\n    value: tabValue,\n    index: 1\n  }, lotCardData.error ? __jsx(Typography, {\n    variant: \"subtitle1\",\n    className: \"error-text\"\n  }, lotCardData.error) : __jsx(\"div\", {\n    className: \"lots-wrapper\"\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    spacing: 2\n  }, lotCardData.cardData.data.map(function (item, index) {\n    var translatedTitle = transform(item.title).replace(formattedUrl, '-').toLowerCase();\n    return __jsx(Grid, {\n      key: index,\n      xs: 6,\n      sm: 4,\n      lg: 3,\n      item: true\n    }, __jsx(Link, {\n      href: \"/\".concat(translatedTitle, \"-\").concat(item.id)\n    }, __jsx(\"a\", null, __jsx(CardItem, _extends({}, item, {\n      isFetch: lotCardData.isFetch,\n      cardType: t('lot'),\n      className: \"card-item\"\n    })))));\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    justify: \"center\"\n  }, !(lotCardData.error || adCardData.error) && __jsx(CustomPagination, {\n    count: props.pageCount,\n    currentPage: props.currentPage,\n    handlePaginationPage: props.handlePaginationPage\n  }))), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    md: 3,\n    direction: \"column\",\n    className: classes.adBanner\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Banner, {\n    height: \"345px\"\n  }))))));\n};\n\n_s(MainContent, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = MainContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/mainContent/MainContent.tsx"],"names":["React","Grid","Typography","Hidden","Tabs","Tab","CardItem","Banner","CustomTabPanel","Link","CustomPagination","useStyles","CyrillicToTranslit","transform","formattedUrl","MainContent","props","t","tabValue","handleTabChange","adCardData","lotCardData","classes","root","error","cardData","data","map","item","index","translatedTitle","title","toLowerCase","replace","id","isFetch","pageCount","currentPage","handlePaginationPage","adBanner"],"mappings":"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","sourcesContent":["import React, {FC} from 'react';\r\nimport {Grid, Typography, Hidden, Tabs, Tab} from '@material-ui/core';\r\nimport {CardItem} from '@src/components/elements/card/Card';\r\nimport {Banner} from '@src/components/elements/banner/Banner';\r\nimport {CustomTabPanel} from '@src/components/elements/custom_tab_panel/CustomTabPanel';\r\nimport {Link} from '@root/i18n';\r\nimport {TFunction} from \"i18next\";\r\nimport {CardData} from \"@root/interfaces/CardData\";\r\nimport {CustomPagination} from \"../../elements/custom_pagination/CustomPagination\";\r\nimport {useStyles} from './useStyles';\r\nimport CyrillicToTranslit from 'cyrillic-to-translit-js';\r\n\r\n\r\nconst transform = new CyrillicToTranslit().transform;\r\nconst formattedUrl = /[\\-\\,\\.\\;\\\"\\']+/g;\r\n\r\ninterface MainContentProps {\r\n    t: TFunction;\r\n    tabValue: number;\r\n    handleTabChange: (_: unknown, newValue: number) => void;\r\n    // handleShowMore: () => void;\r\n    adCardData: CardData;\r\n    lotCardData: CardData;\r\n    pageCount: number;\r\n    currentPage: number;\r\n    handlePaginationPage: (_: unknown, pageNumber: number) => void;\r\n}\r\n\r\nexport const MainContent: FC<MainContentProps> = (props) => {\r\n    const {t, tabValue, handleTabChange, adCardData, lotCardData} = props;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h4\">Все объявления</Typography>\r\n            <Grid container>\r\n                <Grid md={9} xs={12} item>\r\n                    <Tabs\r\n                        value={tabValue}\r\n                        onChange={handleTabChange}\r\n                        indicatorColor=\"primary\"\r\n                        className=\"tabs\"\r\n                        variant=\"fullWidth\"\r\n                    >\r\n                        <Tab\r\n                            label={\r\n                                <Typography variant=\"h6\">\r\n                                    {t('allAds')}\r\n                                </Typography>\r\n                            }\r\n                            value={0}\r\n                        />\r\n                        <Tab\r\n                            label={\r\n                                <Typography variant=\"h6\">\r\n                                    {t('allLots')}\r\n                                </Typography>\r\n                            }\r\n                            value={1}\r\n                        />\r\n                    </Tabs>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className=\"cards-container\">\r\n                <Grid item md={9} xs={12}>\r\n                    <CustomTabPanel value={tabValue} index={0}>\r\n                        {\r\n                            adCardData.error\r\n                                ? <Typography variant=\"subtitle1\" className=\"error-text\">{adCardData.error}</Typography>\r\n                                : <div className=\"ads-wrapper\">\r\n                                    <Grid item container spacing={1}>\r\n                                        {adCardData.cardData.data.map((item, index) => {\r\n                                            const translatedTitle =\r\n                                                transform(item.title)\r\n                                                    .toLowerCase()\r\n                                                    .replace(formattedUrl, ' ')\r\n                                                    .replace(/\\s+/g, '-');\r\n\r\n                                            return (\r\n                                                <Grid\r\n                                                    key={index}\r\n                                                    xs={6}\r\n                                                    sm={4}\r\n                                                    lg={3}\r\n                                                    item\r\n                                                >\r\n                                                    <Link href={`/${translatedTitle}-${item.id}`}>\r\n                                                        <a>\r\n                                                            <CardItem\r\n                                                                {...item}\r\n                                                                isFetch={adCardData.isFetch}\r\n                                                                cardType={t('ad')}\r\n                                                                className=\"card-item\"\r\n                                                            />\r\n                                                        </a>\r\n                                                    </Link>\r\n                                                </Grid>\r\n                                            )\r\n                                        })}\r\n                                    </Grid>\r\n                                </div>\r\n                        }\r\n                    </CustomTabPanel>\r\n                    <CustomTabPanel value={tabValue} index={1}>\r\n                        {lotCardData.error\r\n                            ? <Typography variant=\"subtitle1\" className=\"error-text\">{lotCardData.error}</Typography>\r\n                            : <div className=\"lots-wrapper\">\r\n                                <Grid item container spacing={2}>\r\n                                    {lotCardData.cardData.data.map((item, index) => {\r\n                                        const translatedTitle =\r\n                                            transform(item.title)\r\n                                                .replace(formattedUrl, '-')\r\n                                                .toLowerCase();\r\n\r\n                                        return (\r\n                                            <Grid\r\n                                                key={index}\r\n                                                xs={6}\r\n                                                sm={4}\r\n                                                lg={3}\r\n                                                item\r\n                                            >\r\n                                                <Link href={`/${translatedTitle}-${item.id}`}>\r\n                                                    <a>\r\n                                                        <CardItem\r\n                                                            {...item}\r\n                                                            isFetch={lotCardData.isFetch}\r\n                                                            cardType={t('lot')}\r\n                                                            className=\"card-item\"\r\n                                                        />\r\n                                                    </a>\r\n                                                </Link>\r\n                                            </Grid>\r\n                                        )\r\n                                    })}\r\n                                </Grid>\r\n                            </div>}\r\n                    </CustomTabPanel>\r\n                    <Grid item xs={12} container justify=\"center\">\r\n                        {!(lotCardData.error || adCardData.error) && (\r\n                            <CustomPagination\r\n                                count={props.pageCount}\r\n                                currentPage={props.currentPage}\r\n                                handlePaginationPage={props.handlePaginationPage}\r\n                            />)}\r\n                    </Grid>\r\n                </Grid>\r\n                <Hidden smDown>\r\n                    <Grid\r\n                        item\r\n                        container\r\n                        md={3}\r\n                        direction=\"column\"\r\n                        className={classes.adBanner}\r\n                    >\r\n                        <Grid item>\r\n                            <Banner height=\"345px\"/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Hidden>\r\n            </Grid>\r\n            {/*{((adCardData.cardData.total > adCardData.cardData.data.length && tabValue === 0) || (lotCardData.cardData.total > lotCardData.cardData.data.length && tabValue === 1)) && (*/}\r\n            {/*    <Grid container className={classes.showMoreContainer}>*/}\r\n            {/*        <Grid item xs={12} md={9} className=\"show-more-block\">*/}\r\n            {/*            <ButtonComponent onClick={handleShowMore}>*/}\r\n            {/*                <Typography variant=\"subtitle2\" color=\"initial\">*/}\r\n            {/*                    {t('showMore')}*/}\r\n            {/*                </Typography>*/}\r\n            {/*            </ButtonComponent>*/}\r\n            {/*        </Grid>*/}\r\n            {/*    </Grid>*/}\r\n            {/*)}*/}\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}