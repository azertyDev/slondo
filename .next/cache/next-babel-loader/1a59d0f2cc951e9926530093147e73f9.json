{"ast":null,"code":"import createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas/rootSaga';\nimport { configureStore } from '@reduxjs/toolkit';\nvar sagaMiddleware = createSagaMiddleware(); // const enhancer = composeWithDevTools(\n//     applyMiddleware(sagaMiddleware),\n// );\n// create a makeStore function\n\nvar makeStore = function makeStore() {\n  // const store = createStore(rootReducer, enhancer);\n  // sagaMiddleware.run(rootSaga);\n  var store = configureStore({\n    rootSaga: rootSaga,\n    devTools: true // preloadedState,\n\n  });\n  return store;\n}; // export an assembled wrapper\n\n\nexport default makeStore;","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/store.ts"],"names":["createSagaMiddleware","rootSaga","configureStore","sagaMiddleware","makeStore","store","devTools"],"mappings":"AACA,OAAOA,oBAAP,MAAiC,YAAjC;AAGA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AAEA,IAAMC,cAAc,GAAGH,oBAAoB,EAA3C,C,CAEA;AACA;AACA;AAEA;;AACA,IAAMI,SAAoB,GAAG,SAAvBA,SAAuB,GAAM;AAC/B;AACA;AACA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AACzBD,IAAAA,QAAQ,EAARA,QADyB;AAEzBK,IAAAA,QAAQ,MAFiB,CAGzB;;AAHyB,GAAD,CAA5B;AAKA,SAAOD,KAAP;AACH,CATD,C,CAWA;;;AACA,eAAeD,SAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {MakeStore} from 'next-redux-wrapper'\r\nimport {rootReducer} from \"./reducers/rootReducer\"\r\nimport rootSaga from './sagas/rootSaga'\r\nimport {configureStore} from '@reduxjs/toolkit'\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// const enhancer = composeWithDevTools(\r\n//     applyMiddleware(sagaMiddleware),\r\n// );\r\n\r\n// create a makeStore function\r\nconst makeStore: MakeStore = () => {\r\n    // const store = createStore(rootReducer, enhancer);\r\n    // sagaMiddleware.run(rootSaga);\r\n    const store = configureStore({\r\n        rootSaga,\r\n        devTools: process.env.NODE_ENV !== 'production',\r\n        // preloadedState,\r\n    })\r\n    return store\r\n};\r\n\r\n// export an assembled wrapper\r\nexport default makeStore;"]},"metadata":{},"sourceType":"module"}