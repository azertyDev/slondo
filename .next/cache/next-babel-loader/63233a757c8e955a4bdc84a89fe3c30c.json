{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { CustomFormikField } from \"@src/components/elements/custom_formik_field/CustomFormikField\";\nvar locations = [{\n  id: 11,\n  name: \"Ташкентская область\",\n  cities: [{\n    id: 150,\n    name: \"Паркентский район\",\n    district: []\n  }, {\n    id: 151,\n    name: \"Пскентский район\",\n    district: []\n  }, {\n    id: 152,\n    name: \"Город Ташкент\",\n    district: [{\n      id: 1,\n      city_id: 152,\n      name: \"Бектемирский район\"\n    }, {\n      id: 2,\n      city_id: 152,\n      name: \"Мирзо-Улугбекский район\"\n    }, {\n      id: 3,\n      city_id: 152,\n      name: \"Мирабадский район\"\n    }]\n  }, {\n    id: 153,\n    name: \"Уртачирчикский район\",\n    district: []\n  }, {\n    id: 154,\n    name: \"Чиназский район\",\n    district: []\n  }]\n}, {\n  id: 12,\n  name: \"Ферганская область\",\n  cities: [{\n    id: 158,\n    name: 'Бешарыкский район',\n    district: []\n  }, {\n    id: 159,\n    name: 'Багдадский район',\n    district: []\n  }, {\n    id: 160,\n    name: 'Бувайдинский район',\n    district: []\n  }, {\n    id: 161,\n    name: 'Дангаринский район',\n    district: [{\n      id: 3,\n      city_id: 152,\n      name: \"Юнусабадский район\"\n    }]\n  }]\n}];\n\nvar option = function option(_ref) {\n  var area = _ref.area,\n      city = _ref.city,\n      district = _ref.district;\n  return \"\".concat(district ? \"\".concat(district, \", \") : '').concat(city, \", \").concat(area);\n};\n\nvar formatData = function formatData(list) {\n  return list.reduce(function (acc, row) {\n    row.cities.forEach(function (city) {\n      if (city.district.length) {\n        city.district.forEach(function (dis) {\n          acc = [].concat(_toConsumableArray(acc), [{\n            area: row.name,\n            city: city.name,\n            district: dis.name\n          }]);\n        });\n      } else {\n        acc = [].concat(_toConsumableArray(acc), [{\n          area: row.name,\n          city: city.name\n        }]);\n      }\n    });\n    return acc;\n  }, []);\n};\n\nexport var CustomAutocomplete = function CustomAutocomplete(props) {\n  var list = props.list;\n  return __jsx(Autocomplete, {\n    options: formatData(list),\n    getOptionLabel: option,\n    renderInput: function renderInput(params) {\n      return __jsx(CustomFormikField, _extends({}, params, props));\n    }\n  });\n};\n_c = CustomAutocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomAutocomplete\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/custom_autocomplete/CustomAutocomplete.tsx"],"names":["React","Autocomplete","CustomFormikField","locations","id","name","cities","district","city_id","option","area","city","formatData","list","reduce","acc","row","forEach","length","dis","CustomAutocomplete","props","params"],"mappings":"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","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport {CustomFormikField} from \"@src/components/elements/custom_formik_field/CustomFormikField\";\r\n\r\n\r\nconst locations = [\r\n    {\r\n        id: 11,\r\n        name: \"Ташкентская область\",\r\n        cities: [\r\n            {\r\n                id: 150,\r\n                name: \"Паркентский район\",\r\n                district: []\r\n            },\r\n            {\r\n                id: 151,\r\n                name: \"Пскентский район\",\r\n                district: []\r\n            },\r\n            {\r\n                id: 152,\r\n                name: \"Город Ташкент\",\r\n                district: [\r\n                    {\r\n                        id: 1,\r\n                        city_id: 152,\r\n                        name: \"Бектемирский район\"\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        city_id: 152,\r\n                        name: \"Мирзо-Улугбекский район\"\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        city_id: 152,\r\n                        name: \"Мирабадский район\"\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                id: 153,\r\n                name: \"Уртачирчикский район\",\r\n                district: []\r\n            },\r\n            {\r\n                id: 154,\r\n                name: \"Чиназский район\",\r\n                district: []\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 12,\r\n        name: \"Ферганская область\",\r\n        cities: [\r\n            {\r\n                id: 158,\r\n                name: 'Бешарыкский район',\r\n                district: []\r\n            },\r\n            {\r\n                id: 159,\r\n                name: 'Багдадский район',\r\n                district: []\r\n            },\r\n            {\r\n                id: 160,\r\n                name: 'Бувайдинский район',\r\n                district: []\r\n            },\r\n            {\r\n                id: 161,\r\n                name: 'Дангаринский район',\r\n                district: [\r\n                    {\r\n                        id: 3,\r\n                        city_id: 152,\r\n                        name: \"Юнусабадский район\"\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\nconst option = ({area, city, district}) => {\r\n    return `${district ? `${district}, ` : ''}${city}, ${area}`;\r\n};\r\n\r\nconst formatData = (list) => {\r\n    return list.reduce((acc, row) => {\r\n        row.cities.forEach((city) => {\r\n            if (city.district.length) {\r\n                city.district.forEach((dis) => {\r\n                    acc = [\r\n                        ...acc,\r\n                        {\r\n                            area: row.name,\r\n                            city: city.name,\r\n                            district: dis.name\r\n                        }\r\n                    ];\r\n                });\r\n            } else {\r\n                acc = [\r\n                    ...acc,\r\n                    {\r\n                        area: row.name,\r\n                        city: city.name\r\n                    }\r\n                ];\r\n            }\r\n        });\r\n        return acc;\r\n    }, []);\r\n}\r\n\r\nexport const CustomAutocomplete: FC<{ placeholder: string, name: string, list: any[]}> = (props) => {\r\n    const {list} = props;\r\n\r\n    return (\r\n        <Autocomplete\r\n            options={formatData(list)}\r\n            getOptionLabel={option}\r\n            renderInput={(params) => (\r\n                <CustomFormikField {...params} {...props} />\r\n            )}\r\n        />\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}