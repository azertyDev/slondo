{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport { AncmntAutoForm } from \"./AncmntAutoForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormikProvider, useFormik } from \"formik\";\nimport { createAdvrtSchema, isRequired } from \"@root/validation_schemas/createAdvrtSchema\";\nimport { setErrorMsgAction } from \"@src/redux/slices/errorSlice\";\nimport { autoSelectKeys, formData, initFormFields, textFieldKeys } from \"../AncmntFormContainer\";\nimport { numberRegEx } from \"@src/helpers\";\nexport var AncmntAutoFormContainer = function AncmntAutoFormContainer(props) {\n  _s();\n\n  var activeStep = props.activeStep,\n      ancmntType = props.ancmntType,\n      handleNextStep = props.handleNextStep,\n      createAncmnt = props.createAncmnt;\n  var category = createAncmnt.category,\n      subCategory = createAncmnt.subCategory;\n\n  var _useSelector = useSelector(function (store) {\n    return store;\n  }),\n      locations = _useSelector.locations;\n\n  var dispatch = useDispatch();\n  var formik = useFormik({\n    initialValues: initFormFields,\n    validationSchema: createAdvrtSchema,\n    onSubmit: onSubmit\n  });\n  var values = formik.values,\n      setValues = formik.setValues,\n      errors = formik.errors,\n      touched = formik.touched,\n      setTouched = formik.setTouched,\n      handleBlur = formik.handleBlur,\n      handleSubmit = formik.handleSubmit;\n  var adParams = values.adParams;\n\n  function onSubmit(_x) {\n    return _onSubmit.apply(this, arguments);\n  }\n\n  function _onSubmit() {\n    _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                if (activeStep !== 3) {\n                  handleNextStep();\n                } else {\n                  setValues(_objectSpread(_objectSpread({}, values), {}, {\n                    isFetch: true\n                  }));\n                  data = formData(values, ancmntType, subCategory); // await userAPI.createAdvrt(data);\n\n                  setValues(_objectSpread(_objectSpread({}, values), {}, {\n                    isFetch: false\n                  }));\n                  handleNextStep();\n                }\n              } catch (e) {\n                dispatch(setErrorMsgAction(e.message));\n                setValues(_objectSpread(_objectSpread({}, values), {}, {\n                  isFetch: false\n                }));\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onSubmit.apply(this, arguments);\n  }\n\n  var handleCheckboxChange = function handleCheckboxChange(valName) {\n    return function (_ref) {\n      var target = _ref.target;\n      var isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price'].some(function (fieldName) {\n        return fieldName === valName;\n      });\n\n      if (isAuctionField) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, _defineProperty({}, valName, target.checked))\n        }));\n      } else if (valName === 'price_by_now') {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n            price_by_now: {\n              isActive: target.checked,\n              value: values.auction.price_by_now.value\n            }\n          })\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valName, target.checked)));\n      }\n    };\n  };\n\n  var handleParamsCheckbox = function handleParamsCheckbox(valueName, value) {\n    return function () {\n      if (adParams[valueName]) {\n        if (adParams[valueName].some(function (val) {\n          return val.id === value.id;\n        })) {\n          adParams[valueName].map(function (val, index) {\n            if (val.id === value.id) {\n              adParams[valueName].splice(index, 1);\n            }\n          });\n        } else {\n          adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, [].concat(_toConsumableArray(adParams[valueName]), [value])));\n        }\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, [value]));\n      }\n\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        adParams: adParams\n      }));\n    };\n  };\n\n  var handleMenuItem = function handleMenuItem(valueName) {\n    return function (newValue, setAnchor) {\n      return function () {\n        setAnchor(null);\n\n        if (valueName === 'currency') {\n          setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, newValue)));\n        } else if (valueName === 'duration') {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            auction: _objectSpread(_objectSpread({}, values.auction), {}, _defineProperty({}, valueName, newValue))\n          }));\n        } else {\n          // Reset sub props in values\n          Object.keys(newValue).map(function (key) {\n            if (adParams[key]) {\n              adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, key, {\n                id: null,\n                name: 'Не выбрано'\n              }));\n            }\n\n            setValues(_objectSpread(_objectSpread({}, values), {}, {\n              adParams: _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, newValue))\n            }));\n          });\n        }\n      };\n    };\n  };\n\n  var handleListItem = function handleListItem(valueName, value) {\n    return function () {\n      if (adParams[valueName] && adParams[valueName].id === value.id) {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, {\n          id: null,\n          name: 'Не выбрано'\n        }));\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, value));\n      }\n\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        adParams: adParams\n      }));\n    };\n  };\n\n  var handleInput = function handleInput(valueName) {\n    return function (_ref2) {\n      var target = _ref2.target;\n\n      if (numberRegEx.test(target.value)) {\n        if (valueName === 'price') {\n          setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, target.value)));\n        } else {\n          adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, target.value));\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            adParams: adParams\n          }));\n        }\n      }\n    };\n  };\n\n  var handleSwitch = function handleSwitch(_, value) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n        isActive: value\n      })\n    }));\n  };\n\n  var handleWeekDay = function handleWeekDay(value) {\n    return function () {\n      if (values.avalTime.week.some(function (val) {\n        return val.id === value.id;\n      })) {\n        values.avalTime.week.map(function (val, index) {\n          if (val.id === value.id) {\n            values.avalTime.week.splice(index, 1);\n          }\n        });\n        setValues(_objectSpread({}, values));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n            week: [].concat(_toConsumableArray(values.avalTime.week), [value])\n          })\n        }));\n      }\n    };\n  };\n\n  var handleTime = function handleTime(_ref3) {\n    var target = _ref3.target;\n    var value = target.value;\n    var regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\n    var isValid = regEx.test(value);\n\n    if (isValid) {\n      value = value.replace(/^:(.+)/, function (m) {\n        return \"00\".concat(m);\n      }).replace(/(.+):$/, function (m) {\n        return \"\".concat(m, \"00\");\n      });\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, _defineProperty({}, target.name, value))\n      }));\n    }\n  };\n\n  var setReqValues = function setReqValues() {\n    var reqVals = {};\n    var reqParamsVals = {};\n    var defaultVal = {\n      id: null,\n      name: 'Не выбрано'\n    };\n    var adParamsVals = subCategory.data;\n\n    if (category.id === 11) {\n      reqVals['price'] = '0';\n    }\n\n    if (ancmntType.currency.length !== 0) {\n      reqVals['currency'] = ancmntType.currency.filter(function (cur) {\n        return cur.name === 'sum';\n      })[0];\n    }\n\n    if (ancmntType.id !== 1 && ancmntType.expired.length !== 0) {\n      reqVals['auction'] = _objectSpread(_objectSpread({}, values.auction), {}, {\n        duration: ancmntType.expired[0]\n      });\n    }\n\n    Object.keys(adParamsVals).forEach(function (key) {\n      if (isRequired(key) && adParams[key] === undefined) {\n        if (key === 'manufacturer' && subCategory.id == 1) {\n          reqParamsVals['models'] = defaultVal;\n        }\n\n        if (Array.isArray(adParamsVals[key])) {\n          reqParamsVals[key] = defaultVal;\n        } else {\n          reqParamsVals[key] = adParamsVals[key];\n        }\n      } else if (autoSelectKeys.some(function (k) {\n        return k === key;\n      })) {\n        if (textFieldKeys.some(function (k) {\n          return k === key;\n        })) {\n          reqParamsVals[\"\".concat(key, \"_value\")] = '';\n        }\n\n        reqParamsVals[key] = adParamsVals[key][0];\n      }\n    });\n    setValues(_objectSpread(_objectSpread(_objectSpread({}, values), reqVals), {}, {\n      adParams: _objectSpread(_objectSpread({}, adParams), reqParamsVals)\n    }));\n  };\n\n  useEffect(function () {\n    window && window.scrollTo(0, 0);\n  }, []);\n  useEffect(function () {\n    setReqValues();\n  }, [subCategory.parent.id, subCategory.parent.name]);\n  return __jsx(FormikProvider, {\n    value: formik\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(AncmntAutoForm, _extends({}, props, {\n    errors: errors,\n    touched: touched,\n    setTouched: setTouched,\n    values: values,\n    setValues: setValues,\n    locations: locations,\n    handleBlur: handleBlur,\n    handleTime: handleTime,\n    handleInput: handleInput,\n    handleSwitch: handleSwitch,\n    handleWeekDay: handleWeekDay,\n    handleListItem: handleListItem,\n    handleMenuItem: handleMenuItem,\n    handleParamsCheckbox: handleParamsCheckbox,\n    handleCheckboxChange: handleCheckboxChange\n  }))));\n};\n\n_s(AncmntAutoFormContainer, \"zXlrWjtTSerfNZaq6lfN6kfvlUE=\", false, function () {\n  return [useSelector, useDispatch, useFormik];\n});\n\n_c = AncmntAutoFormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AncmntAutoFormContainer\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/announcement/create_ancmnt/ancmnt_form/ancmnt_auto_form/AncmntAutoFormContainer.tsx"],"names":["React","useEffect","AncmntAutoForm","useDispatch","useSelector","FormikProvider","useFormik","createAdvrtSchema","isRequired","setErrorMsgAction","autoSelectKeys","formData","initFormFields","textFieldKeys","numberRegEx","AncmntAutoFormContainer","props","activeStep","ancmntType","handleNextStep","createAncmnt","category","subCategory","store","locations","dispatch","formik","initialValues","validationSchema","onSubmit","values","setValues","errors","touched","setTouched","handleBlur","handleSubmit","adParams","isFetch","data","e","message","handleCheckboxChange","valName","target","isAuctionField","some","fieldName","auction","checked","price_by_now","isActive","value","handleParamsCheckbox","valueName","val","id","map","index","splice","handleMenuItem","newValue","setAnchor","Object","keys","key","name","handleListItem","handleInput","test","handleSwitch","_","avalTime","handleWeekDay","week","handleTime","regEx","isValid","replace","m","setReqValues","reqVals","reqParamsVals","defaultVal","adParamsVals","currency","length","filter","cur","expired","duration","forEach","undefined","Array","isArray","k","window","scrollTo","parent"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {AncmntAutoForm} from \"./AncmntAutoForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {FormikProvider, useFormik} from \"formik\";\r\nimport {createAdvrtSchema, isRequired} from \"@root/validation_schemas/createAdvrtSchema\";\r\nimport {CreateAncmntFields} from \"@root/interfaces/Announcement\";\r\nimport {setErrorMsgAction} from \"@src/redux/slices/errorSlice\";\r\nimport {\r\n    autoSelectKeys,\r\n    formData,\r\n    initFormFields,\r\n    textFieldKeys\r\n} from \"../AncmntFormContainer\";\r\nimport {numberRegEx} from \"@src/helpers\";\r\n\r\n\r\nexport const AncmntAutoFormContainer = (props) => {\r\n    const {\r\n        activeStep,\r\n        ancmntType,\r\n        handleNextStep,\r\n        createAncmnt\r\n    } = props;\r\n    const {category, subCategory} = createAncmnt;\r\n\r\n    const {locations} = useSelector((store: RootState) => store);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: initFormFields,\r\n        validationSchema: createAdvrtSchema,\r\n        onSubmit\r\n    });\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        touched,\r\n        setTouched,\r\n        handleBlur,\r\n        handleSubmit\r\n    } = formik;\r\n    let {adParams} = values;\r\n\r\n    async function onSubmit(values: CreateAncmntFields) {\r\n        try {\r\n            if (activeStep !== 3) {\r\n                handleNextStep();\r\n            } else {\r\n                setValues({...values, isFetch: true});\r\n\r\n                const data = formData(values, ancmntType, subCategory);\r\n                // await userAPI.createAdvrt(data);\r\n\r\n                setValues({...values, isFetch: false});\r\n\r\n                handleNextStep();\r\n            }\r\n        } catch (e) {\r\n            dispatch(setErrorMsgAction(e.message));\r\n            setValues({...values, isFetch: false});\r\n        }\r\n    }\r\n\r\n    const handleCheckboxChange = (valName) => ({target}) => {\r\n        const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price']\r\n            .some(fieldName => fieldName === valName);\r\n\r\n        if (isAuctionField) {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valName]: target.checked\r\n                }\r\n            });\r\n        } else if (valName === 'price_by_now') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    price_by_now: {\r\n                        isActive: target.checked,\r\n                        value: values.auction.price_by_now.value\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            setValues({...values, [valName]: target.checked});\r\n        }\r\n    };\r\n\r\n    const handleParamsCheckbox = (valueName, value) => () => {\r\n        if (adParams[valueName]) {\r\n            if (adParams[valueName].some(val => val.id === value.id)) {\r\n                adParams[valueName].map((val, index) => {\r\n                    if (val.id === value.id) {\r\n                        adParams[valueName].splice(index, 1);\r\n                    }\r\n                });\r\n            } else {\r\n                adParams = {\r\n                    ...adParams,\r\n                    [valueName]: [...adParams[valueName], value]\r\n                };\r\n            }\r\n        } else {\r\n            adParams = {...adParams, [valueName]: [value]};\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n        setAnchor(null);\r\n\r\n        if (valueName === 'currency') {\r\n            setValues({\r\n                ...values,\r\n                [valueName]: newValue\r\n            });\r\n        } else if (valueName === 'duration') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valueName]: newValue\r\n                }\r\n            });\r\n        } else {\r\n            // Reset sub props in values\r\n            Object.keys(newValue).map(key => {\r\n                if (adParams[key]) {\r\n                    adParams = {\r\n                        ...adParams,\r\n                        [key]: {id: null, name: 'Не выбрано'}\r\n                    };\r\n                }\r\n                setValues({\r\n                    ...values,\r\n                    adParams: {\r\n                        ...adParams,\r\n                        [valueName]: newValue\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleListItem = (valueName, value) => () => {\r\n        if (adParams[valueName] && adParams[valueName].id === value.id) {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: {id: null, name: 'Не выбрано'}\r\n            };\r\n        } else {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: value\r\n            };\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleInput = (valueName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valueName === 'price') {\r\n                setValues({\r\n                    ...values,\r\n                    [valueName]: target.value\r\n                });\r\n            } else {\r\n                adParams = {\r\n                    ...adParams,\r\n                    [valueName]: target.value\r\n                };\r\n                setValues({\r\n                    ...values,\r\n                    adParams\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSwitch = (_, value) => {\r\n        setValues({\r\n            ...values,\r\n            avalTime: {\r\n                ...values.avalTime,\r\n                isActive: value\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleWeekDay = (value) => () => {\r\n        if (values.avalTime.week.some(val => val.id === value.id)) {\r\n            values.avalTime.week.map((val, index) => {\r\n                if (val.id === value.id) {\r\n                    values.avalTime.week.splice(index, 1)\r\n                }\r\n            });\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    week: [\r\n                        ...values.avalTime.week,\r\n                        value\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTime = ({target}) => {\r\n        let {value} = target;\r\n        const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\r\n        const isValid = regEx.test(value);\r\n\r\n        if (isValid) {\r\n            value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    [target.name]: value\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const setReqValues = () => {\r\n        const reqVals = {};\r\n        const reqParamsVals = {};\r\n        const defaultVal = {id: null, name: 'Не выбрано'};\r\n\r\n        const adParamsVals = subCategory.data;\r\n\r\n        if (category.id === 11) {\r\n            reqVals['price'] = '0';\r\n        }\r\n\r\n        if (ancmntType.currency.length !== 0) {\r\n            reqVals['currency'] = ancmntType.currency.filter(cur => cur.name === 'sum')[0];\r\n        }\r\n\r\n        if (ancmntType.id !== 1 && ancmntType.expired.length !== 0) {\r\n            reqVals['auction'] = {\r\n                ...values.auction,\r\n                duration: ancmntType.expired[0]\r\n            };\r\n        }\r\n\r\n        Object.keys(adParamsVals).forEach(key => {\r\n            if (isRequired(key) && adParams[key] === undefined) {\r\n                if (key === 'manufacturer' && subCategory.id == 1) {\r\n                    reqParamsVals['models'] = defaultVal;\r\n                }\r\n                if (Array.isArray(adParamsVals[key])) {\r\n                    reqParamsVals[key] = defaultVal;\r\n                } else {\r\n                    reqParamsVals[key] = adParamsVals[key];\r\n                }\r\n            } else if (autoSelectKeys.some(k => k === key)) {\r\n                if (textFieldKeys.some(k => k === key)) {\r\n                    reqParamsVals[`${key}_value`] = '';\r\n                }\r\n                reqParamsVals[key] = adParamsVals[key][0];\r\n            }\r\n        });\r\n\r\n        setValues({\r\n            ...values,\r\n            ...reqVals,\r\n            adParams: {\r\n                ...adParams,\r\n                ...reqParamsVals\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window && window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setReqValues();\r\n    }, [subCategory.parent.id, subCategory.parent.name]);\r\n\r\n    return (\r\n        <FormikProvider value={formik}>\r\n            <form onSubmit={handleSubmit}>\r\n                <AncmntAutoForm\r\n                    {...props}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    setTouched={setTouched}\r\n                    values={values}\r\n                    setValues={setValues}\r\n                    locations={locations}\r\n                    handleBlur={handleBlur}\r\n                    handleTime={handleTime}\r\n                    handleInput={handleInput}\r\n                    handleSwitch={handleSwitch}\r\n                    handleWeekDay={handleWeekDay}\r\n                    handleListItem={handleListItem}\r\n                    handleMenuItem={handleMenuItem}\r\n                    handleParamsCheckbox={handleParamsCheckbox}\r\n                    handleCheckboxChange={handleCheckboxChange}\r\n                />\r\n            </form>\r\n        </FormikProvider>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}