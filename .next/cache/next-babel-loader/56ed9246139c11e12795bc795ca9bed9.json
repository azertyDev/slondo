{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { TOTAL_FILES_LIMIT, TOTAL_FILES_SIZE_LIMIT } from '@root/src/constants';\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from 'react-beautiful-dnd';\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { Grid } from \"@material-ui/core\";\nimport { useStyles } from './useStyles';\nexport var PreviewPhotos = function PreviewPhotos(props) {\n  _s();\n\n  resetServerContext();\n  var images = props.images,\n      setImages = props.setImages,\n      values = props.values,\n      setValues = props.setValues;\n\n  var handleOnDragEnd = function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    var items = Array.from(images);\n\n    var _items$splice = items.splice(result.source.index, 1),\n        _items$splice2 = _slicedToArray(_items$splice, 1),\n        reorderedItem = _items$splice2[0];\n\n    items.splice(result.destination.index, 0, reorderedItem);\n    setImages(items);\n  };\n\n  var handleUploadFile = function handleUploadFile(_ref) {\n    var target = _ref.target;\n\n    if (target.files[0] && images.length < TOTAL_FILES_LIMIT) {\n      var totalSize = values.files.reduce(function (total, item) {\n        return total + item.file.size;\n      }, 0);\n\n      if (totalSize + target.files[0].size < TOTAL_FILES_SIZE_LIMIT) {\n        setImages([{\n          url: URL.createObjectURL(target.files[0])\n        }].concat(_toConsumableArray(images)));\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          files: [].concat(_toConsumableArray(values.files), _toConsumableArray(target.files[0]))\n        }));\n      }\n    }\n  };\n\n  var removeFile = function removeFile(url) {\n    return function () {\n      images.map(function (item, index) {\n        if (item.url === url) {\n          images.splice(index, 1);\n          setImages(_toConsumableArray(images));\n        }\n      });\n    };\n  };\n\n  console.log(images);\n  var classes = useStyles();\n  return __jsx(\"div\", null, __jsx(\"input\", {\n    type: \"file\",\n    onChange: handleUploadFile,\n    accept: \"image/png,image/jpeg\"\n  }), __jsx(DragDropContext, {\n    onDragEnd: handleOnDragEnd\n  }, __jsx(Droppable, {\n    droppableId: \"images\",\n    direction: \"horizontal\"\n  }, function (provided) {\n    return __jsx(Grid, _extends({\n      container: true,\n      className: \"images-wrapper\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef\n    }), images.map(function (_ref2, index) {\n      var url = _ref2.url;\n      return __jsx(Draggable, {\n        key: url,\n        draggableId: url,\n        index: index\n      }, function (provided) {\n        return __jsx(Grid, _extends({\n          item: true,\n          md: 3,\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps), __jsx(\"img\", {\n          src: url,\n          style: {\n            width: '160px',\n            height: '120px',\n            objectFit: 'cover'\n          },\n          alt: \"image\"\n        }), __jsx(ButtonComponent, {\n          onClick: removeFile(url)\n        }, \"X\"));\n      });\n    }), provided.placeholder);\n  })));\n};\n\n_s(PreviewPhotos, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PreviewPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreviewPhotos\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/preview_photos/PreviewPhotos.tsx"],"names":["TOTAL_FILES_LIMIT","TOTAL_FILES_SIZE_LIMIT","React","DragDropContext","Droppable","Draggable","resetServerContext","ButtonComponent","Grid","useStyles","PreviewPhotos","props","images","setImages","values","setValues","handleOnDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","handleUploadFile","target","files","length","totalSize","reduce","total","item","file","size","url","URL","createObjectURL","removeFile","map","console","log","classes","provided","droppableProps","innerRef","draggableProps","dragHandleProps","width","height","objectFit","placeholder"],"mappings":"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","sourcesContent":["import {TOTAL_FILES_LIMIT, TOTAL_FILES_SIZE_LIMIT} from '@root/src/constants';\r\nimport React, {Dispatch, FC} from 'react';\r\nimport {DragDropContext, Droppable, Draggable, resetServerContext} from 'react-beautiful-dnd';\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {CreateAdFields} from \"@root/interfaces/Advertisement\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\ninterface IPreviewPhotos {\r\n    images: [],\r\n    setImages: Dispatch<any>,\r\n    values: CreateAdFields,\r\n    setValues: Dispatch<any>\r\n}\r\n\r\nexport const PreviewPhotos: FC<IPreviewPhotos> = (props) => {\r\n    resetServerContext();\r\n\r\n    const {images, setImages, values, setValues} = props;\r\n\r\n    const handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n\r\n        const items = Array.from(images);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        setImages(items);\r\n    };\r\n\r\n    const handleUploadFile = ({target}) => {\r\n        if (target.files[0] && images.length < TOTAL_FILES_LIMIT) {\r\n\r\n            const totalSize = values.files.reduce((total, item: { file: { size: number } }) => total + item.file.size, 0);\r\n\r\n            if ((totalSize + target.files[0].size) < TOTAL_FILES_SIZE_LIMIT) {\r\n                setImages([{\r\n                    url: URL.createObjectURL(target.files[0])\r\n                },\r\n                    ...images\r\n                ]);\r\n                setValues({\r\n                    ...values,\r\n                    files: [...values.files, ...target.files[0]]\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n    const removeFile = (url) => () => {\r\n        images.map((item: { url: string }, index) => {\r\n            if (item.url === url) {\r\n                images.splice(index, 1);\r\n                setImages([...images]);\r\n            }\r\n        });\r\n    };\r\n    console.log(images)\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <input type='file' onChange={handleUploadFile} accept=\"image/png,image/jpeg\"/>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId=\"images\" direction=\"horizontal\">\r\n                    {(provided) => (\r\n                        <Grid container className=\"images-wrapper\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {images.map(({url}: { url: string }, index) => {\r\n                                return (\r\n                                    <Draggable key={url} draggableId={url} index={index}>\r\n                                        {(provided) => (\r\n                                            <Grid\r\n                                                item\r\n                                                md={3}\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                            >\r\n                                                <img\r\n                                                    src={url}\r\n                                                    style={{width: '160px', height: '120px', objectFit: 'cover'}}\r\n                                                    alt='image'\r\n                                                />\r\n                                                <ButtonComponent onClick={removeFile(url)}>X</ButtonComponent>\r\n                                            </Grid>\r\n                                        )}\r\n                                    </Draggable>\r\n                                );\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </Grid>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}