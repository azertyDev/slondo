{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { MainContent } from './MainContent';\nimport { ITEMS_PER_PAGE } from '@root/src/constants';\nimport { userAPI } from \"@src/api/api\";\nconst initialCardData = {\n  isFetch: false,\n  error: null,\n  cardData: {\n    data: [{\n      id: null,\n      title: '',\n      cardType: '',\n      safe_deal: null,\n      price: null,\n      currency: {\n        id: null,\n        name: ''\n      },\n      created_at: '',\n      location: '',\n      images: [{\n        url: ''\n      }]\n    }],\n    total: null\n  }\n};\nexport const MainContentContainer = props => {\n  const {\n    t\n  } = props;\n  const {\n    0: tabValue,\n    1: setTabValue\n  } = useState(0);\n  const {\n    0: adCurrentPage,\n    1: setAdCurrentPage\n  } = useState(1);\n  const {\n    0: lotCurrentPage,\n    1: setLotCurrentPage\n  } = useState(1);\n  const {\n    0: adCardData,\n    1: setAdCardData\n  } = useState(initialCardData);\n  const {\n    0: lotCardData,\n    1: setLotCardData\n  } = useState(initialCardData);\n\n  const handleTabChange = (_, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const setCardData = async (state, setState, currentPage, type) => {\n    try {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        isFetch: true\n      }));\n      const {\n        total,\n        data\n      } = await userAPI.getCardData(ITEMS_PER_PAGE, currentPage, type);\n\n      const {\n        currency,\n        images\n      } = data,\n            otherData = _objectWithoutProperties(data, [\"currency\", \"images\"]);\n\n      console.log(currency);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        isFetch: false\n      }));\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        cardData: {\n          data: [...state.cardData.data, ...otherData, currency !== null && currency !== void 0 ? currency : {\n            id: null,\n            name: ''\n          }, images !== null && images !== void 0 ? images : [{\n            url: ''\n          }]],\n          total\n        }\n      }));\n    } catch (e) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        error: e.message\n      }));\n    }\n  };\n\n  const handleShowMore = () => {\n    if (tabValue === 0) {\n      setAdCurrentPage(adCurrentPage + 1);\n    } else {\n      setLotCurrentPage(lotCurrentPage + 1);\n    }\n  };\n\n  useEffect(() => {\n    setCardData(adCardData, setAdCardData, adCurrentPage, 'ad');\n  }, [adCurrentPage]);\n  useEffect(() => {\n    setCardData(lotCardData, setLotCardData, lotCurrentPage, 'lot');\n  }, [lotCurrentPage]);\n  return __jsx(MainContent, {\n    t: t,\n    tabValue: tabValue,\n    adCardData: adCardData,\n    lotCardData: lotCardData,\n    handleShowMore: handleShowMore,\n    handleTabChange: handleTabChange\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/mainContent/MainContentContainer.tsx"],"names":["React","useEffect","useState","MainContent","ITEMS_PER_PAGE","userAPI","initialCardData","isFetch","error","cardData","data","id","title","cardType","safe_deal","price","currency","name","created_at","location","images","url","total","MainContentContainer","props","t","tabValue","setTabValue","adCurrentPage","setAdCurrentPage","lotCurrentPage","setLotCurrentPage","adCardData","setAdCardData","lotCardData","setLotCardData","handleTabChange","_","newValue","setCardData","state","setState","currentPage","type","getCardData","otherData","console","log","e","message","handleShowMore"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react'\r\nimport {MainContent} from './MainContent'\r\nimport {TFunction} from \"i18next\";\r\nimport {ITEMS_PER_PAGE} from '@root/src/constants'\r\nimport {userAPI} from \"@src/api/api\";\r\nimport {CardData} from \"@root/interfaces/CardData\";\r\n\r\n\r\nconst initialCardData: CardData = {\r\n    isFetch: false,\r\n    error: null,\r\n    cardData: {\r\n        data: [{\r\n            id: null,\r\n            title: '',\r\n            cardType: '',\r\n            safe_deal: null,\r\n            price: null,\r\n            currency: {\r\n                id: null,\r\n                name: ''\r\n            },\r\n            created_at: '',\r\n            location: '',\r\n            images: [{\r\n                url: ''\r\n            }],\r\n        }],\r\n        total: null,\r\n    },\r\n};\r\n\r\nexport const MainContentContainer: FC<{ t: TFunction }> = (props) => {\r\n    const {t} = props;\r\n\r\n    const [tabValue, setTabValue] = useState(0);\r\n\r\n    const [adCurrentPage, setAdCurrentPage] = useState(1);\r\n    const [lotCurrentPage, setLotCurrentPage] = useState(1);\r\n    const [adCardData, setAdCardData] = useState(initialCardData);\r\n    const [lotCardData, setLotCardData] = useState(initialCardData);\r\n\r\n\r\n    const handleTabChange = (_, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    const setCardData = async (state, setState, currentPage, type) => {\r\n        try {\r\n            setState({\r\n                ...state,\r\n                isFetch: true\r\n            });\r\n\r\n            const {total, data} = await userAPI.getCardData(ITEMS_PER_PAGE, currentPage, type);\r\n            const {currency, images, ...otherData} = data;\r\n            console.log(currency)\r\n            setState({\r\n                ...state,\r\n                isFetch: false\r\n            });\r\n\r\n            setState({\r\n                ...state,\r\n                cardData: {\r\n                    data: [\r\n                        ...state.cardData.data,\r\n                        ...otherData,\r\n                        currency ?? {id: null, name: ''},\r\n                        images ?? [{url: ''}]\r\n                    ],\r\n                    total\r\n                }\r\n            });\r\n\r\n        } catch (e) {\r\n            setState({\r\n                ...state,\r\n                error: e.message\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n        if (tabValue === 0) {\r\n            setAdCurrentPage(adCurrentPage + 1)\r\n        } else {\r\n            setLotCurrentPage(lotCurrentPage + 1)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCardData(adCardData, setAdCardData, adCurrentPage, 'ad');\r\n    }, [adCurrentPage])\r\n\r\n    useEffect(() => {\r\n        setCardData(lotCardData, setLotCardData, lotCurrentPage, 'lot');\r\n    }, [lotCurrentPage])\r\n\r\n    return (\r\n        <MainContent\r\n            t={t}\r\n            tabValue={tabValue}\r\n            adCardData={adCardData}\r\n            lotCardData={lotCardData}\r\n            handleShowMore={handleShowMore}\r\n            handleTabChange={handleTabChange}\r\n        />\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}