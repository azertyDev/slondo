{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Grid, Typography, Hidden, Tabs, Tab } from '@material-ui/core';\nimport { Banner } from '@src/components/elements/banner/Banner';\nimport { CustomTabPanel } from '@src/components/elements/custom_tab_panel/CustomTabPanel';\nimport { CustomPagination } from '../../elements/custom_pagination/CustomPagination';\nimport { useStyles } from './useStyles';\nimport { CardView } from '@src/components/elements/card_view/CardView';\nexport const MainContent = props => {\n  const {\n    t,\n    tabValue,\n    handleTabChange,\n    adCardData,\n    lotCardData,\n    handlePaginationPage,\n    pageCount,\n    currentPage\n  } = props;\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"\\u0412\\u0441\\u0435 \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 9,\n    xs: 12\n  }, __jsx(Tabs, {\n    value: tabValue,\n    onChange: handleTabChange,\n    indicatorColor: \"primary\",\n    className: \"tabs\",\n    variant: \"fullWidth\"\n  }, __jsx(Tab, {\n    label: __jsx(Typography, {\n      variant: \"h6\"\n    }, t('allAds')),\n    value: 0\n  }), __jsx(Tab, {\n    label: __jsx(Typography, {\n      variant: \"h6\"\n    }, t('allLots')),\n    value: 1\n  })))), __jsx(Grid, {\n    container: true,\n    className: \"cards-container\"\n  }, __jsx(Grid, {\n    item: true,\n    md: 9,\n    xs: 12\n  }, __jsx(CustomTabPanel, {\n    value: tabValue,\n    index: 0\n  }, adCardData.error ? __jsx(Typography, {\n    variant: \"subtitle1\",\n    className: \"error-text\"\n  }, adCardData.error) : __jsx(Grid, {\n    container: true,\n    className: \"ads-wrapper\"\n  }, __jsx(CardView, {\n    t: t,\n    list: adCardData.data.cards,\n    isFetch: adCardData.isFetch\n  }))), __jsx(CustomTabPanel, {\n    value: tabValue,\n    index: 1\n  }, lotCardData.error ? __jsx(Typography, {\n    variant: \"subtitle1\",\n    className: \"error-text\"\n  }, lotCardData.error) : __jsx(Grid, {\n    container: true,\n    className: \"lots-wrapper\"\n  }, __jsx(CardView, {\n    t: t,\n    list: lotCardData.data.cards,\n    isFetch: lotCardData.isFetch\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    justify: \"center\"\n  }, !(lotCardData.error || adCardData.error) && __jsx(CustomPagination, {\n    count: pageCount,\n    currentPage: currentPage,\n    handlePaginationPage: handlePaginationPage\n  }))), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    md: 3,\n    direction: \"column\",\n    className: classes.adBanner\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Banner, {\n    height: \"335px\"\n  }))))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/mainContent/MainContent.tsx"],"names":["React","Grid","Typography","Hidden","Tabs","Tab","Banner","CustomTabPanel","CustomPagination","useStyles","CardView","MainContent","props","t","tabValue","handleTabChange","adCardData","lotCardData","handlePaginationPage","pageCount","currentPage","classes","root","error","data","cards","isFetch","adBanner"],"mappings":"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","sourcesContent":["import React, {FC} from 'react';\r\nimport {WithT} from 'i18next';\r\nimport {Grid, Typography, Hidden, Tabs, Tab} from '@material-ui/core';\r\nimport {Banner} from '@src/components/elements/banner/Banner';\r\nimport {CustomTabPanel} from '@src/components/elements/custom_tab_panel/CustomTabPanel';\r\nimport {CardData} from '@root/interfaces/CardData';\r\nimport {CustomPagination} from '../../elements/custom_pagination/CustomPagination';\r\nimport {useStyles} from './useStyles';\r\nimport {CardView} from '@src/components/elements/card_view/CardView';\r\n\r\n\r\ntype MainContentProps = {\r\n    tabValue: number;\r\n    handleTabChange: (_: unknown, newValue: number) => void;\r\n    // handleShowMore: () => void;\r\n    adCardData: CardData;\r\n    lotCardData: CardData;\r\n    pageCount: number;\r\n    currentPage: number;\r\n    handlePaginationPage: (_: unknown, pageNumber: number) => void;\r\n} & WithT;\r\n\r\nexport const MainContent: FC<MainContentProps> = (props) => {\r\n    const {\r\n        t,\r\n        tabValue,\r\n        handleTabChange,\r\n        adCardData,\r\n        lotCardData,\r\n        handlePaginationPage,\r\n        pageCount,\r\n        currentPage\r\n    } = props;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h4\">Все объявления</Typography>\r\n            <Grid container>\r\n                <Grid item md={9} xs={12}>\r\n                    <Tabs\r\n                        value={tabValue}\r\n                        onChange={handleTabChange}\r\n                        indicatorColor=\"primary\"\r\n                        className=\"tabs\"\r\n                        variant=\"fullWidth\"\r\n                    >\r\n                        <Tab\r\n                            label={\r\n                                <Typography variant=\"h6\">\r\n                                    {t('allAds')}\r\n                                </Typography>\r\n                            }\r\n                            value={0}\r\n                        />\r\n                        <Tab\r\n                            label={\r\n                                <Typography variant=\"h6\">\r\n                                    {t('allLots')}\r\n                                </Typography>\r\n                            }\r\n                            value={1}\r\n                        />\r\n                    </Tabs>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className=\"cards-container\">\r\n                <Grid item md={9} xs={12}>\r\n                    <CustomTabPanel value={tabValue} index={0}>\r\n                        {adCardData.error ? (\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                className=\"error-text\"\r\n                            >\r\n                                {adCardData.error}\r\n                            </Typography>\r\n                        ) : (\r\n                            <Grid container className=\"ads-wrapper\">\r\n                                <CardView\r\n                                    t={t}\r\n                                    list={adCardData.data.cards}\r\n                                    isFetch={adCardData.isFetch}\r\n                                />\r\n                            </Grid>\r\n                        )}\r\n                    </CustomTabPanel>\r\n                    <CustomTabPanel value={tabValue} index={1}>\r\n                        {lotCardData.error\r\n                            ? <Typography\r\n                                variant=\"subtitle1\"\r\n                                className=\"error-text\"\r\n                            >\r\n                                {lotCardData.error}\r\n                            </Typography>\r\n                            : <Grid container className=\"lots-wrapper\">\r\n                                <CardView\r\n                                    t={t}\r\n                                    list={lotCardData.data.cards}\r\n                                    isFetch={lotCardData.isFetch}\r\n                                />\r\n                            </Grid>\r\n                        }\r\n                    </CustomTabPanel>\r\n                    <Grid item xs={12} container justify=\"center\">\r\n                        {!(lotCardData.error || adCardData.error) && (\r\n                            <CustomPagination\r\n                                count={pageCount}\r\n                                currentPage={currentPage}\r\n                                handlePaginationPage={handlePaginationPage}\r\n                            />\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n                <Hidden smDown>\r\n                    <Grid\r\n                        item\r\n                        container\r\n                        md={3}\r\n                        direction=\"column\"\r\n                        className={classes.adBanner}\r\n                    >\r\n                        <Grid item>\r\n                            <Banner height=\"335px\"/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Hidden>\r\n            </Grid>\r\n            {/*{((adCardData.cardData.total > adCardData.cardData.data.length && tabValue === 0) || (lotCardData.cardData.total > lotCardData.cardData.data.length && tabValue === 1)) && (*/}\r\n            {/*    <Grid container className={classes.showMoreContainer}>*/}\r\n            {/*        <Grid item xs={12} md={9} className=\"show-more-block\">*/}\r\n            {/*            <ButtonComponent onClick={handleShowMore}>*/}\r\n            {/*                <Typography variant=\"subtitle2\" color=\"initial\">*/}\r\n            {/*                    {t('showMore')}*/}\r\n            {/*                </Typography>*/}\r\n            {/*            </ButtonComponent>*/}\r\n            {/*        </Grid>*/}\r\n            {/*    </Grid>*/}\r\n            {/*)}*/}\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}