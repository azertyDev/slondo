{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { userApi } from '../../api/api';\nexport const selfDataActionTypes = {\n  GET_SELF_DATA: 'GET_SELF_DATA'\n};\nexport const login = async (phone, password) => {\n  try {\n    const selfData = await userApi.login(phone, password);\n    return {\n      type: selfDataActionTypes.GET_SELF_DATA,\n      payload: _objectSpread({}, selfData.userInfo)\n    };\n  } catch (e) {}\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/actions/selfDataActions.ts"],"names":["userApi","selfDataActionTypes","GET_SELF_DATA","login","phone","password","selfData","type","payload","userInfo","e"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,eAAtB;AAEA,OAAO,MAAMC,mBAAmB,GAAG;AAC/BC,EAAAA,aAAa,EAAE;AADgB,CAA5B;AAIP,OAAO,MAAMC,KAAK,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC5C,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACG,KAAR,CAAcC,KAAd,EAAqBC,QAArB,CAAvB;AACA,WAAO;AACHE,MAAAA,IAAI,EAAEN,mBAAmB,CAACC,aADvB;AAEHM,MAAAA,OAAO,oBAAMF,QAAQ,CAACG,QAAf;AAFJ,KAAP;AAIH,GAND,CAME,OAAOC,CAAP,EAAU,CAEX;AACJ,CAVM","sourcesContent":["import {userApi} from '../../api/api'\r\n\r\nexport const selfDataActionTypes = {\r\n    GET_SELF_DATA: 'GET_SELF_DATA'\r\n};\r\n\r\nexport const login = async (phone, password) => {\r\n    try {\r\n        const selfData = await userApi.login(phone, password);\r\n        return {\r\n            type: selfDataActionTypes.GET_SELF_DATA,\r\n            payload: {...selfData.userInfo}\r\n        }\r\n    } catch (e) {\r\n\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}