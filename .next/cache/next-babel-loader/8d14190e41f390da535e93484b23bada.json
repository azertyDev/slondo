{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { ITEMS_PER_PAGE } from '@src/constants';\nimport { userAPI } from '@src/api/api';\nimport { i18n } from '@root/i18n';\nimport { AncmntsSlider } from './AncmntsSlider';\nimport { setErrorMsgAction } from \"@src/redux/slices/errorSlice\";\nimport { useDispatch } from \"react-redux\";\nvar initCard = {\n  id: null,\n  title: '',\n  safe_deal: null,\n  price: null,\n  currency: {\n    id: null,\n    name: ''\n  },\n  created_at: '',\n  region: {\n    id: null,\n    name: ''\n  },\n  city: {\n    id: null,\n    name: ''\n  },\n  images: [{\n    url: {\n      \"default\": ''\n    }\n  }],\n  delivery: null,\n  exchange: null,\n  ads_type: {\n    id: null,\n    name: '',\n    mark: ''\n  }\n};\nexport var initCards = Array.from({\n  length: ITEMS_PER_PAGE\n}).map(function () {\n  return initCard;\n});\nvar initCardData = {\n  isFetch: false,\n  error: null,\n  data: {\n    cards: initCards,\n    total: null\n  }\n};\nexport var AncmntsSliderContainer = function AncmntsSliderContainer() {\n  var dispatch = useDispatch();\n  var lang = i18n.language;\n\n  var _useState = useState(1),\n      currentPage = _useState[0],\n      setCurrentPage = _useState[1];\n\n  var _useState2 = useState(initCardData),\n      cardData = _useState2[0],\n      setCardData = _useState2[1];\n\n  var type = 'lot';\n\n  var setFetchedCardData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n                isFetch: true\n              }));\n              _context.next = 4;\n              return userAPI.getCards(ITEMS_PER_PAGE, currentPage, type, lang);\n\n            case 4:\n              newData = _context.sent;\n              setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n                isFetch: false,\n                data: {\n                  cards: newData.data,\n                  total: newData.total\n                }\n              }));\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch(setErrorMsgAction(_context.t0.message));\n              setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n                error: _context.t0.message\n              }));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function setFetchedCardData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setFetchedCardData();\n  }, [currentPage, lang]);\n  return __jsx(AncmntsSlider, {\n    title: 'Телефоны и планшеты',\n    cardData: cardData\n  });\n};","map":null,"metadata":{},"sourceType":"module"}