{"ast":null,"code":"import Axios from 'axios'; // import Cookies from 'universal-cookie';\n\n// const cookies = new Cookies();\n// const {token} = cookies.get('token') || {token: ''};\nconst amazonServer = 'http://54.205.72.116/api/'; // const localServer = 'http://192.168.1.60/slondo/public/api/';\n\nconst instance = Axios.create({\n  withCredentials: true,\n  baseURL: amazonServer\n}); // const config = {\n//     headers: {\n//         'Content-Type': 'multipart/form-data',\n//         // 'Authorization': `Bearer ${token}`,\n//         \"Access-Control-Allow-Origin\": \"*\"\n//     }\n// };\n\nexport const userAPI = {\n  login: (phone, password) => {\n    const form = new FormData();\n    form.set('phone', phone);\n    form.set('password', password);\n    return instance.post(`login`, form, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getCategories: lang => {\n    return instance.get(`categories/main?lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getAdDataForCreate: (ctgryID, subCtgryID, lang) => {\n    return instance.get(`subcategory?parent_id=${ctgryID}&lang=${lang}&child_id=${subCtgryID}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getCardData: (itemsPerPage, page, type, lang) => {\n    return instance.get(`a/all?itemsPerPage=${itemsPerPage}&page=${page}&type=${lang}&lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getAddById: (ads_id, lang) => {\n    return instance.get(`getAddById?ads_id=${ads_id}&lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getLocations: lang => {\n    return instance.get(`location?lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  createAdvrt: data => {\n    return instance.post(`regular/ads/new`, data).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getAdTypes: lang => {\n    return instance.get(`ads/type?lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/api/api.tsx"],"names":["Axios","amazonServer","instance","create","withCredentials","baseURL","userAPI","login","phone","password","form","FormData","set","post","headers","then","res","data","catch","err","getCategories","lang","get","getAdDataForCreate","ctgryID","subCtgryID","getCardData","itemsPerPage","page","type","getAddById","ads_id","getLocations","createAdvrt","getAdTypes"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\n// import Cookies from 'universal-cookie';\r\nimport {LocationsDataTypes} from \"@root/interfaces/Locations\";\r\nimport {CategoryType} from \"@root/interfaces/Categories\";\r\n\r\n\r\n// const cookies = new Cookies();\r\n// const {token} = cookies.get('token') || {token: ''};\r\n\r\nconst amazonServer = 'http://54.205.72.116/api/';\r\n// const localServer = 'http://192.168.1.60/slondo/public/api/';\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: amazonServer,\r\n});\r\n\r\n// const config = {\r\n//     headers: {\r\n//         'Content-Type': 'multipart/form-data',\r\n//         // 'Authorization': `Bearer ${token}`,\r\n//         \"Access-Control-Allow-Origin\": \"*\"\r\n//     }\r\n// };\r\n\r\nexport const userAPI = {\r\n    login: (phone: string, password: string): Promise<unknown> => {\r\n        const form = new FormData();\r\n        form.set('phone', phone);\r\n        form.set('password', password);\r\n        return instance\r\n            .post(`login`, form, {\r\n                headers: {'Content-Type': 'multipart/form-data'},\r\n            })\r\n            .then((res) => res.data)\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n    getCategories: (lang: string): Promise<CategoryType[]> => {\r\n        return instance.get(`categories/main?lang=${lang}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    },\r\n    getAdDataForCreate: (ctgryID: number, subCtgryID: number, lang: string): Promise<unknown> => {\r\n        return instance.get(`subcategory?parent_id=${ctgryID}&lang=${lang}&child_id=${subCtgryID}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    },\r\n    getCardData: (itemsPerPage: number, page: number, type: string, lang: string): Promise<any> => {\r\n        return instance.get(`a/all?itemsPerPage=${itemsPerPage}&page=${page}&type=${lang}&lang=${lang}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n    getAddById: (ads_id, lang: string): Promise<any> => {\r\n        return instance.get(`getAddById?ads_id=${ads_id}&lang=${lang}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => {\r\n                throw err;\r\n            })\r\n    },\r\n    getLocations: (lang: string): Promise<LocationsDataTypes> => {\r\n        return instance.get(`location?lang=${lang}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    },\r\n    createAdvrt: (data: any): Promise<LocationsDataTypes> => {\r\n        return instance.post(`regular/ads/new`, data)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    },\r\n    getAdTypes: (lang: string) => {\r\n        return instance.get(`ads/type?lang=${lang}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}