{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Hidden, Container, Typography } from '@material-ui/core';\nimport { useSelector } from \"react-redux\";\nimport { i18n } from \"@root/i18n\";\nimport { userAPI } from '@src/api/api';\nimport { MainLayout } from \"@src/components/MainLayout\";\nimport { AdvrtFormContainer } from './advrt_form/AdvrtFormContainer';\nimport { CreateAdvrt } from \"@src/components/advertisement/create_advrt/CreateAdvrt\";\nimport { useStyles } from './useStyles';\nvar initCreateAdState = {\n  isFetch: false,\n  error: null,\n  adType: {\n    id: null,\n    name: '',\n    currency: [],\n    expired: []\n  },\n  category: {\n    id: null,\n    name: '',\n    childs: []\n  },\n  subCategory: {\n    id: null,\n    name: '',\n    data: {\n      adsParams: []\n    }\n  }\n};\nexport var CreateAdvrtContainer = function CreateAdvrtContainer() {\n  _s();\n\n  var lang = i18n.language;\n  var categoriesList = useSelector(function (_ref) {\n    var categories = _ref.categories;\n    return categories.list;\n  });\n\n  var _useState = useState(1),\n      tabValue = _useState[0],\n      setTabValue = _useState[1];\n\n  var _useState2 = useState([]),\n      adTypes = _useState2[0],\n      setAdTypes = _useState2[1];\n\n  var _useState3 = useState(initCreateAdState),\n      createAdvrt = _useState3[0],\n      setCreateAdvrt = _useState3[1];\n\n  var category = createAdvrt.category;\n\n  var _useState4 = useState(false),\n      isForm = _useState4[0],\n      setIsForm = _useState4[1];\n\n  var getAdTypes = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _adTypes;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                isFetch: true\n              }));\n              _context.next = 4;\n              return userAPI.getAdTypes(lang);\n\n            case 4:\n              _adTypes = _context.sent;\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                isFetch: false\n              }));\n              setAdTypes(_adTypes);\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                adType: _adTypes[0]\n              }));\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                error: _context.t0\n              }));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function getAdTypes() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleTab = function handleTab(_, newValue) {\n    setTabValue(newValue);\n  };\n\n  var setAdType = function setAdType() {\n    var _adTypes$filter = adTypes.filter(function (type) {\n      return type.id === tabValue;\n    }),\n        _adTypes$filter2 = _slicedToArray(_adTypes$filter, 1),\n        selectedAdType = _adTypes$filter2[0];\n\n    setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n      adType: selectedAdType\n    }));\n  };\n\n  var handleCategory = function handleCategory(category) {\n    return function () {\n      setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n        error: null,\n        category: category\n      }));\n    };\n  };\n\n  var handleSubCategory = function handleSubCategory(id, name) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data, message;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              if (!(id !== undefined)) {\n                _context2.next = 10;\n                break;\n              }\n\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                isFetch: true\n              }));\n              _context2.next = 5;\n              return userAPI.getAdDataForCreate(category.id, id, lang);\n\n            case 5:\n              data = _context2.sent;\n              setIsForm(true);\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                isFetch: false,\n                subCategory: {\n                  id: id,\n                  name: name,\n                  data: data\n                }\n              }));\n              _context2.next = 12;\n              break;\n\n            case 10:\n              setIsForm(true);\n              setCreateAdvrt(_objectSpread(_objectSpread({}, initCreateAdState), {}, {\n                adType: createAdvrt.adType,\n                category: createAdvrt.category\n              }));\n\n            case 12:\n              _context2.next = 18;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              message = _context2.t0.message;\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                error: message\n              }));\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 14]]);\n    }));\n  };\n\n  useEffect(function () {\n    getAdTypes();\n  }, []);\n  useEffect(function () {\n    adTypes.length && setAdType();\n  }, [tabValue]);\n  var classes = useStyles();\n  return __jsx(MainLayout, null, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, createAdvrt.isFetch ? __jsx(Typography, null, \"...Loading\") : isForm ? __jsx(AdvrtFormContainer, {\n    setIsForm: setIsForm,\n    createAdvrt: createAdvrt\n  }) : __jsx(CreateAdvrt, {\n    handleTab: handleTab,\n    handleCategory: handleCategory,\n    handleSubCategory: handleSubCategory,\n    adTypes: adTypes,\n    tabValue: tabValue,\n    createAdvrt: createAdvrt,\n    categoriesList: categoriesList\n  }), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 3,\n    className: classes.adBanner\n  }, __jsx(\"div\", {\n    className: \"banner\"\n  })))));\n};\n\n_s(CreateAdvrtContainer, \"OEacznernza8p9mGrX9u8j4WXDQ=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = CreateAdvrtContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdvrtContainer\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/CreateAdvrtContainer.tsx"],"names":["React","useEffect","useState","Grid","Hidden","Container","Typography","useSelector","i18n","userAPI","MainLayout","AdvrtFormContainer","CreateAdvrt","useStyles","initCreateAdState","isFetch","error","adType","id","name","currency","expired","category","childs","subCategory","data","adsParams","CreateAdvrtContainer","lang","language","categoriesList","categories","list","tabValue","setTabValue","adTypes","setAdTypes","createAdvrt","setCreateAdvrt","isForm","setIsForm","getAdTypes","handleTab","_","newValue","setAdType","filter","type","selectedAdType","handleCategory","handleSubCategory","undefined","getAdDataForCreate","message","length","classes","adBanner"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {Grid, Hidden, Container, Typography} from '@material-ui/core';\r\nimport {useSelector} from \"react-redux\";\r\nimport {i18n} from \"@root/i18n\";\r\nimport {userAPI} from '@src/api/api';\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {MainLayout} from \"@src/components/MainLayout\";\r\nimport {AdvrtFormContainer} from './advrt_form/AdvrtFormContainer';\r\nimport {CreateAdvrt} from \"@src/components/advertisement/create_advrt/CreateAdvrt\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nconst initCreateAdState = {\r\n    isFetch: false,\r\n    error: null,\r\n    adType: {\r\n        id: null,\r\n        name: '',\r\n        currency: [],\r\n        expired: [],\r\n    },\r\n    category: {\r\n        id: null,\r\n        name: '',\r\n        childs: []\r\n    },\r\n    subCategory: {\r\n        id: null,\r\n        name: '',\r\n        data: {\r\n            adsParams: []\r\n        }\r\n    }\r\n};\r\n\r\nexport const CreateAdvrtContainer: FC<void> = () => {\r\n    const lang = i18n.language;\r\n\r\n    const categoriesList = useSelector(({categories}: RootState) => categories.list);\r\n\r\n    const [tabValue, setTabValue] = useState(1);\r\n\r\n    const [adTypes, setAdTypes] = useState([]);\r\n\r\n    const [createAdvrt, setCreateAdvrt] = useState(initCreateAdState);\r\n    const {category} = createAdvrt;\r\n\r\n    const [isForm, setIsForm] = useState(false);\r\n\r\n    const getAdTypes = async () => {\r\n        try {\r\n            setCreateAdvrt({...createAdvrt, isFetch: true});\r\n\r\n            const adTypes = await userAPI.getAdTypes(lang);\r\n\r\n            setCreateAdvrt({...createAdvrt, isFetch: false});\r\n\r\n            setAdTypes(adTypes);\r\n            setCreateAdvrt({\r\n                ...createAdvrt,\r\n                adType: adTypes[0]\r\n            })\r\n        } catch (error) {\r\n            setCreateAdvrt({...createAdvrt, error});\r\n        }\r\n    };\r\n\r\n    const handleTab = (_, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    const setAdType = () => {\r\n        const [selectedAdType] = adTypes.filter(type => type.id === tabValue);\r\n\r\n        setCreateAdvrt({\r\n            ...createAdvrt,\r\n            adType: selectedAdType\r\n        });\r\n    };\r\n\r\n    const handleCategory = (category) => () => {\r\n        setCreateAdvrt({\r\n            ...createAdvrt,\r\n            error: null,\r\n            category\r\n        });\r\n    };\r\n\r\n    const handleSubCategory = (id, name) => async () => {\r\n        try {\r\n            if (id !== undefined) {\r\n                setCreateAdvrt({\r\n                    ...createAdvrt,\r\n                    isFetch: true\r\n                });\r\n\r\n                const data: any = await userAPI.getAdDataForCreate(category.id, id, lang);\r\n\r\n                setIsForm(true);\r\n\r\n                setCreateAdvrt({\r\n                    ...createAdvrt,\r\n                    isFetch: false,\r\n                    subCategory: {id, name, data}\r\n                });\r\n            } else {\r\n                setIsForm(true);\r\n                setCreateAdvrt({\r\n                    ...initCreateAdState,\r\n                    adType: createAdvrt.adType,\r\n                    category: createAdvrt.category\r\n                });\r\n            }\r\n        } catch ({message}) {\r\n            setCreateAdvrt({\r\n                ...createAdvrt,\r\n                error: message\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAdTypes();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        adTypes.length && setAdType();\r\n    }, [tabValue]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <MainLayout>\r\n            <Container maxWidth=\"lg\">\r\n                {createAdvrt.isFetch\r\n                    ? <Typography>...Loading</Typography>\r\n                    : (\r\n                        isForm\r\n                            ? <AdvrtFormContainer\r\n                                setIsForm={setIsForm}\r\n                                createAdvrt={createAdvrt}\r\n                            />\r\n                            : <CreateAdvrt\r\n                                handleTab={handleTab}\r\n                                handleCategory={handleCategory}\r\n                                handleSubCategory={handleSubCategory}\r\n                                adTypes={adTypes}\r\n                                tabValue={tabValue}\r\n                                createAdvrt={createAdvrt}\r\n                                categoriesList={categoriesList}\r\n                            />\r\n                    )}\r\n                <Hidden smDown>\r\n                    <Grid item md={3} className={classes.adBanner}>\r\n                        <div className=\"banner\"/>\r\n                    </Grid>\r\n                </Hidden>\r\n            </Container>\r\n        </MainLayout>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}