{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { AncmntAutoForm } from \"./AncmntAutoForm\";\nimport { prepareCreateAncmnt } from \"@root/src/helpers\";\nimport { Auto_icon } from '@src/components/elements/icons';\nimport { AccordionComponent } from \"@src/components/announcement/create_ancmnt/ancmnt_form/ancmnt_auto_form/accordion_component/AccordionComponent\";\nexport const AncmntAutoFormContainer = props => {\n  const {\n    createAncmnt,\n    values\n  } = props;\n  const {\n    adParams\n  } = values;\n  const data = prepareCreateAncmnt(createAncmnt.subCategory.data, adParams);\n  console.log(data);\n  const {\n    manufacturer,\n    models = [],\n    body,\n    transmission,\n    drive\n  } = data;\n  const autoData = {\n    automobile: {\n      icon: Auto_icon,\n      manufacturer,\n      models,\n      body,\n      transmission,\n      drive\n    }\n  };\n\n  const makeForm = () => {\n    return Object.keys(autoData).map((key, i) => {\n      return __jsx(AccordionComponent, {\n        key: i,\n        icon: autoData[key].icon,\n        title: key\n      });\n    });\n  };\n\n  return __jsx(AncmntAutoForm, _extends({}, props, {\n    makeForm: makeForm\n  }));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/announcement/create_ancmnt/ancmnt_form/ancmnt_auto_form/AncmntAutoFormContainer.tsx"],"names":["React","AncmntAutoForm","prepareCreateAncmnt","Auto_icon","AccordionComponent","AncmntAutoFormContainer","props","createAncmnt","values","adParams","data","subCategory","console","log","manufacturer","models","body","transmission","drive","autoData","automobile","icon","makeForm","Object","keys","map","key","i"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAwC,OAAxC;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,SAAQC,mBAAR,QAAkC,mBAAlC;AAEA,SAAQC,SAAR,QAAwB,gCAAxB;AACA,SAAQC,kBAAR,QAAiC,gHAAjC;AASA,OAAO,MAAMC,uBAAqD,GAAIC,KAAD,IAAW;AAC5E,QAAM;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAyBF,KAA/B;AACA,QAAM;AAACG,IAAAA;AAAD,MAAaD,MAAnB;AACA,QAAME,IAAI,GAAGR,mBAAmB,CAACK,YAAY,CAACI,WAAb,CAAyBD,IAA1B,EAAgCD,QAAhC,CAAhC;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,QAAM;AACFI,IAAAA,YADE;AAEFC,IAAAA,MAAM,GAAG,EAFP;AAGFC,IAAAA,IAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA;AALE,MAMFR,IANJ;AAQA,QAAMS,QAAQ,GAAG;AACbC,IAAAA,UAAU,EAAE;AACRC,MAAAA,IAAI,EAAElB,SADE;AAERW,MAAAA,YAFQ;AAGRC,MAAAA,MAHQ;AAIRC,MAAAA,IAJQ;AAKRC,MAAAA,YALQ;AAMRC,MAAAA;AANQ;AADC,GAAjB;;AAWA,QAAMI,QAAQ,GAAG,MAAM;AACnB,WAAOC,MAAM,CAACC,IAAP,CAAYL,QAAZ,EAAsBM,GAAtB,CAA0B,CAACC,GAAD,EAAMC,CAAN,KAAY;AACzC,aAAO,MAAC,kBAAD;AACH,QAAA,GAAG,EAAEA,CADF;AAEH,QAAA,IAAI,EAAER,QAAQ,CAACO,GAAD,CAAR,CAAcL,IAFjB;AAGH,QAAA,KAAK,EAAEK;AAHJ,QAAP;AAKH,KANM,CAAP;AAOH,GARD;;AAUA,SACI,MAAC,cAAD,eACQpB,KADR;AAEI,IAAA,QAAQ,EAAEgB;AAFd,KADJ;AAMH,CA1CM","sourcesContent":["import React, {FC, SetStateAction} from \"react\";\r\nimport {AncmntAutoForm} from \"./AncmntAutoForm\";\r\nimport {prepareCreateAncmnt} from \"@root/src/helpers\";\r\nimport {CreateAncmntFields, CreateAncmntState} from \"@root/interfaces/Announcement\";\r\nimport {Auto_icon} from '@src/components/elements/icons';\r\nimport {AccordionComponent} from \"@src/components/announcement/create_ancmnt/ancmnt_form/ancmnt_auto_form/accordion_component/AccordionComponent\";\r\n\r\n\r\ntype AncmntAutoFormPropsTypes = {\r\n    createAncmnt: CreateAncmntState;\r\n    values: CreateAncmntFields;\r\n    setValues: (values: SetStateAction<CreateAncmntFields>, shouldValidate?: boolean | undefined) => any;\r\n};\r\n\r\nexport const AncmntAutoFormContainer: FC<AncmntAutoFormPropsTypes> = (props) => {\r\n    const {createAncmnt, values} = props;\r\n    const {adParams} = values;\r\n    const data = prepareCreateAncmnt(createAncmnt.subCategory.data, adParams);\r\n\r\n    console.log(data)\r\n\r\n    const {\r\n        manufacturer,\r\n        models = [],\r\n        body,\r\n        transmission,\r\n        drive,\r\n    } = data;\r\n\r\n    const autoData = {\r\n        automobile: {\r\n            icon: Auto_icon,\r\n            manufacturer,\r\n            models,\r\n            body,\r\n            transmission,\r\n            drive,\r\n        }\r\n    };\r\n\r\n    const makeForm = () => {\r\n        return Object.keys(autoData).map((key, i) => {\r\n            return <AccordionComponent\r\n                key={i}\r\n                icon={autoData[key].icon}\r\n                title={key}\r\n            />\r\n        })\r\n    };\r\n\r\n    return (\r\n        <AncmntAutoForm\r\n            {...props}\r\n            makeForm={makeForm}\r\n        />\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}