{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { setErrorMsgAction } from \"@src/redux/slices/errorSlice\";\nexport var stateHelper = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(state, setState, dispatch, fetchedData) {\n    var _objectSpread2, _Object$entries, _Object$entries2, _key, val;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                isFetch: true\n              }));\n              _Object$entries = Object.entries(fetchedData), _Object$entries2 = _slicedToArray(_Object$entries, 2), _key = _Object$entries2[0], val = _Object$entries2[1];\n              setState(_objectSpread(_objectSpread({}, state), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, _key, val), _defineProperty(_objectSpread2, \"isFetch\", false), _objectSpread2)));\n            } catch (e) {\n              dispatch(setErrorMsgAction(e.message));\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                isFetch: false\n              }));\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function stateHelper(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var categoryDataNormalization = function categoryDataNormalization(categoryList) {\n  return categoryList.map(function (category) {\n    var childs = category.childs.map(function (child) {\n      return _objectSpread(_objectSpread({}, child), {}, {\n        parent: category\n      });\n    });\n    return _objectSpread(_objectSpread({}, category), {}, {\n      childs: childs\n    });\n  });\n};\nexport var categorySearchHelper = function categorySearchHelper(text, categoryList) {\n  var searchRegExp = RegExp(text, 'i');\n  return categoryList.reduce(function (list, category) {\n    category.childs.forEach(function (sub_ctgr) {\n      if (searchRegExp.test(sub_ctgr.name)) {\n        list.push(sub_ctgr);\n      }\n    });\n    return list;\n  }, []);\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/helpers.ts"],"names":["setErrorMsgAction","stateHelper","state","setState","dispatch","fetchedData","isFetch","Object","entries","key","val","e","message","categoryDataNormalization","categoryList","map","category","childs","child","parent","categorySearchHelper","text","searchRegExp","RegExp","reduce","list","forEach","sub_ctgr","test","name","push"],"mappings":";;;;;;;;;AAAA,SAAQA,iBAAR,QAAgC,8BAAhC;AAiBA,OAAO,IAAMC,WAAwB;AAAA,sEAAG,iBAAOC,KAAP,EAAcC,QAAd,EAAwBC,QAAxB,EAAkCC,WAAlC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACpC,gBAAI;AACAF,cAAAA,QAAQ,iCAAKD,KAAL;AAAYI,gBAAAA,OAAO,EAAE;AAArB,iBAAR;AADA,gCAEmBC,MAAM,CAACC,OAAP,CAAeH,WAAf,CAFnB,yDAEOI,IAFP,wBAEYC,GAFZ;AAGAP,cAAAA,QAAQ,iCAAKD,KAAL,6DAAaO,IAAb,EAAmBC,GAAnB,8CAAiC,KAAjC,oBAAR;AACH,aAJD,CAIE,OAAOC,CAAP,EAAU;AACRP,cAAAA,QAAQ,CAACJ,iBAAiB,CAACW,CAAC,CAACC,OAAH,CAAlB,CAAR;AACAT,cAAAA,QAAQ,iCAAKD,KAAL;AAAYI,gBAAAA,OAAO,EAAE;AAArB,iBAAR;AACH;;AARmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAxBL,WAAwB;AAAA;AAAA;AAAA,GAA9B;AAWP,OAAO,IAAMY,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,YAAD;AAAA,SACrCA,YAAY,CAACC,GAAb,CAAiB,UAAAC,QAAQ,EAAI;AACzB,QAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAT,CAAgBF,GAAhB,CAAoB,UAAAG,KAAK;AAAA,6CAASA,KAAT;AAAgBC,QAAAA,MAAM,EAAEH;AAAxB;AAAA,KAAzB,CAAf;AACA,2CAAWA,QAAX;AAAqBC,MAAAA,MAAM,EAANA;AAArB;AACH,GAHD,CADqC;AAAA,CAAlC;AAOP,OAAO,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAeP,YAAf,EAA4D;AAC5F,MAAMQ,YAAY,GAAGC,MAAM,CAACF,IAAD,EAAO,GAAP,CAA3B;AACA,SAAOP,YAAY,CACdU,MADE,CACK,UAACC,IAAD,EAAOT,QAAP,EAAoB;AACxBA,IAAAA,QAAQ,CAACC,MAAT,CAAgBS,OAAhB,CAAwB,UAAAC,QAAQ,EAAI;AAChC,UAAIL,YAAY,CAACM,IAAb,CAAkBD,QAAQ,CAACE,IAA3B,CAAJ,EAAsC;AAClCJ,QAAAA,IAAI,CAACK,IAAL,CAAUH,QAAV;AACH;AACJ,KAJD;AAKA,WAAOF,IAAP;AACH,GARE,EAQA,EARA,CAAP;AASH,CAXM","sourcesContent":["import {setErrorMsgAction} from \"@src/redux/slices/errorSlice\";\r\nimport {CategoryType} from \"@root/interfaces/Categories\";\r\nimport {Dispatch, SetStateAction} from \"react\";\r\nimport {IdNameType} from \"@root/interfaces/Announcement\";\r\n\r\n\r\ntype StateHelper = (\r\n    state: any,\r\n    setState: Dispatch<SetStateAction<any>>,\r\n    dispatch: Dispatch<any>,\r\n    fetchedData: {\r\n        [key: string]: Promise<any>\r\n    },\r\n) => Promise<void>;\r\n\r\ntype SearchType = (IdNameType & { parent: any, icons: [], image: { url: string } })[];\r\n\r\nexport const stateHelper: StateHelper = async (state, setState, dispatch, fetchedData) => {\r\n    try {\r\n        setState({...state, isFetch: true});\r\n        const [key, val] = Object.entries(fetchedData);\r\n        setState({...state, [key]: val, isFetch: false});\r\n    } catch (e) {\r\n        dispatch(setErrorMsgAction(e.message));\r\n        setState({...state, isFetch: false});\r\n    }\r\n};\r\n\r\nexport const categoryDataNormalization = (categoryList: CategoryType[]): CategoryType[] => (\r\n    categoryList.map(category => {\r\n        const childs = category.childs.map(child => ({...child, parent: category}));\r\n        return {...category, childs};\r\n    })\r\n);\r\n\r\nexport const categorySearchHelper = (text: string, categoryList: CategoryType[]): SearchType => {\r\n    const searchRegExp = RegExp(text, 'i');\r\n    return categoryList\r\n        .reduce((list, category) => {\r\n            category.childs.forEach(sub_ctgr => {\r\n                if (searchRegExp.test(sub_ctgr.name)) {\r\n                    list.push(sub_ctgr);\r\n                }\r\n            })\r\n            return list;\r\n        }, []);\r\n};"]},"metadata":{},"sourceType":"module"}