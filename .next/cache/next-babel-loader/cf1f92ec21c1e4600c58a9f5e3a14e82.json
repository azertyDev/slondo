{"ast":null,"code":"import { userApi } from '../api/api';\nimport { call, put, all, takeLatest } from \"redux-saga/effects\";\nimport { FETCH_SELF_DATA, selfDataActions } from \"./actions/selfDataActions\"; // Self data saga\n\nconst {\n  fetchSelfDataBegin,\n  fetchSelfDataSuccess,\n  fetchSelfDataFailure\n} = selfDataActions;\n\nfunction* workerFetchSelfData({\n  payload\n}) {\n  try {\n    yield put(fetchSelfDataBegin());\n    const data = yield call(userApi.login, payload.phone, payload.password);\n    yield put(fetchSelfDataSuccess(data));\n  } catch (e) {\n    yield put(fetchSelfDataFailure(e));\n  }\n}\n\nfunction* watchFetchSelfData() {\n  yield takeLatest(FETCH_SELF_DATA, workerFetchSelfData);\n} // Root saga export\n\n\nexport default function* rootSaga() {\n  yield all([watchFetchSelfData()]);\n}","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/sagas.ts"],"names":["userApi","call","put","all","takeLatest","FETCH_SELF_DATA","selfDataActions","fetchSelfDataBegin","fetchSelfDataSuccess","fetchSelfDataFailure","workerFetchSelfData","payload","data","login","phone","password","e","watchFetchSelfData","rootSaga"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AACA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,UAAxB,QAAyC,oBAAzC;AACA,SAAQC,eAAR,EAAyBC,eAAzB,QAA+C,2BAA/C,C,CAGA;;AACA,MAAM;AAACC,EAAAA,kBAAD;AAAqBC,EAAAA,oBAArB;AAA2CC,EAAAA;AAA3C,IAAmEH,eAAzE;;AAEA,UAAUI,mBAAV,CAA8B;AAACC,EAAAA;AAAD,CAA9B,EAAyC;AACrC,MAAI;AACA,UAAMT,GAAG,CAACK,kBAAkB,EAAnB,CAAT;AACA,UAAMK,IAAI,GAAG,MAAMX,IAAI,CAACD,OAAO,CAACa,KAAT,EAAgBF,OAAO,CAACG,KAAxB,EAA+BH,OAAO,CAACI,QAAvC,CAAvB;AACA,UAAMb,GAAG,CAACM,oBAAoB,CAACI,IAAD,CAArB,CAAT;AACH,GAJD,CAIE,OAAOI,CAAP,EAAU;AACR,UAAMd,GAAG,CAACO,oBAAoB,CAACO,CAAD,CAArB,CAAT;AACH;AACJ;;AAED,UAAUC,kBAAV,GAA+B;AAC3B,QAAMb,UAAU,CAACC,eAAD,EAAkBK,mBAAlB,CAAhB;AACH,C,CAGD;;;AACA,eAAe,UAAUQ,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CACNc,kBAAkB,EADZ,CAAD,CAAT;AAGH","sourcesContent":["import {userApi} from '../api/api'\r\nimport {call, put, all, takeLatest} from \"redux-saga/effects\"\r\nimport {FETCH_SELF_DATA, selfDataActions} from \"./actions/selfDataActions\"\r\n\r\n\r\n// Self data saga\r\nconst {fetchSelfDataBegin, fetchSelfDataSuccess, fetchSelfDataFailure} = selfDataActions;\r\n\r\nfunction* workerFetchSelfData({payload}) {\r\n    try {\r\n        yield put(fetchSelfDataBegin());\r\n        const data = yield call(userApi.login, payload.phone, payload.password);\r\n        yield put(fetchSelfDataSuccess(data));\r\n    } catch (e) {\r\n        yield put(fetchSelfDataFailure(e));\r\n    }\r\n}\r\n\r\nfunction* watchFetchSelfData() {\r\n    yield takeLatest(FETCH_SELF_DATA, workerFetchSelfData);\r\n}\r\n\r\n\r\n// Root saga export\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchFetchSelfData()\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}