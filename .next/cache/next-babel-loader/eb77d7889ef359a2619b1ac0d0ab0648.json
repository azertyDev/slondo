{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport { MenuItem, Typography } from \"@material-ui/core\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport * as Yup from 'yup';\nimport { useStyles } from './useStyles';\nimport { CustomFormikSelector } from \"@src/components/elements/custom_formik_selector/CustomFormikSelector\";\nconst initValues = {\n  type: '',\n  category: ''\n};\nexport const CreateAdModalForm = props => {\n  const {\n    handleCloseModal\n  } = props;\n  const router = useRouter();\n  const validationSchema = Yup.object().shape({\n    type: Yup.string().required('Выберите тип объявления!'),\n    category: Yup.string().required('Выберите категорию!')\n  });\n\n  const submit = () => {\n    router.push('/create_advertisement');\n  };\n\n  const classes = useStyles();\n  return __jsx(Formik, {\n    initialValues: initValues,\n    validationSchema: validationSchema,\n    onSubmit: submit\n  }, ({\n    errors,\n    touched,\n    values,\n    setFieldValue\n  }) => {\n    return __jsx(Form, {\n      className: classes.root\n    }, __jsx(\"div\", null, __jsx(CustomFormikSelector, {\n      name: \"type\",\n      setFieldValue: setFieldValue,\n      value: values.type\n    }, __jsx(MenuItem, {\n      value: 10\n    }, \"UZS\"), __jsx(MenuItem, {\n      value: 10\n    }, \"USD\"), __jsx(MenuItem, {\n      value: 20\n    }, \"EUR\"), __jsx(MenuItem, {\n      value: 30\n    }, \"RUB\"))), __jsx(\"div\", {\n      className: \"form-btns\"\n    }, __jsx(ButtonComponent, {\n      onClick: handleCloseModal\n    }, __jsx(Typography, null, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\")), __jsx(ButtonComponent, {\n      type: \"submit\"\n    }, __jsx(Typography, null, \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C\"))));\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/createAdModalForm/CreateAdModalForm.tsx"],"names":["React","Formik","Form","useRouter","MenuItem","Typography","ButtonComponent","Yup","useStyles","CustomFormikSelector","initValues","type","category","CreateAdModalForm","props","handleCloseModal","router","validationSchema","object","shape","string","required","submit","push","classes","errors","touched","values","setFieldValue","root"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,QAA3B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,QAAR,EAA0BC,UAA1B,QAA2C,mBAA3C;AACA,SAAQC,eAAR,QAA8B,wCAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,oBAAR,QAAmC,sEAAnC;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAE,EADS;AAEfC,EAAAA,QAAQ,EAAE;AAFK,CAAnB;AAKA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACxC,QAAM;AAACC,IAAAA;AAAD,MAAqBD,KAA3B;AAEA,QAAME,MAAM,GAAGb,SAAS,EAAxB;AAEA,QAAMc,gBAAgB,GAAGV,GAAG,CAACW,MAAJ,GAAaC,KAAb,CAAmB;AACxCR,IAAAA,IAAI,EAAEJ,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,0BAAtB,CADkC;AAExCT,IAAAA,QAAQ,EAAEL,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB;AAF8B,GAAnB,CAAzB;;AAKA,QAAMC,MAAM,GAAG,MAAM;AACjBN,IAAAA,MAAM,CAACO,IAAP,CAAY,uBAAZ;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,SACI,MAAC,MAAD;AAAQ,IAAA,aAAa,EAAEE,UAAvB;AAAmC,IAAA,gBAAgB,EAAEO,gBAArD;AAAuE,IAAA,QAAQ,EAAEK;AAAjF,KACK,CAAC;AAACG,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA;AAA1B,GAAD,KAA8C;AAC3C,WACI,MAAC,IAAD;AAAM,MAAA,SAAS,EAAEJ,OAAO,CAACK;AAAzB,OACI,mBACI,MAAC,oBAAD;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAkC,MAAA,aAAa,EAAED,aAAjD;AAAgE,MAAA,KAAK,EAAED,MAAM,CAAChB;AAA9E,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAjB,aADJ,EAEI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAjB,aAFJ,EAGI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAjB,aAHJ,EAII,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAjB,aAJJ,CADJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,MAAC,eAAD;AAAiB,MAAA,OAAO,EAAEI;AAA1B,OACI,MAAC,UAAD,+CADJ,CADJ,EAII,MAAC,eAAD;AAAiB,MAAA,IAAI,EAAC;AAAtB,OACI,MAAC,UAAD,uEADJ,CAJJ,CATJ,CADJ;AAoBH,GAtBL,CADJ;AA0BH,CAzCM","sourcesContent":["import React from \"react\"\r\nimport {Formik, Form} from \"formik\"\r\nimport {useRouter} from \"next/router\"\r\nimport {MenuItem, Select, Typography} from \"@material-ui/core\"\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\"\r\nimport * as Yup from 'yup'\r\nimport {useStyles} from './useStyles'\r\nimport {CustomFormikSelector} from \"@src/components/elements/custom_formik_selector/CustomFormikSelector\";\r\n\r\nconst initValues = {\r\n    type: '',\r\n    category: ''\r\n};\r\n\r\nexport const CreateAdModalForm = (props) => {\r\n    const {handleCloseModal} = props;\r\n\r\n    const router = useRouter();\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        type: Yup.string().required('Выберите тип объявления!'),\r\n        category: Yup.string().required('Выберите категорию!'),\r\n    });\r\n\r\n    const submit = () => {\r\n        router.push('/create_advertisement');\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Formik initialValues={initValues} validationSchema={validationSchema} onSubmit={submit}>\r\n            {({errors, touched, values, setFieldValue}) => {\r\n                return (\r\n                    <Form className={classes.root}>\r\n                        <div>\r\n                            <CustomFormikSelector name='type' setFieldValue={setFieldValue} value={values.type}>\r\n                                <MenuItem value={10}>UZS</MenuItem>\r\n                                <MenuItem value={10}>USD</MenuItem>\r\n                                <MenuItem value={20}>EUR</MenuItem>\r\n                                <MenuItem value={30}>RUB</MenuItem>\r\n                            </CustomFormikSelector>\r\n                        </div>\r\n                        <div className='form-btns'>\r\n                            <ButtonComponent onClick={handleCloseModal}>\r\n                                <Typography>Отмена</Typography>\r\n                            </ButtonComponent>\r\n                            <ButtonComponent type='submit'>\r\n                                <Typography>Продолжить</Typography>\r\n                            </ButtonComponent>\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}