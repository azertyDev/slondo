{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Typography } from \"@material-ui/core\";\nimport Countdown from 'react-countdown';\nimport { useStyles } from './useStyles';\nexport const LotTimer = ({\n  date\n}) => {\n  const formatNumber = number => {\n    if (number <= 9) {\n      return `0${number}`;\n    } else {\n      return number;\n    }\n  };\n\n  const renderer = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      return __jsx(\"div\", null, \"Finish\");\n    } else {\n      return __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"span\", null, __jsx(Typography, {\n        variant: \"h6\"\n      }, formatNumber(days))), __jsx(Typography, {\n        variant: \"caption\"\n      }, \"\\u0434\\u043D\\u0438\")), __jsx(\"span\", null, \":\"), __jsx(\"div\", null, __jsx(\"span\", null, __jsx(Typography, {\n        variant: \"h6\"\n      }, formatNumber(hours))), __jsx(Typography, {\n        variant: \"caption\"\n      }, \"\\u0447\\u0430\\u0441\\u044B\")), __jsx(\"span\", null, \":\"), __jsx(\"div\", null, __jsx(\"span\", null, __jsx(Typography, {\n        variant: \"h6\"\n      }, formatNumber(minutes))), __jsx(Typography, {\n        variant: \"caption\"\n      }, \"\\u043C\\u0438\\u043D\\u0443\\u0442\\u044B\")), __jsx(\"span\", null, \":\"), __jsx(\"div\", null, __jsx(\"span\", null, __jsx(Typography, {\n        variant: \"h6\"\n      }, formatNumber(seconds))), __jsx(Typography, {\n        variant: \"caption\"\n      }, \"\\u0441\\u0435\\u043A\\u0443\\u043D\\u0434\\u044B\")));\n    }\n  };\n\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.lotTimer\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"initial\"\n  }, \"\\u041E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u0435 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432 \\u0447\\u0435\\u0440\\u0435\\u0437:\"), __jsx(Countdown, {\n    date: date,\n    renderer: renderer\n  }));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/showAdvertisement/rightSide/lotInfo/LotTimer.tsx"],"names":["React","Typography","Countdown","useStyles","LotTimer","date","formatNumber","number","renderer","days","hours","minutes","seconds","completed","classes","lotTimer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAChC,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC7B,QAAIA,MAAM,IAAI,CAAd,EAAiB;AACb,aAAQ,IAAGA,MAAO,EAAlB;AACH,KAFD,MAEO;AACH,aAAOA,MAAP;AACH;AACJ,GAND;;AAQA,QAAMC,QAAQ,GAAG,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA;AAAhC,GAAD,KAAgD;AAC7D,QAAIA,SAAJ,EAAe;AACX,aAAO,4BAAP;AACH,KAFD,MAEO;AACH,aACI,mBACI,mBACI,oBACI,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,SAA0BP,YAAY,CAACG,IAAD,CAAtC,CADJ,CADJ,EAII,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,8BAJJ,CADJ,EAOI,wBAPJ,EAQI,mBACI,oBACI,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,SAA0BH,YAAY,CAACI,KAAD,CAAtC,CADJ,CADJ,EAII,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,oCAJJ,CARJ,EAcI,wBAdJ,EAeI,mBACI,oBACI,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,SAA0BJ,YAAY,CAACK,OAAD,CAAtC,CADJ,CADJ,EAII,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,gDAJJ,CAfJ,EAqBI,wBArBJ,EAsBI,mBACI,oBACI,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,SAA0BL,YAAY,CAACM,OAAD,CAAtC,CADJ,CADJ,EAII,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,sDAJJ,CAtBJ,CADJ;AA+BH;AACJ,GApCD;;AAsCA,QAAME,OAAO,GAAGX,SAAS,EAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAEW,OAAO,CAACC;AAAxB,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,KAAK,EAAC;AAAtC,mIADJ,EAII,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEV,IAAjB;AAAuB,IAAA,QAAQ,EAAEG;AAAjC,IAJJ,CADJ;AAQH,CAxDM","sourcesContent":["import React from 'react';\r\nimport {Typography} from \"@material-ui/core\";\r\nimport Countdown from 'react-countdown';\r\n\r\nimport {useStyles} from './useStyles';\r\n\r\nexport const LotTimer = ({date}) => {\r\n    const formatNumber = (number) => {\r\n        if (number <= 9) {\r\n            return `0${number}`\r\n        } else {\r\n            return number\r\n        }\r\n    }\r\n\r\n    const renderer = ({days, hours, minutes, seconds, completed}) => {\r\n        if (completed) {\r\n            return <div>Finish</div>;\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <span>\r\n                            <Typography variant='h6'>{formatNumber(days)}</Typography>\r\n                        </span>\r\n                        <Typography variant='caption'>дни</Typography>\r\n                    </div>\r\n                    <span>:</span>\r\n                    <div>\r\n                        <span>\r\n                            <Typography variant='h6'>{formatNumber(hours)}</Typography>\r\n                        </span>\r\n                        <Typography variant='caption'>часы</Typography>\r\n                    </div>\r\n                    <span>:</span>\r\n                    <div>\r\n                        <span>\r\n                            <Typography variant='h6'>{formatNumber(minutes)}</Typography>\r\n                        </span>\r\n                        <Typography variant='caption'>минуты</Typography>\r\n                    </div>\r\n                    <span>:</span>\r\n                    <div>\r\n                        <span>\r\n                            <Typography variant='h6'>{formatNumber(seconds)}</Typography>\r\n                        </span>\r\n                        <Typography variant='caption'>секунды</Typography>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.lotTimer}>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n                Окончание торгов через:\r\n            </Typography>\r\n            <Countdown date={date} renderer={renderer}/>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}