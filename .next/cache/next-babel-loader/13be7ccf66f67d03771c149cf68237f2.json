{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Grid, Typography, Hidden, Tabs, Tab } from '@material-ui/core';\nimport { CardItem } from '@src/components/elements/card/Card';\nimport { Banner } from '@src/components/elements/banner/Banner';\nimport { CustomTabPanel } from '@src/components/elements/custom_tab_panel/CustomTabPanel';\nimport { Link } from '@root/i18n';\nimport { CustomPagination } from \"../../elements/custom_pagination/CustomPagination\";\nimport { useStyles } from './useStyles';\nexport const MainContent = props => {\n  const {\n    t,\n    tabValue,\n    handleTabChange,\n    adCardData,\n    lotCardData\n  } = props;\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"\\u0412\\u0441\\u0435 \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    md: 9,\n    xs: 12,\n    item: true\n  }, __jsx(Tabs, {\n    value: tabValue,\n    onChange: handleTabChange,\n    indicatorColor: \"primary\",\n    className: \"tabs\",\n    variant: \"fullWidth\"\n  }, __jsx(Tab, {\n    label: __jsx(Typography, {\n      variant: \"h6\"\n    }, t('allAds')),\n    value: 0\n  }), __jsx(Tab, {\n    label: __jsx(Typography, {\n      variant: \"h6\"\n    }, t('allLots')),\n    value: 1\n  })))), __jsx(Grid, {\n    container: true,\n    className: \"cards-container\"\n  }, __jsx(Grid, {\n    item: true,\n    md: 9,\n    xs: 12\n  }, __jsx(CustomTabPanel, {\n    value: tabValue,\n    index: 0\n  }, adCardData.error ? __jsx(Typography, {\n    variant: \"subtitle1\",\n    className: \"error-text\"\n  }, adCardData.error) : __jsx(\"div\", {\n    className: \"ads-wrapper\"\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    spacing: 1\n  }, adCardData.cardData.data.map((item, index) => __jsx(Grid, {\n    key: index,\n    xs: 6,\n    sm: 4,\n    lg: 3,\n    item: true\n  }, __jsx(Link, {\n    href: `/advertisement/show/${item.id}`\n  }, __jsx(\"a\", null, __jsx(CardItem, _extends({}, item, {\n    isFetch: adCardData.isFetch,\n    cardType: t('ad'),\n    className: \"card-item\"\n  }))))))))), __jsx(CustomTabPanel, {\n    value: tabValue,\n    index: 1\n  }, lotCardData.error ? __jsx(Typography, {\n    variant: \"subtitle1\",\n    className: \"error-text\"\n  }, lotCardData.error) : __jsx(\"div\", {\n    className: \"lots-wrapper\"\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    spacing: 2\n  }, lotCardData.cardData.data.map((item, index) => __jsx(Grid, {\n    key: index,\n    xs: 6,\n    sm: 4,\n    lg: 3,\n    item: true\n  }, __jsx(Link, {\n    href: `/advertisement/show/${item.id}`\n  }, __jsx(\"a\", null, __jsx(CardItem, _extends({}, item, {\n    isFetch: lotCardData.isFetch,\n    cardType: t('lot'),\n    className: \"card-item\"\n  }))))))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    justify: \"center\"\n  }, lotCardData.error || adCardData.error ? null : __jsx(CustomPagination, {\n    count: props.pageCount,\n    currentPage: props.currentPage,\n    handlePaginationPage: props.handlePaginationPage\n  }))), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    md: 3,\n    direction: \"column\",\n    className: classes.adBanner\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Banner, {\n    height: \"300px\"\n  }))))));\n};","map":null,"metadata":{},"sourceType":"module"}