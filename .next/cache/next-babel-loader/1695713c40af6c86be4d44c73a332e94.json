{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userAPI } from \"@src/api/api\";\nvar initialState = {\n  isFetch: false,\n  error: null,\n  data: []\n};\nexport var fetchLocations = createAsyncThunk('locations/fetchLocations', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n    var lang, rejectWithValue;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            lang = _ref.lang;\n            rejectWithValue = _ref2.rejectWithValue;\n            _context.prev = 2;\n            _context.next = 5;\n            return userAPI.getLocations(lang);\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", rejectWithValue(_context.t0.message));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 8]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nvar locationsSlice = createSlice({\n  name: 'locations',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchLocations.pending, function (state) {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchLocations.fulfilled, function (state, action) {\n      state.isFetch = false;\n      state.error = null;\n      state.data = action.payload;\n    });\n    builder.addCase(fetchLocations.rejected, function (state, action) {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport var locationsReducer = locationsSlice.reducer;","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/slices/locationsSlice.ts"],"names":["createAsyncThunk","createSlice","userAPI","initialState","isFetch","error","data","fetchLocations","lang","rejectWithValue","getLocations","message","locationsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","locationsReducer","reducer"],"mappings":";;AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,SAAQC,OAAR,QAAsB,cAAtB;AAIA,IAAMC,YAAuB,GAAG;AAC5BC,EAAAA,OAAO,EAAE,KADmB;AAE5BC,EAAAA,KAAK,EAAE,IAFqB;AAG5BC,EAAAA,IAAI,EAAE;AAHsB,CAAhC;AAMA,OAAO,IAAMC,cAAc,GAAGP,gBAAgB,CAC1C,0BAD0C;AAAA,uEAE1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQQ,YAAAA,IAAR,QAAQA,IAAR;AAAgBC,YAAAA,eAAhB,SAAgBA,eAAhB;AAAA;AAAA;AAAA,mBAEqBP,OAAO,CAACQ,YAAR,CAAqBF,IAArB,CAFrB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAIeC,eAAe,CAAC,YAAEE,OAAH,CAJ9B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAF0C;;AAAA;AAAA;AAAA;AAAA,IAAvC;AAWP,IAAMC,cAAc,GAAGX,WAAW,CAAC;AAC/BY,EAAAA,IAAI,EAAE,WADyB;AAE/BV,EAAAA,YAAY,EAAZA,YAF+B;AAG/BW,EAAAA,QAAQ,EAAE,EAHqB;AAI/BC,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBV,cAAc,CAACW,OAA/B,EAAwC,UAACC,KAAD,EAAW;AAC/CA,MAAAA,KAAK,CAACf,OAAN,GAAgB,IAAhB;AACAe,MAAAA,KAAK,CAACd,KAAN,GAAc,IAAd;AACH,KAHD;AAIAW,IAAAA,OAAO,CAACC,OAAR,CAAgBV,cAAc,CAACa,SAA/B,EAA0C,UAACD,KAAD,EAAQE,MAAR,EAAmB;AACzDF,MAAAA,KAAK,CAACf,OAAN,GAAgB,KAAhB;AACAe,MAAAA,KAAK,CAACd,KAAN,GAAc,IAAd;AACAc,MAAAA,KAAK,CAACb,IAAN,GAAae,MAAM,CAACC,OAApB;AACH,KAJD;AAKAN,IAAAA,OAAO,CAACC,OAAR,CAAgBV,cAAc,CAACgB,QAA/B,EAAyC,UAACJ,KAAD,EAAQE,MAAR,EAAmB;AACxDF,MAAAA,KAAK,CAACf,OAAN,GAAgB,KAAhB;AACAe,MAAAA,KAAK,CAACd,KAAN,GAAcgB,MAAM,CAACC,OAArB;AACH,KAHD;AAIH;AAlB8B,CAAD,CAAlC;AAqBA,OAAO,IAAME,gBAAgB,GAAGZ,cAAc,CAACa,OAAxC","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {userAPI} from \"@src/api/api\";\r\nimport {Locations} from '@root/interfaces/Locations';\r\n\r\n\r\nconst initialState: Locations = {\r\n    isFetch: false,\r\n    error: null,\r\n    data: []\r\n};\r\n\r\nexport const fetchLocations = createAsyncThunk<any, { lang: string }>(\r\n    'locations/fetchLocations',\r\n    async ({lang}, {rejectWithValue}) => {\r\n        try {\r\n            return await userAPI.getLocations(lang);\r\n        } catch (e) {\r\n            return rejectWithValue(e.message);\r\n        }\r\n    }\r\n);\r\n\r\nconst locationsSlice = createSlice({\r\n    name: 'locations',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchLocations.pending, (state) => {\r\n            state.isFetch = true;\r\n            state.error = null;\r\n        })\r\n        builder.addCase(fetchLocations.fulfilled, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = null;\r\n            state.data = action.payload;\r\n        })\r\n        builder.addCase(fetchLocations.rejected, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = action.payload;\r\n        })\r\n    }\r\n});\r\n\r\nexport const locationsReducer = locationsSlice.reducer;"]},"metadata":{},"sourceType":"module"}