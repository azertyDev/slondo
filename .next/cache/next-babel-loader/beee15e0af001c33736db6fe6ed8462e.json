{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { AncmntsTabs } from './AncmntsTabs';\nimport { ITEMS_PER_PAGE } from '@src/constants';\nimport { userAPI } from '@src/api/api';\nimport { i18n } from '@root/i18n';\nvar cardData = {\n  id: null,\n  title: '',\n  cardType: '',\n  safe_deal: null,\n  price: null,\n  currency: {\n    id: null,\n    name: ''\n  },\n  created_at: '',\n  location: '',\n  images: [{\n    url: ''\n  }]\n};\nvar initCards = [];\n\nfor (var i = 1; i <= 16; i++) {\n  initCards.push(cardData);\n}\n\nvar initialCardData = {\n  isFetch: false,\n  error: null,\n  data: {\n    cards: initCards,\n    total: null\n  }\n};\n\nvar fetchCardData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(itemsPerPage, page, type, lang) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return userAPI.getCardData(itemsPerPage, page, type, lang);\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchCardData(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var AncmntsTabsContainer = function AncmntsTabsContainer(props) {\n  _s();\n\n  var lang = i18n.language;\n\n  var _useState = useState(0),\n      tabValue = _useState[0],\n      setTabValue = _useState[1];\n\n  var _useState2 = useState(1),\n      adCurrentPage = _useState2[0],\n      setAdCurrentPage = _useState2[1];\n\n  var _useState3 = useState(1),\n      lotCurrentPage = _useState3[0],\n      setLotCurrentPage = _useState3[1];\n\n  var _useState4 = useState(initialCardData),\n      adCardData = _useState4[0],\n      setAdCardData = _useState4[1];\n\n  var _useState5 = useState(initialCardData),\n      lotCardData = _useState5[0],\n      setLotCardData = _useState5[1];\n\n  var pageCount = Math.ceil((tabValue === 0 ? adCardData.data.total : lotCardData.data.total) / ITEMS_PER_PAGE) || 1;\n  var currentPage = tabValue === 0 ? adCurrentPage : lotCurrentPage;\n\n  var setCardData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(state, setState, currentPage, type) {\n      var newData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                isFetch: true\n              }));\n              _context2.next = 4;\n              return fetchCardData(ITEMS_PER_PAGE, currentPage, type, lang);\n\n            case 4:\n              newData = _context2.sent;\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                isFetch: false,\n                data: {\n                  cards: newData.data,\n                  total: newData.total\n                }\n              }));\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                error: _context2.t0.message\n              }));\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function setCardData(_x5, _x6, _x7, _x8) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleTabChange = function handleTabChange(_, newValue) {\n    setTabValue(newValue);\n  };\n\n  var handleShowMore = function handleShowMore() {\n    if (tabValue === 0) {\n      setAdCurrentPage(adCurrentPage + 1);\n    } else {\n      setLotCurrentPage(lotCurrentPage + 1);\n    }\n  };\n\n  var handlePaginationPage = function handlePaginationPage(_, pageNumber) {\n    tabValue === 0 ? setAdCurrentPage(pageNumber) : setLotCurrentPage(pageNumber);\n  };\n\n  useEffect(function () {\n    setCardData(adCardData, setAdCardData, adCurrentPage, 'ad');\n  }, [adCurrentPage]);\n  useEffect(function () {\n    setCardData(lotCardData, setLotCardData, lotCurrentPage, 'lot');\n  }, [lotCurrentPage]);\n  return __jsx(AncmntsTabs, {\n    t: props.t,\n    tabValue: tabValue,\n    adCardData: adCardData,\n    lotCardData: lotCardData,\n    pageCount: pageCount,\n    currentPage: currentPage,\n    handlePaginationPage: handlePaginationPage,\n    handleTabChange: handleTabChange,\n    handleShowMore: handleShowMore\n  });\n};\n\n_s(AncmntsTabsContainer, \"OanQ3/aBhXLqupGmvQaNrufoPVU=\");\n\n_c = AncmntsTabsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AncmntsTabsContainer\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/mainContent/ancmnts_tabs/AncmntsTabsContainer.tsx"],"names":["React","useEffect","useState","AncmntsTabs","ITEMS_PER_PAGE","userAPI","i18n","cardData","id","title","cardType","safe_deal","price","currency","name","created_at","location","images","url","initCards","i","push","initialCardData","isFetch","error","data","cards","total","fetchCardData","itemsPerPage","page","type","lang","getCardData","AncmntsTabsContainer","props","language","tabValue","setTabValue","adCurrentPage","setAdCurrentPage","lotCurrentPage","setLotCurrentPage","adCardData","setAdCardData","lotCardData","setLotCardData","pageCount","Math","ceil","currentPage","setCardData","state","setState","newData","message","handleTabChange","_","newValue","handleShowMore","handlePaginationPage","pageNumber","t"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {WithT} from 'i18next';\r\nimport {AncmntsTabs} from './AncmntsTabs';\r\nimport {ITEMS_PER_PAGE} from '@src/constants';\r\nimport {userAPI} from '@src/api/api';\r\nimport {i18n} from '@root/i18n';\r\nimport {CardData} from '@root/interfaces/CardData';\r\n\r\n\r\nconst cardData = {\r\n    id: null,\r\n    title: '',\r\n    cardType: '',\r\n    safe_deal: null,\r\n    price: null,\r\n    currency: {\r\n        id: null,\r\n        name: '',\r\n    },\r\n    created_at: '',\r\n    location: '',\r\n    images: [{\r\n        url: ''\r\n    }]\r\n};\r\n\r\nconst initCards = [];\r\n\r\nfor (let i = 1; i <= 16; i++) {\r\n    initCards.push(cardData);\r\n}\r\n\r\nconst initialCardData: CardData = {\r\n    isFetch: false,\r\n    error: null,\r\n    data: {\r\n        cards: initCards,\r\n        total: null,\r\n    },\r\n};\r\n\r\nconst fetchCardData = async (itemsPerPage, page, type, lang) => {\r\n    return await userAPI.getCardData(itemsPerPage, page, type, lang);\r\n};\r\n\r\nexport const AncmntsTabsContainer: FC<WithT> = (props) => {\r\n    const lang = i18n.language;\r\n\r\n    const [tabValue, setTabValue] = useState(0);\r\n    const [adCurrentPage, setAdCurrentPage] = useState(1);\r\n    const [lotCurrentPage, setLotCurrentPage] = useState(1);\r\n    const [adCardData, setAdCardData] = useState(initialCardData);\r\n    const [lotCardData, setLotCardData] = useState(initialCardData);\r\n    const pageCount = Math.ceil(\r\n        (tabValue === 0 ? adCardData.data.total : lotCardData.data.total) /\r\n        ITEMS_PER_PAGE,\r\n    ) || 1;\r\n\r\n    const currentPage = tabValue === 0 ? adCurrentPage : lotCurrentPage;\r\n\r\n    const setCardData = async (state, setState, currentPage, type) => {\r\n        try {\r\n            setState({\r\n                ...state,\r\n                isFetch: true,\r\n            });\r\n\r\n            const newData = await fetchCardData(\r\n                ITEMS_PER_PAGE,\r\n                currentPage,\r\n                type,\r\n                lang,\r\n            );\r\n\r\n            setState({\r\n                ...state,\r\n                isFetch: false,\r\n                data: {\r\n                    cards: newData.data,\r\n                    total: newData.total,\r\n                },\r\n            });\r\n        } catch (e) {\r\n            setState({\r\n                ...state,\r\n                error: e.message,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (_, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n        if (tabValue === 0) {\r\n            setAdCurrentPage(adCurrentPage + 1)\r\n        } else {\r\n            setLotCurrentPage(lotCurrentPage + 1)\r\n        }\r\n    };\r\n\r\n    const handlePaginationPage = (_, pageNumber) => {\r\n        tabValue === 0\r\n            ? setAdCurrentPage(pageNumber)\r\n            : setLotCurrentPage(pageNumber);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCardData(adCardData, setAdCardData, adCurrentPage, 'ad');\r\n    }, [adCurrentPage]);\r\n\r\n    useEffect(() => {\r\n        setCardData(lotCardData, setLotCardData, lotCurrentPage, 'lot');\r\n    }, [lotCurrentPage]);\r\n\r\n    return (\r\n        <AncmntsTabs\r\n            t={props.t}\r\n            tabValue={tabValue}\r\n            adCardData={adCardData}\r\n            lotCardData={lotCardData}\r\n            pageCount={pageCount}\r\n            currentPage={currentPage}\r\n            handlePaginationPage={handlePaginationPage}\r\n            handleTabChange={handleTabChange}\r\n            handleShowMore={handleShowMore}\r\n        />\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}