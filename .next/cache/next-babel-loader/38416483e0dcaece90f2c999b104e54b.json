{"ast":null,"code":"import { userApi } from '../../api/api';\nimport { call, put, all, takeLatest } from \"redux-saga/effects\";\nimport { FETCH_SELF_DATA, selfDataActions } from \"../actions/selfDataActions\"; // Self data saga\n\nconst {\n  fetchSelfDataBegin,\n  fetchSelfDataSuccess,\n  fetchSelfDataFailure\n} = selfDataActions;\n\nfunction* workerFetchSelfData(actions) {\n  const {\n    payload\n  } = actions;\n\n  try {\n    yield put(fetchSelfDataBegin());\n    const {\n      user_info\n    } = yield call(userApi.login, payload.phone, payload.password);\n    yield put(fetchSelfDataSuccess({\n      data: user_info\n    }));\n  } catch (e) {\n    yield put(fetchSelfDataFailure(e.message));\n  }\n}\n\nfunction* watchFetchSelfData() {\n  yield takeLatest(FETCH_SELF_DATA, workerFetchSelfData);\n} // Root saga export\n\n\nexport default function* rootSaga() {\n  yield all([watchFetchSelfData()]);\n}","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/sagas/sagas.ts"],"names":["userApi","call","put","all","takeLatest","FETCH_SELF_DATA","selfDataActions","fetchSelfDataBegin","fetchSelfDataSuccess","fetchSelfDataFailure","workerFetchSelfData","actions","payload","user_info","login","phone","password","data","e","message","watchFetchSelfData","rootSaga"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,UAAxB,QAAyC,oBAAzC;AACA,SAAQC,eAAR,EAAyBC,eAAzB,QAA+C,4BAA/C,C,CAGA;;AACA,MAAM;AAACC,EAAAA,kBAAD;AAAqBC,EAAAA,oBAArB;AAA2CC,EAAAA;AAA3C,IAAmEH,eAAzE;;AAEA,UAAUI,mBAAV,CAA8BC,OAA9B,EAAuC;AACnC,QAAM;AAACC,IAAAA;AAAD,MAAYD,OAAlB;;AACA,MAAI;AACA,UAAMT,GAAG,CAACK,kBAAkB,EAAnB,CAAT;AACA,UAAM;AAACM,MAAAA;AAAD,QAAc,MAAMZ,IAAI,CAACD,OAAO,CAACc,KAAT,EAAgBF,OAAO,CAACG,KAAxB,EAA+BH,OAAO,CAACI,QAAvC,CAA9B;AACA,UAAMd,GAAG,CAACM,oBAAoB,CAAC;AAACS,MAAAA,IAAI,EAAEJ;AAAP,KAAD,CAArB,CAAT;AACH,GAJD,CAIE,OAAOK,CAAP,EAAU;AACR,UAAMhB,GAAG,CAACO,oBAAoB,CAACS,CAAC,CAACC,OAAH,CAArB,CAAT;AACH;AACJ;;AAED,UAAUC,kBAAV,GAA+B;AAC3B,QAAMhB,UAAU,CAACC,eAAD,EAAkBK,mBAAlB,CAAhB;AACH,C,CAGD;;;AACA,eAAe,UAAUW,QAAV,GAAqB;AAChC,QAAMlB,GAAG,CAAC,CACNiB,kBAAkB,EADZ,CAAD,CAAT;AAGH","sourcesContent":["import {userApi} from '../../api/api'\r\nimport {call, put, all, takeLatest} from \"redux-saga/effects\"\r\nimport {FETCH_SELF_DATA, selfDataActions} from \"../actions/selfDataActions\"\r\n\r\n\r\n// Self data saga\r\nconst {fetchSelfDataBegin, fetchSelfDataSuccess, fetchSelfDataFailure} = selfDataActions;\r\n\r\nfunction* workerFetchSelfData(actions) {\r\n    const {payload} = actions;\r\n    try {\r\n        yield put(fetchSelfDataBegin());\r\n        const {user_info} = yield call(userApi.login, payload.phone, payload.password);\r\n        yield put(fetchSelfDataSuccess({data: user_info}));\r\n    } catch (e) {\r\n        yield put(fetchSelfDataFailure(e.message));\r\n    }\r\n}\r\n\r\nfunction* watchFetchSelfData() {\r\n    yield takeLatest(FETCH_SELF_DATA, workerFetchSelfData);\r\n}\r\n\r\n\r\n// Root saga export\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchFetchSelfData()\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}