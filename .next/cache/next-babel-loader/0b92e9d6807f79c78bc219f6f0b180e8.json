{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Field } from \"formik\";\nexport var CustomField = function CustomField(_ref) {\n  var setFieldValue = _ref.setFieldValue,\n      validate = _ref.validate,\n      props = _objectWithoutProperties(_ref, [\"setFieldValue\", \"validate\"]);\n\n  var handler = function handler(_ref2) {\n    var target = _ref2.target;\n    var value = target.value;\n    console.log(value);\n\n    if (value.length < 3) {\n      value = \"+998\".concat(value);\n    }\n\n    setFieldValue(props.name, value);\n  };\n\n  return __jsx(Field, {\n    validate: validate,\n    name: props.name\n  }, function (_ref3) {\n    var field = _ref3.field;\n    console.log(field);\n    return __jsx(TextField, _extends({\n      fullWidth: true,\n      focused: false,\n      variant: \"outlined\",\n      onChange: handler\n    }, props, {\n      value: field.value\n    }));\n  });\n};\n_c = CustomField;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomField\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/custom_field/CustomField.tsx"],"names":["React","TextField","Field","CustomField","setFieldValue","validate","props","handler","target","value","console","log","length","name","field"],"mappings":";;;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,KAAR,QAAoC,QAApC;AAWA,OAAO,IAAMC,WAAsB,GAAG,SAAzBA,WAAyB,OAAyC;AAAA,MAAvCC,aAAuC,QAAvCA,aAAuC;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAXC,KAAW;;AAE3E,MAAMC,OAAO,GAAG,SAAVA,OAAU,QAAc;AAAA,QAAZC,MAAY,SAAZA,MAAY;AAAA,QACrBC,KADqB,GACZD,MADY,CACrBC,KADqB;AAE1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,QAAIA,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AAClBH,MAAAA,KAAK,iBAAUA,KAAV,CAAL;AACH;;AACDL,IAAAA,aAAa,CAACE,KAAK,CAACO,IAAP,EAAaJ,KAAb,CAAb;AACH,GAPD;;AASA,SACI,MAAC,KAAD;AAAO,IAAA,QAAQ,EAAEJ,QAAjB;AAA2B,IAAA,IAAI,EAAEC,KAAK,CAACO;AAAvC,KACK,iBAAa;AAAA,QAAXC,KAAW,SAAXA,KAAW;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,WACI,MAAC,SAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,OAAO,EAAE,KAFb;AAGI,MAAA,OAAO,EAAC,UAHZ;AAII,MAAA,QAAQ,EAAEP;AAJd,OAKQD,KALR;AAMI,MAAA,KAAK,EAAEQ,KAAK,CAACL;AANjB,OADJ;AAUH,GAbL,CADJ;AAiBH,CA5BM;KAAMN,W","sourcesContent":["import React, {FC} from \"react\"\r\nimport {TextField} from \"@material-ui/core\"\r\nimport {Field, FieldValidator} from \"formik\"\r\n\r\ninterface Props {\r\n    name: string,\r\n    type: string,\r\n    placeholder: string,\r\n    className: string\r\n    setFieldValue: (field: string, value: any, shouldValidate?: boolean) => void,\r\n    validate: FieldValidator,\r\n}\r\n\r\nexport const CustomField: FC<Props> = ({setFieldValue, validate, ...props}) => {\r\n\r\n    const handler = ({target}) => {\r\n        let {value} = target;\r\n        console.log(value)\r\n        if (value.length < 3) {\r\n            value = `+998${value}`\r\n        }\r\n        setFieldValue(props.name, value);\r\n    };\r\n\r\n    return (\r\n        <Field validate={validate} name={props.name}>\r\n            {({field}) => {\r\n                console.log(field)\r\n                return (\r\n                    <TextField\r\n                        fullWidth\r\n                        focused={false}\r\n                        variant='outlined'\r\n                        onChange={handler}\r\n                        {...props}\r\n                        value={field.value}\r\n                    />\r\n                )\r\n            }}\r\n        </Field>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}