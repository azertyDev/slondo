{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createWrapper } from 'next-redux-wrapper';\nimport reducers from \"./reducers\";\nimport saga from './sagas/saga';\nvar sagaMiddleware = createSagaMiddleware();\nvar enhancer = composeWithDevTools(applyMiddleware(sagaMiddleware)); // create a makeStore function\n\nvar makeStore = function makeStore() {\n  return createStore(reducers, enhancer);\n};\n\nsagaMiddleware.run(saga);\n// export an assembled wrapper\nexport var wrapper = createWrapper(makeStore);","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/store.ts"],"names":["createStore","applyMiddleware","createSagaMiddleware","composeWithDevTools","createWrapper","reducers","saga","sagaMiddleware","enhancer","makeStore","run","wrapper"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAmBC,aAAnB,QAAuC,oBAAvC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,IAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,IAAMM,QAAQ,GAAGL,mBAAmB,CAChCF,eAAe,CAACM,cAAD,CADiB,CAApC,C,CAIA;;AACA,IAAME,SAAoB,GAAG,SAAvBA,SAAuB;AAAA,SAAMT,WAAW,CAACK,QAAD,EAAWG,QAAX,CAAjB;AAAA,CAA7B;;AAEAD,cAAc,CAACG,GAAf,CAAmBJ,IAAnB;AAIA;AACA,OAAO,IAAMK,OAAO,GAAGP,aAAa,CAAWK,SAAX,CAA7B","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {MakeStore, createWrapper} from 'next-redux-wrapper'\r\nimport reducers from \"./reducers\"\r\nimport saga from './sagas/saga'\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst enhancer = composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware),\r\n);\r\n\r\n// create a makeStore function\r\nconst makeStore: MakeStore = () => createStore(reducers, enhancer);\r\n\r\nsagaMiddleware.run(saga);\r\n\r\nexport type AppState = ReturnType<typeof reducers>;\r\n\r\n// export an assembled wrapper\r\nexport const wrapper = createWrapper<AppState>(makeStore);"]},"metadata":{},"sourceType":"module"}