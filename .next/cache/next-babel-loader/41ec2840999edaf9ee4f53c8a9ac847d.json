{"ast":null,"code":"import * as yup from \"yup\";\nconst requiredList = {\n  drive: true,\n  seats: true\n};\n\nconst lazyFunc = value => {\n  const valueKeys = Object.keys(value);\n  const requiredFields = yup.object({});\n  valueKeys.forEach(key => {\n    if (requiredList[key]) {\n      requiredFields.shape({\n        [key]: yup.object({\n          id: yup.number().required('Обязательный параметр!')\n        })\n      });\n    }\n  });\n\n  if (valueKeys.some(key => requiredList[key])) {\n    return requiredFields;\n  }\n\n  return yup.mixed().notRequired();\n};\n\nexport const createAdvrtSchema = yup.object({\n  // title: yup.string().required('Обязательное поле!'),\n  // location: yup.string().required('Обязательное поле!'),\n  // files: yup.array().required('Загрузите фотографии!'),\n  // description: yup.string().required('Обязательное поле!'),\n  // phone: yup.string().required('Обязательное поле!'),\n  adsParams: yup.lazy(lazyFunc)\n});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/validation_schemas/createAdvrtSchema.ts"],"names":["yup","requiredList","drive","seats","lazyFunc","value","valueKeys","Object","keys","requiredFields","object","forEach","key","shape","id","number","required","some","mixed","notRequired","createAdvrtSchema","adsParams","lazy"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;;AAKA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAAlB;AACA,QAAMI,cAAc,GAAGT,GAAG,CAACU,MAAJ,CAAW,EAAX,CAAvB;AAEAJ,EAAAA,SAAS,CAACK,OAAV,CAAkBC,GAAG,IAAI;AACrB,QAAIX,YAAY,CAACW,GAAD,CAAhB,EAAuB;AACnBH,MAAAA,cAAc,CAACI,KAAf,CAAqB;AACjB,SAACD,GAAD,GAAOZ,GAAG,CAACU,MAAJ,CAAW;AACdI,UAAAA,EAAE,EAAEd,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB;AADU,SAAX;AADU,OAArB;AAKH;AACJ,GARD;;AAUA,MAAIV,SAAS,CAACW,IAAV,CAAeL,GAAG,IAAIX,YAAY,CAACW,GAAD,CAAlC,CAAJ,EAA8C;AAC1C,WAAOH,cAAP;AACH;;AAED,SAAOT,GAAG,CAACkB,KAAJ,GAAYC,WAAZ,EAAP;AACH,CAnBD;;AAqBA,OAAO,MAAMC,iBAAiB,GAAGpB,GAAG,CAACU,MAAJ,CAAW;AACxC;AACA;AACA;AACA;AACA;AACAW,EAAAA,SAAS,EAAErB,GAAG,CAACsB,IAAJ,CAASlB,QAAT;AAN6B,CAAX,CAA1B","sourcesContent":["import * as yup from \"yup\";\r\n\r\n\r\nconst requiredList = {\r\n    drive: true,\r\n    seats: true\r\n};\r\n\r\nconst lazyFunc = (value) => {\r\n    const valueKeys = Object.keys(value);\r\n    const requiredFields = yup.object({});\r\n\r\n    valueKeys.forEach(key => {\r\n        if (requiredList[key]) {\r\n            requiredFields.shape({\r\n                [key]: yup.object({\r\n                    id: yup.number().required('Обязательный параметр!')\r\n                })\r\n            });\r\n        }\r\n    });\r\n\r\n    if (valueKeys.some(key => requiredList[key])) {\r\n        return requiredFields;\r\n    }\r\n\r\n    return yup.mixed().notRequired();\r\n};\r\n\r\nexport const createAdvrtSchema = yup.object({\r\n    // title: yup.string().required('Обязательное поле!'),\r\n    // location: yup.string().required('Обязательное поле!'),\r\n    // files: yup.array().required('Загрузите фотографии!'),\r\n    // description: yup.string().required('Обязательное поле!'),\r\n    // phone: yup.string().required('Обязательное поле!'),\r\n    adsParams: yup.lazy(lazyFunc)\r\n});"]},"metadata":{},"sourceType":"module"}