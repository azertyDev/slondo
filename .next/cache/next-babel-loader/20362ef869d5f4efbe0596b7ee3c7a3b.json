{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userAPI } from \"@src/api/api\";\nconst initialState = {\n  isFetch: false,\n  error: null,\n  list: [{\n    id: null,\n    name: '',\n    images: {\n      id: null,\n      url: {\n        extra: ''\n      }\n    },\n    icons: {\n      id: null,\n      url: {\n        extra: ''\n      }\n    },\n    childs: [],\n    has_auction: null\n  }]\n}; // Async thunk\n\nexport const fetchCategories = createAsyncThunk('categories/fetchCategories', async (lang, {\n  rejectWithValue\n}) => {\n  try {\n    return await userAPI.getCategories(lang);\n  } catch (e) {\n    return rejectWithValue(e.message);\n  }\n});\nconst advertisementSlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchCategories.fulfilled, (state, action) => {\n      state.isFetch = false;\n      state.error = null;\n      state.list = action.payload;\n    });\n    builder.addCase(fetchCategories.rejected, (state, action) => {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const categoriesReducer = advertisementSlice.reducer;","map":null,"metadata":{},"sourceType":"module"}