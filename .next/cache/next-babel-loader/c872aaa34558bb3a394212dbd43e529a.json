{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from 'react-beautiful-dnd';\nimport { useStyles } from './useStyles';\nexport var PreviewPhotos = function PreviewPhotos(props) {\n  _s();\n\n  var images = props.images,\n      setImages = props.setImages;\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    var items = Array.from(images);\n\n    var _items$splice = items.splice(result.source.index, 1),\n        _items$splice2 = _slicedToArray(_items$splice, 1),\n        reorderedItem = _items$splice2[0];\n\n    items.splice(result.destination.index, 0, reorderedItem);\n    setImages(items);\n  }\n\n  var handleUploadFile = function handleUploadFile(e) {\n    setImages([{\n      file: e.target.files[0]\n    }].concat(_toConsumableArray(images)));\n  };\n\n  resetServerContext();\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: handleUploadFile\n  }), __jsx(DragDropContext, {\n    onDragEnd: handleOnDragEnd\n  }, __jsx(Droppable, {\n    droppableId: \"images\",\n    direction: \"horizontal\"\n  }, function (provided) {\n    return __jsx(\"div\", _extends({\n      className: \"images-wrapper\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef\n    }), images.map(function (_ref, index) {\n      var file = _ref.file;\n      return __jsx(Draggable, {\n        key: file.name,\n        draggableId: file.name,\n        index: index\n      }, function (provided) {\n        return __jsx(\"div\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps), __jsx(Typography, null, file.name));\n      });\n    }), provided.placeholder);\n  })));\n};\n\n_s(PreviewPhotos, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PreviewPhotos;\n\nfunction getBase64(file) {\n  var document = \"\";\n  var reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = function () {\n    document = reader.result;\n  };\n\n  reader.onerror = function (error) {\n    console.log('Error: ', error);\n  };\n\n  return document;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PreviewPhotos\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/preview_photos/PreviewPhotos.tsx"],"names":["Typography","React","DragDropContext","Droppable","Draggable","resetServerContext","useStyles","PreviewPhotos","props","images","setImages","handleOnDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","handleUploadFile","e","file","target","files","classes","root","provided","droppableProps","innerRef","map","name","draggableProps","dragHandleProps","placeholder","getBase64","document","reader","FileReader","readAsDataURL","onload","onerror","error","console","log"],"mappings":"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","sourcesContent":["import {Typography} from '@material-ui/core';\r\nimport React, {Dispatch, FC} from 'react';\r\nimport {DragDropContext, Droppable, Draggable, resetServerContext} from 'react-beautiful-dnd';\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const PreviewPhotos: FC<{ images: [], setImages: Dispatch<any> }> = (props) => {\r\n    const {images, setImages} = props;\r\n\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n\r\n        const items = Array.from(images);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        setImages(items);\r\n    }\r\n\r\n    const handleUploadFile = (e) => {\r\n        setImages([{\r\n            file: e.target.files[0]\r\n        },\r\n            ...images\r\n        ]);\r\n    };\r\n\r\n    resetServerContext();\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <input type='file' onChange={handleUploadFile}/>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId=\"images\" direction=\"horizontal\">\r\n                    {(provided) => (\r\n                        <div className=\"images-wrapper\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {images.map(({file}, index) => {\r\n                                return (\r\n                                    <Draggable key={file.name} draggableId={file.name} index={index}>\r\n                                        {(provided) => (\r\n                                            <div\r\n                                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                                {/*<img src={url} alt={`${name} Thumb`}/>*/}\r\n                                                <Typography>{file.name}</Typography>\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                );\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction getBase64(file) {\r\n    let document: string | ArrayBuffer = \"\";\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function () {\r\n        document = reader.result;\r\n    };\r\n    reader.onerror = function (error) {\r\n        console.log('Error: ', error);\r\n    };\r\n\r\n    return document;\r\n}"]},"metadata":{},"sourceType":"module"}