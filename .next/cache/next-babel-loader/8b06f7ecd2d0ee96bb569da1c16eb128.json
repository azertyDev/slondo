{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as yup from \"yup\";\nexport var requiredFields = {\n  mileage: true,\n  body: true,\n  year: true,\n  car_engine_type: true\n};\nvar requiredMsg = 'Обязательное поле!';\n\nvar lazyFunc = function lazyFunc(value) {\n  var keys = Object.keys(requiredFields);\n  var fields = {};\n  keys.forEach(function (k) {\n    if (value[k]) {\n      fields[k] = yup.object(_defineProperty({}, k, yup.object({\n        id: yup.number().nullable().required(requiredMsg)\n      })));\n    }\n  });\n  console.log(fields);\n  return yup.mixed().notRequired();\n};\n\nexport var createAdvrtSchema = yup.object({\n  // adType: yup.object({\n  //     id: yup.number().nullable().required(requiredMsg)\n  // }),\n  // category: yup.object({\n  //     id: yup.number().nullable().required(requiredMsg)\n  // }),\n  // title: yup.string().required(requiredMsg),\n  // location: yup.object({\n  //     city_id: yup.number().required(requiredMsg),\n  // }).nullable().required(requiredMsg),\n  // files: yup.array().required(requiredMsg),\n  // description: yup.string().required(requiredMsg),\n  // phone: yup.string().required(requiredMsg),\n  adParams: yup.lazy(lazyFunc)\n});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/validation_schemas/createAdvrtSchema.ts"],"names":["yup","requiredFields","mileage","body","year","car_engine_type","requiredMsg","lazyFunc","value","keys","Object","fields","forEach","k","object","id","number","nullable","required","console","log","mixed","notRequired","createAdvrtSchema","adParams","lazy"],"mappings":";AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGA,OAAO,IAAMC,cAAc,GAAG;AAC1BC,EAAAA,OAAO,EAAE,IADiB;AAE1BC,EAAAA,IAAI,EAAE,IAFoB;AAG1BC,EAAAA,IAAI,EAAE,IAHoB;AAI1BC,EAAAA,eAAe,EAAE;AAJS,CAAvB;AAOP,IAAMC,WAAW,GAAG,oBAApB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmB;AAChC,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYR,cAAZ,CAAb;AACA,MAAMU,MAAM,GAAG,EAAf;AAEAF,EAAAA,IAAI,CAACG,OAAL,CAAa,UAAAC,CAAC,EAAI;AACd,QAAIL,KAAK,CAACK,CAAD,CAAT,EAAc;AACVF,MAAAA,MAAM,CAACE,CAAD,CAAN,GAAYb,GAAG,CAACc,MAAJ,qBAEHD,CAFG,EAECb,GAAG,CAACc,MAAJ,CAAW;AACZC,QAAAA,EAAE,EAAEf,GAAG,CAACgB,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiCZ,WAAjC;AADQ,OAAX,CAFD,EAAZ;AAOH;AACJ,GAVD;AAWAa,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AAEA,SAAOX,GAAG,CAACqB,KAAJ,GAAYC,WAAZ,EAAP;AACH,CAlBD;;AAoBA,OAAO,IAAMC,iBAAiB,GAAGvB,GAAG,CAACc,MAAJ,CAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAU,EAAAA,QAAQ,EAAExB,GAAG,CAACyB,IAAJ,CAASlB,QAAT;AAd8B,CAAX,CAA1B","sourcesContent":["import * as yup from \"yup\";\r\n\r\n\r\nexport const requiredFields = {\r\n    mileage: true,\r\n    body: true,\r\n    year: true,\r\n    car_engine_type: true,\r\n}\r\n\r\nconst requiredMsg = 'Обязательное поле!';\r\n\r\nconst lazyFunc = (value: string) => {\r\n    const keys = Object.keys(requiredFields);\r\n    const fields = {};\r\n\r\n    keys.forEach(k => {\r\n        if (value[k]) {\r\n            fields[k] = yup.object(\r\n                {\r\n                    [k]: yup.object({\r\n                        id: yup.number().nullable().required(requiredMsg)\r\n                    })\r\n                }\r\n            )\r\n        }\r\n    })\r\n    console.log(fields)\r\n\r\n    return yup.mixed().notRequired();\r\n};\r\n\r\nexport const createAdvrtSchema = yup.object({\r\n    // adType: yup.object({\r\n    //     id: yup.number().nullable().required(requiredMsg)\r\n    // }),\r\n    // category: yup.object({\r\n    //     id: yup.number().nullable().required(requiredMsg)\r\n    // }),\r\n    // title: yup.string().required(requiredMsg),\r\n    // location: yup.object({\r\n    //     city_id: yup.number().required(requiredMsg),\r\n    // }).nullable().required(requiredMsg),\r\n    // files: yup.array().required(requiredMsg),\r\n    // description: yup.string().required(requiredMsg),\r\n    // phone: yup.string().required(requiredMsg),\r\n    adParams: yup.lazy(lazyFunc)\r\n});"]},"metadata":{},"sourceType":"module"}