{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { i18n } from \"@root/i18n\";\nimport { userAPI } from '@src/api/api';\nimport { CreateAncmnt } from \"./CreateAncmnt\";\nimport { MainLayout } from \"@src/components/MainLayout\";\nimport { AncmntFormContainer } from \"./ancmnt_form/AncmntFormContainer\";\nimport { setErrorMsgAction } from '@root/src/redux/slices/errorSlice';\nimport { AncmntTypesPage } from \"@src/components/announcement/ancmnt_types_page/AncmntTypesPage\";\nimport { categoryDataNormalization, categorySearchHelper } from \"@src/helpers\";\nimport { AncmntHeader } from './ancmnt_header/AncmntHeader';\nimport { SuccessAncmnt } from \"@src/components/announcement/create_ancmnt/ancmnt_form/success_ancmnt/SuccessAncmnt\";\nconst steps = ['Тип объявления', 'Категория', 'Заполнение', 'Проверка'];\nconst initAncmntTypeStates = {\n  isFetch: false,\n  types: [{\n    id: 1,\n    name: \"Обычный\",\n    currency: [{\n      id: 1,\n      name: \"уе\"\n    }, {\n      id: 2,\n      name: \"sum\"\n    }],\n    expired: [{\n      id: 3,\n      expiration_at: 720\n    }],\n    image: {\n      url: '/img/adv-background.png'\n    }\n  }, {\n    id: 2,\n    name: \"Аукцион\",\n    currency: [{\n      id: 3,\n      name: \"sum\"\n    }],\n    expired: [{\n      id: 1,\n      expiration_at: 2\n    }, {\n      id: 2,\n      expiration_at: 720\n    }],\n    image: {\n      url: '/img/lot-background.png'\n    }\n  }, {\n    id: 3,\n    name: \"Продвинутый аукцион\",\n    currency: [{\n      id: 4,\n      name: \"sum\"\n    }],\n    expired: [{\n      id: 4,\n      expiration_at: 2\n    }, {\n      id: 5,\n      expiration_at: 720\n    }],\n    image: {\n      url: '/img/advanced-lot-background.png'\n    }\n  }]\n};\nexport const CreateAncmntContainer = ({\n  t\n}) => {\n  const lang = i18n.language;\n  const initAncmntTypeState = {\n    id: null,\n    name: '',\n    currency: [{\n      id: null,\n      name: ''\n    }],\n    expired: [{\n      id: null,\n      expiration_at: null\n    }],\n    image: {\n      url: ''\n    }\n  };\n  const initCreateAncmntState = {\n    isFetch: false,\n    error: null,\n    category: {\n      id: null,\n      name: '',\n      image: {\n        url: {\n          default: ''\n        }\n      },\n      icon: {\n        id: null,\n        url: ''\n      },\n      parents: [],\n      model: [],\n      has_auction: null\n    }\n  };\n  const initSubLvlCtgrsState = [{\n    id: null,\n    name: '',\n    parents: [{\n      id: null,\n      name: ''\n    }]\n  }];\n  const categoriesList = useSelector(({\n    categories\n  }) => {\n    return categoryDataNormalization(categories.list); // return categories.list;\n  });\n  console.log(categoriesList);\n  const dispatch = useDispatch();\n  const {\n    0: ancmntType,\n    1: setAncmntType\n  } = useState(initAncmntTypeState);\n  const {\n    0: ancmntTypes,\n    1: setAncmntTypes\n  } = useState(initAncmntTypeStates);\n  const {\n    0: createAncmnt,\n    1: setCreateAncmnt\n  } = useState(initCreateAncmntState);\n  const {\n    0: subLvlCtgrs,\n    1: setSubLvlCtgrs\n  } = useState(initSubLvlCtgrsState);\n  const {\n    0: activeStep,\n    1: setActiveStep\n  } = useState(0);\n  const {\n    0: searchTxt,\n    1: setSearchTxt\n  } = useState('');\n\n  const handleNextStep = () => {\n    setActiveStep(prevStep => prevStep + 1);\n  };\n\n  const handlePrevStep = () => {\n    setActiveStep(prevStep => prevStep - 1);\n  };\n\n  const handleResetSteps = () => {\n    setActiveStep(0);\n  }; // const setAncmntsTypes = async () => {\n  //     try {\n  //         const types = userAPI.getAncmntsTypes(lang);\n  //         await setFetchedData(\n  //             ancmntTypes,\n  //             setAncmntTypes,\n  //             {types},\n  //         );\n  //     } catch (e) {\n  //         dispatch(setErrorMsgAction(e.message));\n  //         setAncmntTypes({...ancmntTypes, isFetch: false});\n  //     }\n  // };\n\n\n  const handleAncmntType = selectedAncmntType => () => {\n    handleNextStep();\n    setAncmntType(selectedAncmntType);\n  };\n\n  const handleSearch = ({\n    target\n  }) => {\n    setSearchTxt(target.value);\n  };\n\n  const setFoundCategoriesChilds = () => {\n    const model = !!searchTxt ? categorySearchHelper(searchTxt, categoriesList) : [];\n    setCreateAncmnt(_objectSpread(_objectSpread({}, createAncmnt), {}, {\n      category: _objectSpread(_objectSpread({}, initCreateAncmntState.category), {}, {\n        model\n      })\n    }));\n  };\n\n  const handleCategory = category => async () => {\n    try {\n      setCreateAncmnt(_objectSpread(_objectSpread({}, createAncmnt), {}, {\n        subLevelCtgrsList: category\n      }));\n    } catch (e) {\n      dispatch(setErrorMsgAction(e.message));\n      setCreateAncmnt(_objectSpread(_objectSpread({}, createAncmnt), {}, {\n        isFetch: false\n      }));\n    }\n  };\n\n  const handleSubCategory = (parent, child_id, name) => async () => {\n    try {\n      setCreateAncmnt(_objectSpread(_objectSpread({}, createAncmnt), {}, {\n        isFetch: true\n      }));\n      const data = await userAPI.getDataForCreateAncmnt(parent.id, child_id, lang);\n      setCreateAncmnt(_objectSpread(_objectSpread({}, createAncmnt), {}, {\n        isFetch: false // subCategory: {\n        //     id: child_id,\n        //     name,\n        //     data,\n        //     parent\n        // }\n\n      }));\n      handleNextStep();\n    } catch (e) {\n      dispatch(setErrorMsgAction(e.message));\n      setCreateAncmnt(_objectSpread(_objectSpread({}, createAncmnt), {}, {\n        isFetch: false\n      }));\n    }\n  };\n\n  const handleResetCreateData = () => {\n    setSearchTxt('');\n    setCreateAncmnt(initCreateAncmntState);\n  };\n\n  const handleResetAncmntType = () => {\n    handleResetSteps();\n    handleResetCreateData();\n    setAncmntType(initAncmntTypeState);\n  };\n\n  const handleBackBtn = () => {\n    handlePrevStep();\n\n    switch (activeStep) {\n      case 1:\n        handleResetAncmntType();\n        break;\n\n      case 2:\n        handleResetCreateData();\n    }\n  };\n\n  const setCreateAncmntByLang = async () => {// const [ctgrByLang] = categoriesList.filter(ctgr => ctgr.id === subCategory.parent.id);\n    // ctgrByLang && setCreateAncmnt({\n    //     ...createAncmnt,\n    //     category: ctgrByLang,\n    // });\n    // if (subCategory.id !== null) {\n    //     const [subCtgrByLang] = ctgrByLang.model.filter(subCtgr => subCtgr.id === subCategory.id);\n    //\n    //     try {\n    //         setCreateAncmnt({\n    //             ...createAncmnt,\n    //             isFetch: true\n    //         });\n    //\n    //         const data = await userAPI.getAdDataForCreateAncmnt(subCategory.parent.id, subCategory.id, lang);\n    //\n    //         setCreateAncmnt({\n    //             ...createAncmnt,\n    //             isFetch: false,\n    //             subCategory: {\n    //                 ...subCtgrByLang,\n    //                 data\n    //             }\n    //         });\n    //     } catch (e) {\n    //         dispatch(setErrorMsgAction(e.message));\n    //         setCreateAncmnt({...createAncmnt, isFetch: false});\n    //     }\n    // }\n  };\n\n  const renderPageByActiveStep = () => {\n    switch (activeStep) {\n      case 0:\n        return __jsx(AncmntTypesPage, {\n          ancmntTypes: ancmntTypes,\n          handleAncmntType: handleAncmntType\n        });\n\n      case 1:\n        return __jsx(CreateAncmnt, {\n          ancmntType: ancmntType,\n          createAncmnt: createAncmnt,\n          categoriesList: categoriesList,\n          searchTxt: searchTxt,\n          handleSearch: handleSearch,\n          handleCategory: handleCategory,\n          handleSubCategory: handleSubCategory\n        });\n\n      case 4:\n        return __jsx(SuccessAncmnt, {\n          handleCreateNewAncmnt: handleResetAncmntType\n        });\n\n      default:\n        return __jsx(AncmntFormContainer, {\n          t: t,\n          activeStep: activeStep,\n          ancmntType: ancmntType,\n          createAncmnt: createAncmnt,\n          handleNextStep: handleNextStep\n        });\n    }\n  }; // useEffect(() => {\n  //    setAncmntsTypes();\n  // }, []);\n  // useEffect(() => {\n  //     setCreateAncmntByLang();\n  // }, [categoriesList[0].name]);\n  // useEffect(() => {\n  //     setFoundCategoriesChilds();\n  // }, [searchTxt]);\n  // console.log(createAncmnt)\n  // console.log(categoriesList)\n\n\n  return __jsx(MainLayout, null, activeStep !== 0 && activeStep !== 4 && __jsx(AncmntHeader, {\n    steps: steps,\n    activeStep: activeStep,\n    handleBackBtn: handleBackBtn\n  }), renderPageByActiveStep());\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/announcement/create_ancmnt/CreateAncmntContainer.tsx"],"names":["React","useState","useSelector","useDispatch","i18n","userAPI","CreateAncmnt","MainLayout","AncmntFormContainer","setErrorMsgAction","AncmntTypesPage","categoryDataNormalization","categorySearchHelper","AncmntHeader","SuccessAncmnt","steps","initAncmntTypeStates","isFetch","types","id","name","currency","expired","expiration_at","image","url","CreateAncmntContainer","t","lang","language","initAncmntTypeState","initCreateAncmntState","error","category","default","icon","parents","model","has_auction","initSubLvlCtgrsState","categoriesList","categories","list","console","log","dispatch","ancmntType","setAncmntType","ancmntTypes","setAncmntTypes","createAncmnt","setCreateAncmnt","subLvlCtgrs","setSubLvlCtgrs","activeStep","setActiveStep","searchTxt","setSearchTxt","handleNextStep","prevStep","handlePrevStep","handleResetSteps","handleAncmntType","selectedAncmntType","handleSearch","target","value","setFoundCategoriesChilds","handleCategory","subLevelCtgrsList","e","message","handleSubCategory","parent","child_id","data","getDataForCreateAncmnt","handleResetCreateData","handleResetAncmntType","handleBackBtn","setCreateAncmntByLang","renderPageByActiveStep"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {i18n} from \"@root/i18n\";\r\nimport {userAPI} from '@src/api/api';\r\nimport {CreateAncmnt} from \"./CreateAncmnt\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {MainLayout} from \"@src/components/MainLayout\";\r\nimport {WithT} from \"i18next\";\r\nimport {\r\n    CreateAncmntState,\r\n    AncmntType\r\n} from \"@root/interfaces/Announcement\";\r\nimport {AncmntFormContainer} from \"./ancmnt_form/AncmntFormContainer\";\r\nimport {setErrorMsgAction} from '@root/src/redux/slices/errorSlice';\r\nimport {AncmntTypesPage} from \"@src/components/announcement/ancmnt_types_page/AncmntTypesPage\";\r\nimport {categoryDataNormalization, categorySearchHelper} from \"@src/helpers\";\r\nimport {AncmntHeader} from './ancmnt_header/AncmntHeader';\r\nimport {SuccessAncmnt} from \"@src/components/announcement/create_ancmnt/ancmnt_form/success_ancmnt/SuccessAncmnt\";\r\nimport {SubLvlCtgrsType} from \"@root/interfaces/Categories\";\r\n\r\n\r\nconst steps = ['Тип объявления', 'Категория', 'Заполнение', 'Проверка'];\r\n\r\nconst initAncmntTypeStates = {\r\n    isFetch: false,\r\n    types: [\r\n        {\r\n            id: 1,\r\n            name: \"Обычный\",\r\n            currency: [\r\n                {\r\n                    id: 1,\r\n                    name: \"уе\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: \"sum\"\r\n                }\r\n            ],\r\n            expired: [\r\n                {\r\n                    id: 3,\r\n                    expiration_at: 720\r\n                }\r\n            ],\r\n            image: {\r\n                url: '/img/adv-background.png'\r\n            }\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Аукцион\",\r\n            currency: [\r\n                {\r\n                    id: 3,\r\n                    name: \"sum\"\r\n                }\r\n            ],\r\n            expired: [\r\n                {\r\n                    id: 1,\r\n                    expiration_at: 2\r\n                },\r\n                {\r\n                    id: 2,\r\n                    expiration_at: 720\r\n                }\r\n            ],\r\n            image: {\r\n                url: '/img/lot-background.png'\r\n            }\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Продвинутый аукцион\",\r\n            currency: [\r\n                {\r\n                    id: 4,\r\n                    name: \"sum\"\r\n                }\r\n            ],\r\n            expired: [\r\n                {\r\n                    id: 4,\r\n                    expiration_at: 2\r\n                },\r\n                {\r\n                    id: 5,\r\n                    expiration_at: 720\r\n                }\r\n            ],\r\n            image: {\r\n                url: '/img/advanced-lot-background.png'\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nexport const CreateAncmntContainer: FC<WithT> = ({t}) => {\r\n    const lang = i18n.language;\r\n\r\n    const initAncmntTypeState = {\r\n        id: null,\r\n        name: '',\r\n        currency: [{\r\n            id: null,\r\n            name: ''\r\n        }],\r\n        expired: [{\r\n            id: null,\r\n            expiration_at: null\r\n        }],\r\n        image: {\r\n            url: ''\r\n        }\r\n    };\r\n\r\n    const initCreateAncmntState = {\r\n        isFetch: false,\r\n        error: null,\r\n        category: {\r\n            id: null,\r\n            name: '',\r\n            image: {\r\n                url: {\r\n                    default: ''\r\n                }\r\n            },\r\n            icon: {\r\n                id: null,\r\n                url: ''\r\n            },\r\n            parents: [],\r\n            model: [],\r\n            has_auction: null,\r\n        }\r\n    };\r\n\r\n    const initSubLvlCtgrsState = [{\r\n        id: null,\r\n        name: '',\r\n        parents: [{\r\n            id: null,\r\n            name: ''\r\n        }]\r\n    }];\r\n\r\n    const categoriesList = useSelector(({categories}: RootState) => {\r\n        return categoryDataNormalization(categories.list);\r\n        // return categories.list;\r\n    });\r\n\r\n    console.log(categoriesList)\r\n    const dispatch = useDispatch();\r\n\r\n    const [ancmntType, setAncmntType] = useState<AncmntType>(initAncmntTypeState);\r\n\r\n    const [ancmntTypes, setAncmntTypes] = useState<{ isFetch: boolean, types: AncmntType[] }>(initAncmntTypeStates);\r\n\r\n    const [createAncmnt, setCreateAncmnt] = useState<CreateAncmntState>(initCreateAncmntState);\r\n\r\n    const [subLvlCtgrs, setSubLvlCtgrs] = useState<SubLvlCtgrsType[]>(initSubLvlCtgrsState);\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n\r\n    const [searchTxt, setSearchTxt] = useState('');\r\n\r\n    const handleNextStep = () => {\r\n        setActiveStep((prevStep) => prevStep + 1);\r\n    };\r\n\r\n    const handlePrevStep = () => {\r\n        setActiveStep((prevStep) => prevStep - 1);\r\n    };\r\n\r\n    const handleResetSteps = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    // const setAncmntsTypes = async () => {\r\n    //     try {\r\n    //         const types = userAPI.getAncmntsTypes(lang);\r\n    //         await setFetchedData(\r\n    //             ancmntTypes,\r\n    //             setAncmntTypes,\r\n    //             {types},\r\n    //         );\r\n    //     } catch (e) {\r\n    //         dispatch(setErrorMsgAction(e.message));\r\n    //         setAncmntTypes({...ancmntTypes, isFetch: false});\r\n    //     }\r\n    // };\r\n\r\n    const handleAncmntType = (selectedAncmntType) => () => {\r\n        handleNextStep();\r\n        setAncmntType(selectedAncmntType);\r\n    };\r\n\r\n    const handleSearch = ({target}) => {\r\n        setSearchTxt(target.value);\r\n    };\r\n\r\n    const setFoundCategoriesChilds = () => {\r\n        const model = !!searchTxt\r\n            ? categorySearchHelper(searchTxt, categoriesList)\r\n            : [];\r\n\r\n        setCreateAncmnt({\r\n            ...createAncmnt,\r\n            category: {\r\n                ...initCreateAncmntState.category,\r\n                model\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleCategory = (category) => async () => {\r\n        try {\r\n            setCreateAncmnt({\r\n                ...createAncmnt,\r\n                subLevelCtgrsList: category\r\n            });\r\n        } catch (e) {\r\n            dispatch(setErrorMsgAction(e.message));\r\n            setCreateAncmnt({...createAncmnt, isFetch: false});\r\n        }\r\n    };\r\n\r\n    const handleSubCategory = (parent, child_id, name) => async () => {\r\n        try {\r\n            setCreateAncmnt({\r\n                ...createAncmnt,\r\n                isFetch: true,\r\n            });\r\n\r\n            const data = await userAPI.getDataForCreateAncmnt(parent.id, child_id, lang);\r\n\r\n            setCreateAncmnt({\r\n                ...createAncmnt,\r\n                isFetch: false,\r\n                // subCategory: {\r\n                //     id: child_id,\r\n                //     name,\r\n                //     data,\r\n                //     parent\r\n                // }\r\n            });\r\n            handleNextStep();\r\n        } catch (e) {\r\n            dispatch(setErrorMsgAction(e.message));\r\n            setCreateAncmnt({...createAncmnt, isFetch: false});\r\n        }\r\n    };\r\n\r\n    const handleResetCreateData = () => {\r\n        setSearchTxt('');\r\n        setCreateAncmnt(initCreateAncmntState);\r\n    };\r\n\r\n    const handleResetAncmntType = () => {\r\n        handleResetSteps();\r\n        handleResetCreateData();\r\n        setAncmntType(initAncmntTypeState);\r\n    };\r\n\r\n    const handleBackBtn = () => {\r\n        handlePrevStep();\r\n        switch (activeStep) {\r\n            case 1:\r\n                handleResetAncmntType();\r\n                break;\r\n            case 2:\r\n                handleResetCreateData();\r\n        }\r\n    };\r\n\r\n    const setCreateAncmntByLang = async () => {\r\n        // const [ctgrByLang] = categoriesList.filter(ctgr => ctgr.id === subCategory.parent.id);\r\n        // ctgrByLang && setCreateAncmnt({\r\n        //     ...createAncmnt,\r\n        //     category: ctgrByLang,\r\n        // });\r\n        // if (subCategory.id !== null) {\r\n        //     const [subCtgrByLang] = ctgrByLang.model.filter(subCtgr => subCtgr.id === subCategory.id);\r\n        //\r\n        //     try {\r\n        //         setCreateAncmnt({\r\n        //             ...createAncmnt,\r\n        //             isFetch: true\r\n        //         });\r\n        //\r\n        //         const data = await userAPI.getAdDataForCreateAncmnt(subCategory.parent.id, subCategory.id, lang);\r\n        //\r\n        //         setCreateAncmnt({\r\n        //             ...createAncmnt,\r\n        //             isFetch: false,\r\n        //             subCategory: {\r\n        //                 ...subCtgrByLang,\r\n        //                 data\r\n        //             }\r\n        //         });\r\n        //     } catch (e) {\r\n        //         dispatch(setErrorMsgAction(e.message));\r\n        //         setCreateAncmnt({...createAncmnt, isFetch: false});\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    const renderPageByActiveStep = () => {\r\n        switch (activeStep) {\r\n            case 0:\r\n                return <AncmntTypesPage\r\n                    ancmntTypes={ancmntTypes}\r\n                    handleAncmntType={handleAncmntType}\r\n                />\r\n            case 1:\r\n                return <CreateAncmnt\r\n                    ancmntType={ancmntType}\r\n                    createAncmnt={createAncmnt}\r\n                    categoriesList={categoriesList}\r\n                    searchTxt={searchTxt}\r\n                    handleSearch={handleSearch}\r\n                    handleCategory={handleCategory}\r\n                    handleSubCategory={handleSubCategory}\r\n                />\r\n            case 4:\r\n                return <SuccessAncmnt\r\n                    handleCreateNewAncmnt={handleResetAncmntType}\r\n                />\r\n            default:\r\n                return <AncmntFormContainer\r\n                    t={t}\r\n                    activeStep={activeStep}\r\n                    ancmntType={ancmntType}\r\n                    createAncmnt={createAncmnt}\r\n                    handleNextStep={handleNextStep}\r\n                />\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //    setAncmntsTypes();\r\n    // }, []);\r\n\r\n    // useEffect(() => {\r\n    //     setCreateAncmntByLang();\r\n    // }, [categoriesList[0].name]);\r\n\r\n    // useEffect(() => {\r\n    //     setFoundCategoriesChilds();\r\n    // }, [searchTxt]);\r\n\r\n    // console.log(createAncmnt)\r\n    // console.log(categoriesList)\r\n    return (\r\n        <MainLayout>\r\n            {activeStep !== 0 && activeStep !== 4\r\n            && <AncmntHeader\r\n                steps={steps}\r\n                activeStep={activeStep}\r\n                handleBackBtn={handleBackBtn}\r\n            />}\r\n            {renderPageByActiveStep()}\r\n        </MainLayout>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}