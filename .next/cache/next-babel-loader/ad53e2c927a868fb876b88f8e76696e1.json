{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport { Grid } from \"@material-ui/core\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport React from \"react\";\nexport var CustomDroppable = function CustomDroppable(props) {\n  var droppableId = props.droppableId,\n      files = props.files,\n      isPreview = props.isPreview,\n      removeFile = props.removeFile;\n  return __jsx(Droppable, {\n    isCombineEnabled: true,\n    droppableId: droppableId,\n    direction: \"horizontal\"\n  }, function (provided) {\n    return __jsx(Grid, _extends({\n      container: true,\n      className: \"images-wrapper\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef\n    }), files.map(function (_ref, index) {\n      var url = _ref.url,\n          file = _ref.file;\n      var isUrl = typeof url === 'string';\n\n      if (droppableId === 'firstRow' && index <= 3 || droppableId === 'secondRow' && index > 3) {\n        return isUrl ? __jsx(Draggable, {\n          key: index,\n          index: index,\n          draggableId: index.toString(),\n          isDragDisabled: isPreview || !isUrl\n        }, function (provided) {\n          return __jsx(Grid, _extends({\n            item: true,\n            xs: 4,\n            md: 3,\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps), __jsx(\"img\", {\n            src: url,\n            style: {\n              width: '160px',\n              height: '120px',\n              objectFit: 'cover'\n            },\n            alt: file.name\n          }), __jsx(ButtonComponent, {\n            disabled: isPreview,\n            onClick: removeFile(url)\n          }, \"X\"));\n        }) : url;\n      }\n    }), provided.placeholder);\n  });\n};\n_c = CustomDroppable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDroppable\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/preview_photos/CustomDroppable.tsx"],"names":["Grid","Draggable","Droppable","ButtonComponent","React","CustomDroppable","props","droppableId","files","isPreview","removeFile","provided","droppableProps","innerRef","map","index","url","file","isUrl","toString","draggableProps","dragHandleProps","width","height","objectFit","name","placeholder"],"mappings":";;AAAA,SAAQA,IAAR,QAAmB,mBAAnB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,qBAAnC;AACA,SAAQC,eAAR,QAA8B,wCAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA,MAC/BC,WAD+B,GACcD,KADd,CAC/BC,WAD+B;AAAA,MAClBC,KADkB,GACcF,KADd,CAClBE,KADkB;AAAA,MACXC,SADW,GACcH,KADd,CACXG,SADW;AAAA,MACAC,UADA,GACcJ,KADd,CACAI,UADA;AAGtC,SACI,MAAC,SAAD;AACI,IAAA,gBAAgB,EAAE,IADtB;AAEI,IAAA,WAAW,EAAEH,WAFjB;AAGI,IAAA,SAAS,EAAC;AAHd,KAKK,UAAAI,QAAQ;AAAA,WACL,MAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,SAAS,EAAC;AAFd,OAGQA,QAAQ,CAACC,cAHjB;AAII,MAAA,GAAG,EAAED,QAAQ,CAACE;AAJlB,QAOQL,KAAK,CAACM,GAAN,CAAU,gBAAcC,KAAd,EAAwB;AAAA,UAAtBC,GAAsB,QAAtBA,GAAsB;AAAA,UAAjBC,IAAiB,QAAjBA,IAAiB;AAC1B,UAAMC,KAAK,GAAG,OAAOF,GAAP,KAAe,QAA7B;;AACA,UACKT,WAAW,KAAK,UAAhB,IAA8BQ,KAAK,IAAI,CAAxC,IAECR,WAAW,KAAK,WAAhB,IAA+BQ,KAAK,GAAG,CAH5C,EAIE;AACE,eACIG,KAAK,GACC,MAAC,SAAD;AACE,UAAA,GAAG,EAAEH,KADP;AAEE,UAAA,KAAK,EAAEA,KAFT;AAGE,UAAA,WAAW,EAAEA,KAAK,CAACI,QAAN,EAHf;AAIE,UAAA,cAAc,EAAEV,SAAS,IAAI,CAACS;AAJhC,WAMG,UAAAP,QAAQ;AAAA,iBACL,MAAC,IAAD;AACI,YAAA,IAAI,MADR;AAEI,YAAA,EAAE,EAAE,CAFR;AAGI,YAAA,EAAE,EAAE,CAHR;AAII,YAAA,GAAG,EAAEA,QAAQ,CAACE;AAJlB,aAKQF,QAAQ,CAACS,cALjB,EAMQT,QAAQ,CAACU,eANjB,GAQI;AACI,YAAA,GAAG,EAAEL,GADT;AAEI,YAAA,KAAK,EAAE;AACHM,cAAAA,KAAK,EAAE,OADJ;AAEHC,cAAAA,MAAM,EAAE,OAFL;AAGHC,cAAAA,SAAS,EAAE;AAHR,aAFX;AAOI,YAAA,GAAG,EAAEP,IAAI,CAACQ;AAPd,YARJ,EAiBI,MAAC,eAAD;AACI,YAAA,QAAQ,EAAEhB,SADd;AAEI,YAAA,OAAO,EAAEC,UAAU,CAACM,GAAD;AAFvB,iBAjBJ,CADK;AAAA,SANX,CADD,GAgCCA,GAjCV;AAmCH;AACJ,KA3CL,CAPR,EAoDKL,QAAQ,CAACe,WApDd,CADK;AAAA,GALb,CADJ;AAgEH,CAnEM;KAAMrB,e","sourcesContent":["import {Grid} from \"@material-ui/core\";\r\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const CustomDroppable = (props) => {\r\n    const {droppableId, files, isPreview, removeFile} = props;\r\n\r\n    return (\r\n        <Droppable\r\n            isCombineEnabled={true}\r\n            droppableId={droppableId}\r\n            direction=\"horizontal\"\r\n        >\r\n            {provided => (\r\n                <Grid\r\n                    container\r\n                    className=\"images-wrapper\"\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                >\r\n                    {\r\n                        files.map(({url, file}, index) => {\r\n                                const isUrl = typeof url === 'string';\r\n                                if (\r\n                                    (droppableId === 'firstRow' && index <= 3)\r\n                                    ||\r\n                                    (droppableId === 'secondRow' && index > 3)\r\n                                ) {\r\n                                    return (\r\n                                        isUrl\r\n                                            ? <Draggable\r\n                                                key={index}\r\n                                                index={index}\r\n                                                draggableId={index.toString()}\r\n                                                isDragDisabled={isPreview || !isUrl}\r\n                                            >\r\n                                                {provided => (\r\n                                                    <Grid\r\n                                                        item\r\n                                                        xs={4}\r\n                                                        md={3}\r\n                                                        ref={provided.innerRef}\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={url}\r\n                                                            style={{\r\n                                                                width: '160px',\r\n                                                                height: '120px',\r\n                                                                objectFit: 'cover'\r\n                                                            }}\r\n                                                            alt={file.name}\r\n                                                        />\r\n                                                        <ButtonComponent\r\n                                                            disabled={isPreview}\r\n                                                            onClick={removeFile(url)}\r\n                                                        >X</ButtonComponent>\r\n                                                    </Grid>\r\n                                                )}\r\n                                            </Draggable>\r\n                                            : url\r\n                                    )\r\n                                }\r\n                            }\r\n                        )}\r\n                    {provided.placeholder}\r\n                </Grid>\r\n            )}\r\n        </Droppable>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}