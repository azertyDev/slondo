{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { CustomMenu } from \"@src/components/elements/custom_menu/CustomMenu\";\nimport { useStyles } from './useStyles';\nexport var AdvrtSettingsBlock = function AdvrtSettingsBlock(props) {\n  _s();\n\n  var data = props.data,\n      values = props.values,\n      onBlur = props.onBlur,\n      handleClickMenuItem = props.handleClickMenuItem;\n  var classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    spacing: 1,\n    className: classes.root\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"h5\"\n  }, __jsx(\"strong\", null, \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"))), __jsx(React.Fragment, null, listGenerator(data))));\n\n  function listGenerator(data) {\n    var keys = Object.keys(data);\n    return keys.map(function (key, i) {\n      if (Array.isArray(data[key])) {\n        var newData = [{\n          id: null,\n          name: 'Выбрать'\n        }].concat(_toConsumableArray(data[key]));\n        return __jsx(React.Fragment, null, __jsx(Grid, {\n          item: true,\n          key: i,\n          xs: 12,\n          sm: 4\n        }, __jsx(Typography, {\n          variant: \"subtitle1\"\n        }, __jsx(\"strong\", null, key)), __jsx(CustomMenu, {\n          valueName: values[key] ? values[key].name : 'Выбрать',\n          items: newData,\n          onBlur: onBlur,\n          onClick: handleClickMenuItem(key)\n        })));\n      }\n    });\n  }\n};\n\n_s(AdvrtSettingsBlock, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdvrtSettingsBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdvrtSettingsBlock\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advertisement/advrtForm/advrt_settings_block/AdvrtSettingsBlock.tsx"],"names":["React","Grid","Typography","CustomMenu","useStyles","AdvrtSettingsBlock","props","data","values","onBlur","handleClickMenuItem","classes","root","listGenerator","keys","Object","map","key","i","Array","isArray","newData","id","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,mBAA/B;AACA,SAAQC,UAAR,QAAyB,iDAAzB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAO,IAAMC,kBAA2B,GAAG,SAA9BA,kBAA8B,CAACC,KAAD,EAAW;AAAA;;AAAA,MAC3CC,IAD2C,GACED,KADF,CAC3CC,IAD2C;AAAA,MACrCC,MADqC,GACEF,KADF,CACrCE,MADqC;AAAA,MAC7BC,MAD6B,GACEH,KADF,CAC7BG,MAD6B;AAAA,MACrBC,mBADqB,GACEJ,KADF,CACrBI,mBADqB;AAGlD,MAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,SACI,4BACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,OAAO,EAAE,CAAtC;AAAyC,IAAA,SAAS,EAAEO,OAAO,CAACC;AAA5D,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE;AAAf,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KACI,4IADJ,CADJ,CADJ,EAMI,4BACKC,aAAa,CAACN,IAAD,CADlB,CANJ,CADJ,CADJ;;AAeA,WAASM,aAAT,CAAuBN,IAAvB,EAAkD;AAC9C,QAAMO,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYP,IAAZ,CAAb;AAEA,WAAOO,IAAI,CAACE,GAAL,CAAS,UAACC,GAAD,EAAMC,CAAN,EAAY;AACxB,UAAIC,KAAK,CAACC,OAAN,CAAcb,IAAI,CAACU,GAAD,CAAlB,CAAJ,EAA8B;AAC1B,YAAMI,OAAO,IAAI;AAACC,UAAAA,EAAE,EAAE,IAAL;AAAWC,UAAAA,IAAI,EAAE;AAAjB,SAAJ,4BAAoChB,IAAI,CAACU,GAAD,CAAxC,EAAb;AAEA,eACI,4BACI,MAAC,IAAD;AACI,UAAA,IAAI,MADR;AAEI,UAAA,GAAG,EAAEC,CAFT;AAGI,UAAA,EAAE,EAAE,EAHR;AAII,UAAA,EAAE,EAAE;AAJR,WAMI,MAAC,UAAD;AAAY,UAAA,OAAO,EAAC;AAApB,WACI,sBAASD,GAAT,CADJ,CANJ,EASI,MAAC,UAAD;AACI,UAAA,SAAS,EAAET,MAAM,CAACS,GAAD,CAAN,GAAcT,MAAM,CAACS,GAAD,CAAN,CAAYM,IAA1B,GAAiC,SADhD;AAEI,UAAA,KAAK,EAAEF,OAFX;AAGI,UAAA,MAAM,EAAEZ,MAHZ;AAII,UAAA,OAAO,EAAEC,mBAAmB,CAACO,GAAD;AAJhC,UATJ,CADJ,CADJ;AAoBH;AACJ,KAzBM,CAAP;AA0BH;AACJ,CAjDM;;GAAMZ,kB;UAGOD,S;;;KAHPC,kB","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport {CustomMenu} from \"@src/components/elements/custom_menu/CustomMenu\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const AdvrtSettingsBlock: FC<any> = (props) => {\r\n    const {data, values, onBlur, handleClickMenuItem} = props;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Grid item container xs={12} spacing={1} className={classes.root}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\">\r\n                        <strong>Настройки объявления</strong>\r\n                    </Typography>\r\n                </Grid>\r\n                <>\r\n                    {listGenerator(data)}\r\n                </>\r\n            </Grid>\r\n        </>\r\n    )\r\n\r\n    function listGenerator(data: Record<string, any>) {\r\n        const keys = Object.keys(data);\r\n\r\n        return keys.map((key, i) => {\r\n            if (Array.isArray(data[key])) {\r\n                const newData = [{id: null, name: 'Выбрать'}, ...data[key]];\r\n\r\n                return (\r\n                    <>\r\n                        <Grid\r\n                            item\r\n                            key={i}\r\n                            xs={12}\r\n                            sm={4}\r\n                        >\r\n                            <Typography variant=\"subtitle1\">\r\n                                <strong>{key}</strong>\r\n                            </Typography>\r\n                            <CustomMenu\r\n                                valueName={values[key] ? values[key].name : 'Выбрать'}\r\n                                items={newData}\r\n                                onBlur={onBlur}\r\n                                onClick={handleClickMenuItem(key)}\r\n                            />\r\n                        </Grid>\r\n                    </>\r\n                )\r\n            }\r\n        })\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}