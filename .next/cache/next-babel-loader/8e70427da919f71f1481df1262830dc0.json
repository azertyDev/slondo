{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { userApi } from '../../api/api';\nimport { authErrorAction } from './errorsActions';\nexport var selfDataActionTypes = {\n  FETCH_SELF_DATA_BEGIN: 'FETCH_SELF_DATA_BEGIN',\n  FETCH_SELF_DATA_SUCCESS: 'FETCH_SELF_DATA_SUCCESS',\n  FETCH_SELF_DATA_FAILURE: 'FETCH_SELF_DATA_FAILURE'\n};\nvar selfDataActions = {\n  fetchSelfDataBegin: function fetchSelfDataBegin() {\n    return {\n      type: selfDataActionTypes.FETCH_SELF_DATA_BEGIN\n    };\n  },\n  fetchSelfDataSuccess: function fetchSelfDataSuccess(data) {\n    return {\n      type: selfDataActionTypes.FETCH_SELF_DATA_SUCCESS,\n      payload: data\n    };\n  },\n  fetchSelfDataFailure: function fetchSelfDataFailure(error) {\n    return {\n      type: selfDataActionTypes.FETCH_SELF_DATA_FAILURE,\n      payload: error\n    };\n  }\n};\nexport var getSelfData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(phone, password) {\n    var _yield$userApi$login, userInfo;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return userApi.login(phone, password);\n\n          case 3:\n            _yield$userApi$login = _context.sent;\n            userInfo = _yield$userApi$login.userInfo;\n            return _context.abrupt(\"return\", {\n              type: selfDataActionTypes.FETCH_SELF_DATA_BEGIN,\n              payload: {\n                isFetch: false,\n                selfData: userInfo\n              }\n            });\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            authErrorAction(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function getSelfData(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/actions/selfDataActions.ts"],"names":["userApi","authErrorAction","selfDataActionTypes","FETCH_SELF_DATA_BEGIN","FETCH_SELF_DATA_SUCCESS","FETCH_SELF_DATA_FAILURE","selfDataActions","fetchSelfDataBegin","type","fetchSelfDataSuccess","data","payload","fetchSelfDataFailure","error","getSelfData","phone","password","login","userInfo","isFetch","selfData"],"mappings":";;AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,SAAQC,eAAR,QAA8B,iBAA9B;AAEA,OAAO,IAAMC,mBAAmB,GAAG;AAC/BC,EAAAA,qBAAqB,EAAE,uBADQ;AAE/BC,EAAAA,uBAAuB,EAAE,yBAFM;AAG/BC,EAAAA,uBAAuB,EAAE;AAHM,CAA5B;AAMP,IAAMC,eAAe,GAAG;AACpBC,EAAAA,kBAAkB,EAAE;AAAA,WAAO;AACvBC,MAAAA,IAAI,EAAEN,mBAAmB,CAACC;AADH,KAAP;AAAA,GADA;AAIpBM,EAAAA,oBAAoB,EAAE,8BAACC,IAAD;AAAA,WAAW;AAC7BF,MAAAA,IAAI,EAAEN,mBAAmB,CAACE,uBADG;AAE7BO,MAAAA,OAAO,EAAED;AAFoB,KAAX;AAAA,GAJF;AAQpBE,EAAAA,oBAAoB,EAAE,8BAACC,KAAD;AAAA,WAAY;AAC9BL,MAAAA,IAAI,EAAEN,mBAAmB,CAACG,uBADI;AAE9BM,MAAAA,OAAO,EAAEE;AAFqB,KAAZ;AAAA;AARF,CAAxB;AAcA,OAAO,IAAMC,WAAW;AAAA,sEAAG,iBAAOC,KAAP,EAAcC,QAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEMhB,OAAO,CAACiB,KAAR,CAAcF,KAAd,EAAqBC,QAArB,CAFN;;AAAA;AAAA;AAEZE,YAAAA,QAFY,wBAEZA,QAFY;AAAA,6CAGZ;AACHV,cAAAA,IAAI,EAAEN,mBAAmB,CAACC,qBADvB;AAEHQ,cAAAA,OAAO,EAAE;AACLQ,gBAAAA,OAAO,EAAE,KADJ;AAELC,gBAAAA,QAAQ,EAAEF;AAFL;AAFN,aAHY;;AAAA;AAAA;AAAA;AAWnBjB,YAAAA,eAAe,aAAf;;AAXmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXa,WAAW;AAAA;AAAA;AAAA,GAAjB","sourcesContent":["import {userApi} from '../../api/api'\r\nimport {authErrorAction} from './errorsActions'\r\n\r\nexport const selfDataActionTypes = {\r\n    FETCH_SELF_DATA_BEGIN: 'FETCH_SELF_DATA_BEGIN',\r\n    FETCH_SELF_DATA_SUCCESS: 'FETCH_SELF_DATA_SUCCESS',\r\n    FETCH_SELF_DATA_FAILURE: 'FETCH_SELF_DATA_FAILURE',\r\n};\r\n\r\nconst selfDataActions = {\r\n    fetchSelfDataBegin: () => ({\r\n        type: selfDataActionTypes.FETCH_SELF_DATA_BEGIN\r\n    }),\r\n    fetchSelfDataSuccess: (data) => ({\r\n        type: selfDataActionTypes.FETCH_SELF_DATA_SUCCESS,\r\n        payload: data\r\n    }),\r\n    fetchSelfDataFailure: (error) => ({\r\n        type: selfDataActionTypes.FETCH_SELF_DATA_FAILURE,\r\n        payload: error\r\n    })\r\n};\r\n\r\nexport const getSelfData = async (phone, password) => {\r\n    try {\r\n        const {userInfo} = await userApi.login(phone, password);\r\n        return {\r\n            type: selfDataActionTypes.FETCH_SELF_DATA_BEGIN,\r\n            payload: {\r\n                isFetch: false,\r\n                selfData: userInfo\r\n            }\r\n        }\r\n    } catch (e) {\r\n        authErrorAction(e)\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}