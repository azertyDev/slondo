{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Card, CardActionArea, CardContent, CardMedia, IconButton, Typography } from '@material-ui/core'; // icons\n\nimport { FavoriteIcon } from '@src/components/elements/icons/FavoriteIcon';\nimport { DeliveryIcon } from '@src/components/elements/icons/DeliveryIcon';\nimport { SafeIcon } from '@src/components/elements/icons/SafeIcon';\nimport { SwapIcon } from '@src/components/elements/icons/SwapIcon'; // styles\n\nimport { useStyles } from './useStyles';\nexport const CardItem = props => {\n  const {\n    cardType,\n    title,\n    location,\n    dateTime,\n    image,\n    price,\n    safe_deal,\n    currency\n  } = props;\n  const classes = useStyles();\n  return __jsx(Card, {\n    className: classes.root,\n    elevation: 0\n  }, __jsx(CardMedia, {\n    className: \"card-media\",\n    image: image\n  }, __jsx(\"div\", {\n    className: \"card-header\"\n  }, __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, cardType), __jsx(IconButton, null, __jsx(FavoriteIcon, null))), __jsx(\"div\", null, __jsx(\"span\", null, __jsx(DeliveryIcon, null)), safe_deal ? __jsx(\"span\", null, __jsx(SafeIcon, null)) : null, __jsx(\"span\", null, __jsx(SwapIcon, null))))), __jsx(CardActionArea, {\n    title: title\n  }, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"initial\",\n    noWrap: true\n  }, title), __jsx(Typography, {\n    variant: \"h5\",\n    color: \"initial\"\n  }, price, \" \", __jsx(\"span\", null, currency)), __jsx(Typography, {\n    variant: \"caption\",\n    noWrap: true,\n    color: \"initial\",\n    className: \"card-location\"\n  }, location), __jsx(\"br\", null), __jsx(Typography, {\n    variant: \"caption\",\n    noWrap: true,\n    color: \"initial\",\n    className: \"card-location\"\n  }, dateTime))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/card/Card.tsx"],"names":["React","Card","CardActionArea","CardContent","CardMedia","IconButton","Typography","FavoriteIcon","DeliveryIcon","SafeIcon","SwapIcon","useStyles","CardItem","props","cardType","title","location","dateTime","image","price","safe_deal","currency","classes","root"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,IADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,UALJ,EAMIC,UANJ,QAOO,mBAPP,C,CASA;;AACA,SAASC,YAAT,QAA6B,6CAA7B;AACA,SAASC,YAAT,QAA6B,6CAA7B;AACA,SAASC,QAAT,QAAyB,yCAAzB;AACA,SAASC,QAAT,QAAyB,yCAAzB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA,QAA7B;AAAuCC,IAAAA,KAAvC;AAA8CC,IAAAA,KAA9C;AAAqDC,IAAAA,SAArD;AAAgEC,IAAAA;AAAhE,MAA6ER,KAAnF;AAEA,QAAMS,OAAO,GAAGX,SAAS,EAAzB;AACA,SACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEW,OAAO,CAACC,IAAzB;AAA+B,IAAA,SAAS,EAAE;AAA1C,KACI,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,YAArB;AAAkC,IAAA,KAAK,EAAEL;AAAzC,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,mBACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KAAiCJ,QAAjC,CADJ,EAEI,MAAC,UAAD,QACI,MAAC,YAAD,OADJ,CAFJ,CADJ,EAOI,mBACI,oBAAM,MAAC,YAAD,OAAN,CADJ,EAEKM,SAAS,GAAG,oBAAM,MAAC,QAAD,OAAN,CAAH,GAA+B,IAF7C,EAGI,oBAAM,MAAC,QAAD,OAAN,CAHJ,CAPJ,CADJ,CADJ,EAgBI,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAEL;AAAvB,KACI,MAAC,WAAD,QACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,KAAK,EAAC,SAAtC;AAAgD,IAAA,MAAM;AAAtD,KACKA,KADL,CADJ,EAII,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC;AAA/B,KAA0CI,KAA1C,OAAiD,oBAAOE,QAAP,CAAjD,CAJJ,EAKI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAA8B,IAAA,MAAM,EAAE,IAAtC;AAA4C,IAAA,KAAK,EAAC,SAAlD;AAA4D,IAAA,SAAS,EAAC;AAAtE,KACKL,QADL,CALJ,EAQI,iBARJ,EASI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAA8B,IAAA,MAAM,EAAE,IAAtC;AAA4C,IAAA,KAAK,EAAC,SAAlD;AAA4D,IAAA,SAAS,EAAC;AAAtE,KACKC,QADL,CATJ,CADJ,CAhBJ,CADJ;AAkCH,CAtCM","sourcesContent":["import React from 'react'\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    IconButton,\r\n    Typography,\r\n} from '@material-ui/core'\r\n\r\n// icons\r\nimport { FavoriteIcon } from '@src/components/elements/icons/FavoriteIcon'\r\nimport { DeliveryIcon } from '@src/components/elements/icons/DeliveryIcon'\r\nimport { SafeIcon } from '@src/components/elements/icons/SafeIcon'\r\nimport { SwapIcon } from '@src/components/elements/icons/SwapIcon'\r\n\r\n// styles\r\nimport { useStyles } from './useStyles'\r\n\r\nexport const CardItem = (props) => {\r\n    const { cardType, title, location, dateTime, image, price, safe_deal, currency } = props\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <Card className={classes.root} elevation={0}>\r\n            <CardMedia className=\"card-media\" image={image}>\r\n                <div className=\"card-header\">\r\n                    <div>\r\n                        <Typography variant=\"subtitle2\">{cardType}</Typography>\r\n                        <IconButton>\r\n                            <FavoriteIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div>\r\n                        <span><DeliveryIcon /></span>\r\n                        {safe_deal ? <span><SafeIcon /></span> : null}\r\n                        <span><SwapIcon /></span>\r\n                    </div>\r\n                </div>\r\n            </CardMedia>\r\n            <CardActionArea title={title}>\r\n                <CardContent>\r\n                    <Typography variant=\"subtitle1\" color=\"initial\" noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" color=\"initial\">{price} <span>{currency}</span></Typography>\r\n                    <Typography variant=\"caption\" noWrap={true} color=\"initial\" className='card-location'>\r\n                        {location}\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography variant=\"caption\" noWrap={true} color=\"initial\" className='card-location'>\r\n                        {dateTime}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}