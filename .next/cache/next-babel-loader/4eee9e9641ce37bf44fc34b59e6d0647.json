{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from \"./rootReducer\";\nimport { createWrapper } from 'next-redux-wrapper'; // create a makeStore function\n\nvar store = function store() {\n  return configureStore({\n    reducer: rootReducer,\n    devTools: true\n  });\n}; // export type AppDispatch = typeof store.dispatch\n\n\nexport var wrapper = createWrapper(store);","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/store.ts"],"names":["configureStore","rootReducer","createWrapper","store","reducer","devTools","wrapper"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,kBAA7B;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,aAAR,QAA4B,oBAA5B,C,CAGA;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAMH,cAAc,CAAC;AAC/BI,IAAAA,OAAO,EAAEH,WADsB;AAE/BI,IAAAA,QAAQ;AAFuB,GAAD,CAApB;AAAA,CAAd,C,CAKA;;;AAEA,OAAO,IAAMC,OAAO,GAAGJ,aAAa,CAACC,KAAD,CAA7B","sourcesContent":["import {configureStore} from '@reduxjs/toolkit'\r\nimport {rootReducer} from \"./rootReducer\"\r\nimport {createWrapper} from 'next-redux-wrapper'\r\n\r\n\r\n// create a makeStore function\r\nconst store = () => configureStore({\r\n    reducer: rootReducer,\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\n// export type AppDispatch = typeof store.dispatch\r\n\r\nexport const wrapper = createWrapper(store);"]},"metadata":{},"sourceType":"module"}