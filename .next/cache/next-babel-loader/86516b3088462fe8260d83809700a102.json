{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as yup from \"yup\";\nvar requiredList = {\n  drive: true,\n  seats: true\n};\n\nvar lazyFunc = function lazyFunc(value) {\n  // const valuesKeys = Object.keys(value);\n  // const requiredFields = yup.object();\n  // valuesKeys.forEach(key => {\n  //     if (requiredList[key]) {\n  //         requiredFields.shape({\n  //             [key]: yup.object({\n  //                 id: yup.number().required('Обязательный параметр!')\n  //             })\n  //         });\n  //     }\n  // });\n  if (value !== undefined) {\n    console.log(value);\n    return yup.object().shape(_defineProperty({}, value, yup.number().required('Обязательный параметр')));\n  }\n\n  return yup.mixed().notRequired();\n};\n\nexport var createAdvrtSchema = yup.object({\n  // title: yup.string().required('Обязательное поле!'),\n  // location: yup.string().required('Обязательное поле!'),\n  // files: yup.array().required('Загрузите фотографии!'),\n  // description: yup.string().required('Обязательное поле!'),\n  // phone: yup.string().required('Обязательное поле!'),\n  adsParams: yup.lazy(lazyFunc)\n});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/validation_schemas/createAdvrtSchema.ts"],"names":["yup","requiredList","drive","seats","lazyFunc","value","undefined","console","log","object","shape","number","required","mixed","notRequired","createAdvrtSchema","adsParams","lazy"],"mappings":";AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAIA,KAAK,KAAKC,SAAd,EAAyB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,WAAOL,GAAG,CAACS,MAAJ,GAAaC,KAAb,qBACFL,KADE,EACML,GAAG,CAACW,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CADN,EAAP;AAGH;;AAED,SAAOZ,GAAG,CAACa,KAAJ,GAAYC,WAAZ,EAAP;AACH,CAtBD;;AAwBA,OAAO,IAAMC,iBAAiB,GAAGf,GAAG,CAACS,MAAJ,CAAW;AACxC;AACA;AACA;AACA;AACA;AACAO,EAAAA,SAAS,EAAEhB,GAAG,CAACiB,IAAJ,CAASb,QAAT;AAN6B,CAAX,CAA1B","sourcesContent":["import * as yup from \"yup\";\r\n\r\n\r\nconst requiredList = {\r\n    drive: true,\r\n    seats: true\r\n};\r\n\r\nconst lazyFunc = (value) => {\r\n    // const valuesKeys = Object.keys(value);\r\n    // const requiredFields = yup.object();\r\n\r\n    // valuesKeys.forEach(key => {\r\n    //     if (requiredList[key]) {\r\n    //         requiredFields.shape({\r\n    //             [key]: yup.object({\r\n    //                 id: yup.number().required('Обязательный параметр!')\r\n    //             })\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    if (value !== undefined) {\r\n        console.log(value)\r\n        return yup.object().shape({\r\n            [value]: yup.number().required('Обязательный параметр'),\r\n        });\r\n    }\r\n\r\n    return yup.mixed().notRequired();\r\n};\r\n\r\nexport const createAdvrtSchema = yup.object({\r\n    // title: yup.string().required('Обязательное поле!'),\r\n    // location: yup.string().required('Обязательное поле!'),\r\n    // files: yup.array().required('Загрузите фотографии!'),\r\n    // description: yup.string().required('Обязательное поле!'),\r\n    // phone: yup.string().required('Обязательное поле!'),\r\n    adsParams: yup.lazy(lazyFunc)\r\n});"]},"metadata":{},"sourceType":"module"}