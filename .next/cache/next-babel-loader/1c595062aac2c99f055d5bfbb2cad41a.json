{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { CustomMenu } from \"@src/components/elements/custom_menu/CustomMenu\";\nexport var AdvertisementCreateData = function AdvertisementCreateData(props) {\n  var data = props.data,\n      values = props.values,\n      onBlur = props.onBlur,\n      handleClickMenuItem = props.handleClickMenuItem;\n  var dataKeys = Object.keys(data);\n  return __jsx(React.Fragment, null, dataKeys.map(function (key) {\n    if (key !== 'id' && key !== 'name' && data[key].length) {\n      var newData = key !== 'adsParams' ? [{\n        id: 0,\n        name: 'Выбрать'\n      }].concat(_toConsumableArray(data[key])) : data[key];\n      return __jsx(React.Fragment, null, __jsx(Grid, {\n        key: key,\n        item: true,\n        xs: 12,\n        sm: 4\n      }, __jsx(Typography, {\n        variant: \"subtitle1\"\n      }, __jsx(\"strong\", null, key)), __jsx(CustomMenu, {\n        valueName: values[key] ? values[key].name : 'Выбрать',\n        items: newData,\n        onBlur: onBlur,\n        onClick: handleClickMenuItem(key)\n      })), values['types'] && values['types'].map(function (data) {\n        var dataKeys = Object.keys(data);\n        return dataKeys.map(function (key) {\n          if (Array.isArray(data[key])) {\n            return __jsx(Grid, {\n              key: key,\n              item: true,\n              xs: 12,\n              sm: 4\n            }, __jsx(Typography, {\n              variant: \"subtitle1\"\n            }, __jsx(\"strong\", null, key)), __jsx(CustomMenu, {\n              valueName: 'Выбрать',\n              items: data[key],\n              onBlur: onBlur,\n              onClick: handleClickMenuItem(key)\n            }));\n          }\n        });\n      }));\n    }\n  }));\n};\n_c = AdvertisementCreateData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdvertisementCreateData\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/advertisementFormContent/AdvertisementCreateData.tsx"],"names":["React","Grid","Typography","CustomMenu","AdvertisementCreateData","props","data","values","onBlur","handleClickMenuItem","dataKeys","Object","keys","map","key","length","newData","id","name","Array","isArray"],"mappings":";;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,mBAA/B;AACA,SAAQC,UAAR,QAAyB,iDAAzB;AAGA,OAAO,IAAMC,uBAAgC,GAAG,SAAnCA,uBAAmC,CAACC,KAAD,EAAW;AAAA,MAChDC,IADgD,GACHD,KADG,CAChDC,IADgD;AAAA,MAC1CC,MAD0C,GACHF,KADG,CAC1CE,MAD0C;AAAA,MAClCC,MADkC,GACHH,KADG,CAClCG,MADkC;AAAA,MAC1BC,mBAD0B,GACHJ,KADG,CAC1BI,mBAD0B;AAEvD,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,IAAZ,CAAjB;AAEA,SACI,4BAEQI,QAAQ,CAACG,GAAT,CAAa,UAACC,GAAD,EAAS;AAClB,QAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,MAAxB,IAAkCR,IAAI,CAACQ,GAAD,CAAJ,CAAUC,MAAhD,EAAwD;AACpD,UAAMC,OAAO,GAAGF,GAAG,KAAK,WAAR,IAAuB;AAACG,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE;AAAd,OAAvB,4BAAoDZ,IAAI,CAACQ,GAAD,CAAxD,KAAiER,IAAI,CAACQ,GAAD,CAArF;AACA,aACI,4BACI,MAAC,IAAD;AACI,QAAA,GAAG,EAAEA,GADT;AAEI,QAAA,IAAI,MAFR;AAGI,QAAA,EAAE,EAAE,EAHR;AAII,QAAA,EAAE,EAAE;AAJR,SAMI,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,SACI,sBAASA,GAAT,CADJ,CANJ,EASI,MAAC,UAAD;AACI,QAAA,SAAS,EAAEP,MAAM,CAACO,GAAD,CAAN,GAAcP,MAAM,CAACO,GAAD,CAAN,CAAYI,IAA1B,GAAiC,SADhD;AAEI,QAAA,KAAK,EAAEF,OAFX;AAGI,QAAA,MAAM,EAAER,MAHZ;AAII,QAAA,OAAO,EAAEC,mBAAmB,CAACK,GAAD;AAJhC,QATJ,CADJ,EAkBQP,MAAM,CAAC,OAAD,CAAN,IAAmBA,MAAM,CAAC,OAAD,CAAN,CAAgBM,GAAhB,CAAoB,UAAAP,IAAI,EAAI;AAC3C,YAAMI,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,IAAZ,CAAjB;AACA,eAAOI,QAAQ,CAACG,GAAT,CAAa,UAAAC,GAAG,EAAI;AACvB,cAAIK,KAAK,CAACC,OAAN,CAAcd,IAAI,CAACQ,GAAD,CAAlB,CAAJ,EAA8B;AAC1B,mBACI,MAAC,IAAD;AACI,cAAA,GAAG,EAAEA,GADT;AAEI,cAAA,IAAI,MAFR;AAGI,cAAA,EAAE,EAAE,EAHR;AAII,cAAA,EAAE,EAAE;AAJR,eAMI,MAAC,UAAD;AAAY,cAAA,OAAO,EAAC;AAApB,eACI,sBAASA,GAAT,CADJ,CANJ,EASI,MAAC,UAAD;AACI,cAAA,SAAS,EAAE,SADf;AAEI,cAAA,KAAK,EAAER,IAAI,CAACQ,GAAD,CAFf;AAGI,cAAA,MAAM,EAAEN,MAHZ;AAII,cAAA,OAAO,EAAEC,mBAAmB,CAACK,GAAD;AAJhC,cATJ,CADJ;AAkBH;AACJ,SArBM,CAAP;AAsBH,OAxBkB,CAlB3B,CADJ;AA+CH;AACJ,GAnDD,CAFR,CADJ;AA0DH,CA9DM;KAAMV,uB","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport {CustomMenu} from \"@src/components/elements/custom_menu/CustomMenu\";\r\n\r\n\r\nexport const AdvertisementCreateData: FC<any> = (props) => {\r\n    const {data, values, onBlur, handleClickMenuItem} = props;\r\n    const dataKeys = Object.keys(data);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                dataKeys.map((key) => {\r\n                    if (key !== 'id' && key !== 'name' && data[key].length) {\r\n                        const newData = key !== 'adsParams' ? [{id: 0, name: 'Выбрать'}, ...data[key]] : data[key];\r\n                        return (\r\n                            <>\r\n                                <Grid\r\n                                    key={key}\r\n                                    item\r\n                                    xs={12}\r\n                                    sm={4}\r\n                                >\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        <strong>{key}</strong>\r\n                                    </Typography>\r\n                                    <CustomMenu\r\n                                        valueName={values[key] ? values[key].name : 'Выбрать'}\r\n                                        items={newData}\r\n                                        onBlur={onBlur}\r\n                                        onClick={handleClickMenuItem(key)}\r\n                                    />\r\n                                </Grid>\r\n                                {\r\n                                    values['types'] && values['types'].map(data => {\r\n                                        const dataKeys = Object.keys(data);\r\n                                        return dataKeys.map(key => {\r\n                                            if (Array.isArray(data[key])) {\r\n                                                return (\r\n                                                    <Grid\r\n                                                        key={key}\r\n                                                        item\r\n                                                        xs={12}\r\n                                                        sm={4}\r\n                                                    >\r\n                                                        <Typography variant=\"subtitle1\">\r\n                                                            <strong>{key}</strong>\r\n                                                        </Typography>\r\n                                                        <CustomMenu\r\n                                                            valueName={'Выбрать'}\r\n                                                            items={data[key]}\r\n                                                            onBlur={onBlur}\r\n                                                            onClick={handleClickMenuItem(key)}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                )\r\n                                            }\r\n                                        })\r\n                                    })\r\n                                }\r\n                            </>\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        </>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}