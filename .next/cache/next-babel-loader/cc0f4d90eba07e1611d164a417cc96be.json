{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userAPI } from \"@src/api/api\";\nvar initialState = {\n  isFetch: false,\n  error: null,\n  adType: {\n    id: null,\n    name: 'Выберите тип объявления'\n  },\n  category: {\n    id: null,\n    name: null,\n    childs: []\n  }\n};\nexport var fetchAd = createAsyncThunk('adOrLot/fetchAd', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n    var ctgryID, subCtgryID, lang, rejectWithValue;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctgryID = _ref.ctgryID, subCtgryID = _ref.subCtgryID, lang = _ref.lang;\n            rejectWithValue = _ref2.rejectWithValue;\n            _context.prev = 2;\n            _context.next = 5;\n            return userAPI.getAdOrLot(ctgryID, subCtgryID, lang);\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", rejectWithValue(_context.t0.message));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 8]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nvar createAdOrLotSlice = createSlice({\n  name: 'adOrLot',\n  initialState: initialState,\n  reducers: {\n    setAdOrLotCtgryAction: function setAdOrLotCtgryAction(state, action) {\n      state.adType = action.payload.adType;\n      state.category = action.payload.category;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchAd.pending, function (state) {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchAd.fulfilled, function (state, action) {\n      state.isFetch = false;\n      state.adType = action.payload;\n    });\n    builder.addCase(fetchAd.rejected, function (state, action) {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nvar setAdOrLotCtgryAction = createAdOrLotSlice.actions.setAdOrLotCtgryAction;\nexport { setAdOrLotCtgryAction };\nexport var createAdOrLotReducer = createAdOrLotSlice.reducer;","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/slices/createAdOrLotSlice.ts"],"names":["createAsyncThunk","createSlice","userAPI","initialState","isFetch","error","adType","id","name","category","childs","fetchAd","ctgryID","subCtgryID","lang","rejectWithValue","getAdOrLot","message","createAdOrLotSlice","reducers","setAdOrLotCtgryAction","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","createAdOrLotReducer","reducer"],"mappings":";;AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AAEA,SAAQC,OAAR,QAAsB,cAAtB;AAIA,IAAMC,YAAqB,GAAG;AAC1BC,EAAAA,OAAO,EAAE,KADiB;AAE1BC,EAAAA,KAAK,EAAE,IAFmB;AAG1BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,EAAE,EAAE,IADA;AAEJC,IAAAA,IAAI,EAAE;AAFF,GAHkB;AAO1BC,EAAAA,QAAQ,EAAE;AACNF,IAAAA,EAAE,EAAE,IADE;AAENC,IAAAA,IAAI,EAAE,IAFA;AAGNE,IAAAA,MAAM,EAAE;AAHF;AAPgB,CAA9B;AAeA,OAAO,IAAMC,OAAO,GAAGX,gBAAgB,CACnC,iBADmC;AAAA,uEAEnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQY,YAAAA,OAAR,QAAQA,OAAR,EAAiBC,UAAjB,QAAiBA,UAAjB,EAA6BC,IAA7B,QAA6BA,IAA7B;AAAqCC,YAAAA,eAArC,SAAqCA,eAArC;AAAA;AAAA;AAAA,mBAEqBb,OAAO,CAACc,UAAR,CAAmBJ,OAAnB,EAA4BC,UAA5B,EAAwCC,IAAxC,CAFrB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAIeC,eAAe,CAAC,YAAEE,OAAH,CAJ9B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFmC;;AAAA;AAAA;AAAA;AAAA,IAAhC;AAWP,IAAMC,kBAAkB,GAAGjB,WAAW,CAAC;AACnCO,EAAAA,IAAI,EAAE,SAD6B;AAEnCL,EAAAA,YAAY,EAAZA,YAFmC;AAGnCgB,EAAAA,QAAQ,EAAE;AACNC,IAAAA,qBAAqB,EAAE,+BAACC,KAAD,EAAQC,MAAR,EAAmB;AACtCD,MAAAA,KAAK,CAACf,MAAN,GAAegB,MAAM,CAACC,OAAP,CAAejB,MAA9B;AACAe,MAAAA,KAAK,CAACZ,QAAN,GAAiBa,MAAM,CAACC,OAAP,CAAed,QAAhC;AACH;AAJK,GAHyB;AASnCe,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBf,OAAO,CAACgB,OAAxB,EAAiC,UAACN,KAAD,EAAW;AACxCA,MAAAA,KAAK,CAACjB,OAAN,GAAgB,IAAhB;AACAiB,MAAAA,KAAK,CAAChB,KAAN,GAAc,IAAd;AACH,KAHD;AAIAoB,IAAAA,OAAO,CAACC,OAAR,CAAgBf,OAAO,CAACiB,SAAxB,EAAmC,UAACP,KAAD,EAAQC,MAAR,EAAmB;AAClDD,MAAAA,KAAK,CAACjB,OAAN,GAAgB,KAAhB;AACAiB,MAAAA,KAAK,CAACf,MAAN,GAAegB,MAAM,CAACC,OAAtB;AACH,KAHD;AAIAE,IAAAA,OAAO,CAACC,OAAR,CAAgBf,OAAO,CAACkB,QAAxB,EAAkC,UAACR,KAAD,EAAQC,MAAR,EAAmB;AACjDD,MAAAA,KAAK,CAACjB,OAAN,GAAgB,KAAhB;AACAiB,MAAAA,KAAK,CAAChB,KAAN,GAAciB,MAAM,CAACC,OAArB;AACH,KAHD;AAIH;AAtBkC,CAAD,CAAtC;IAyBcH,qB,GAAyBF,kBAAkB,CAACY,O,CAA5CV,qB;;AACd,OAAO,IAAMW,oBAAoB,GAAGb,kBAAkB,CAACc,OAAhD","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {AdOrLot} from '@root/interfaces/AdOrLot';\r\nimport {userAPI} from \"@src/api/api\";\r\nimport {CategoryIDs} from \"@root/interfaces/Categories\";\r\n\r\n\r\nconst initialState: AdOrLot = {\r\n    isFetch: false,\r\n    error: null,\r\n    adType: {\r\n        id: null,\r\n        name: 'Выберите тип объявления'\r\n    },\r\n    category: {\r\n        id: null,\r\n        name: null,\r\n        childs: []\r\n    },\r\n\r\n};\r\n\r\nexport const fetchAd = createAsyncThunk<any, CategoryIDs>(\r\n    'adOrLot/fetchAd',\r\n    async ({ctgryID, subCtgryID, lang}, {rejectWithValue}) => {\r\n        try {\r\n            return await userAPI.getAdOrLot(ctgryID, subCtgryID, lang);\r\n        } catch (e) {\r\n            return rejectWithValue(e.message);\r\n        }\r\n    }\r\n);\r\n\r\nconst createAdOrLotSlice = createSlice({\r\n    name: 'adOrLot',\r\n    initialState,\r\n    reducers: {\r\n        setAdOrLotCtgryAction: (state, action) => {\r\n            state.adType = action.payload.adType;\r\n            state.category = action.payload.category;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchAd.pending, (state) => {\r\n            state.isFetch = true;\r\n            state.error = null;\r\n        })\r\n        builder.addCase(fetchAd.fulfilled, (state, action) => {\r\n            state.isFetch = false;\r\n            state.adType = action.payload;\r\n        })\r\n        builder.addCase(fetchAd.rejected, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = action.payload;\r\n        })\r\n    }\r\n});\r\n\r\nexport const {setAdOrLotCtgryAction} = createAdOrLotSlice.actions;\r\nexport const createAdOrLotReducer = createAdOrLotSlice.reducer;"]},"metadata":{},"sourceType":"module"}