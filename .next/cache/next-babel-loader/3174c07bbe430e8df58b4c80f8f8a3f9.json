{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Grid, Hidden, Container, Typography } from '@material-ui/core';\nimport { AdvertisementFormContent } from './advertisementFormContent/AdvertisementFormContent';\nimport { SuccessAdvertisement } from './successAdvertisement/SuccessAdvertisement';\nimport { createAdvrtSchema } from \"@src/validationSchemas\";\nimport { Form, Formik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAdDataForCreate } from '@src/redux/slices/createAdvrtSlice';\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { PreviewAdvertisement } from './previewAdvertisement/PreviewAdvertisement';\nimport { i18n } from '@root/i18n'; // styles\n\nimport { useStyles } from './useStyles';\nimport { MainLayout } from \"@src/components/MainLayout\";\nexport var CreateAdvertisement = function CreateAdvertisement() {\n  _s();\n\n  var store = useSelector(function (store) {\n    return store;\n  });\n  var dispatch = useDispatch();\n  var lang = i18n.language;\n\n  var _useState = useState(null),\n      typeAnchor = _useState[0],\n      setTypeAnchor = _useState[1];\n\n  var _useState2 = useState(null),\n      categoryAnchor = _useState2[0],\n      setCategoryAnchor = _useState2[1];\n\n  var _useState3 = useState(null),\n      subCategoryAnchor = _useState3[0],\n      setSubCategoryAnchor = _useState3[1];\n\n  var _useState4 = useState(false),\n      isPreview = _useState4[0],\n      setIsPreview = _useState4[1];\n\n  var _useState5 = useState(false),\n      isSuccess = _useState5[0],\n      setIsSuccess = _useState5[1];\n\n  var handleMenuOpen = function handleMenuOpen(setAnchor) {\n    return function (e) {\n      setAnchor(e.currentTarget);\n    };\n  };\n\n  var handleMenuClose = function handleMenuClose(setAnchor) {\n    return function () {\n      setAnchor(null);\n    };\n  };\n\n  var handlePreview = function handlePreview(value) {\n    return function () {\n      setIsPreview(value);\n    };\n  };\n\n  var handleSuccess = function handleSuccess() {\n    setIsSuccess(true);\n  };\n\n  var initVals = {\n    adName: '',\n    adType: {\n      id: null,\n      name: 'Тип объявления'\n    },\n    adCategory: {\n      id: null,\n      name: 'Выберите категорию',\n      childs: []\n    },\n    adSubCategory: {\n      id: null,\n      name: 'Выберите под категорию'\n    },\n    safeBuy: false,\n    haveDelivery: false,\n    haveExch: false,\n    location: null,\n    photos: [],\n    description: '',\n    phone: ''\n  };\n\n  var submit = function submit() {\n    isPreview ? console.log('submit') : setIsPreview(true);\n  };\n\n  var classes = useStyles();\n  return __jsx(MainLayout, null, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9\n  }, __jsx(Formik, {\n    initialValues: initVals,\n    validationSchema: createAdvrtSchema,\n    onSubmit: submit\n  }, function (_ref) {\n    var errors = _ref.errors,\n        touched = _ref.touched,\n        values = _ref.values,\n        setValues = _ref.setValues,\n        handleBlur = _ref.handleBlur;\n\n    // console.log(values, errors)\n    var handleCheckboxChange = function handleCheckboxChange(event) {\n      setValues(event.target.checked);\n    };\n\n    var handleClickMenuItem = function handleClickMenuItem(valueName) {\n      return function (newValue, setAnchor) {\n        return function () {\n          setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, newValue)));\n          setAnchor(null);\n\n          if (valueName === 'adSubCategory') {\n            dispatch(fetchAdDataForCreate({\n              lang: lang,\n              ctgryID: values.adCategory.id,\n              subCtgryID: newValue.id\n            }));\n          }\n        };\n      };\n    };\n\n    var handleClickMenuCategory = function handleClickMenuCategory(newValue, setAnchor) {\n      return function () {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          adCategory: newValue,\n          adSubCategory: initVals.adSubCategory\n        }));\n        setAnchor(null);\n      };\n    };\n\n    return __jsx(Form, null, isSuccess ? __jsx(SuccessAdvertisement, null) : isPreview ? __jsx(PreviewAdvertisement, null) : __jsx(AdvertisementFormContent, {\n      store: store,\n      errors: errors,\n      touched: touched,\n      values: values,\n      handleBlur: handleBlur,\n      handleClickMenuItem: handleClickMenuItem,\n      handleCheckboxChange: handleCheckboxChange,\n      handleClickMenuCategory: handleClickMenuCategory\n    }), __jsx(\"div\", {\n      className: classes.nextButtonBlock\n    }, isPreview && __jsx(ButtonComponent, {\n      className: classes.nextButton,\n      onClick: handlePreview(false)\n    }, __jsx(Typography, null, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")), __jsx(ButtonComponent, {\n      type: \"submit\",\n      className: classes.nextButton\n    }, __jsx(Typography, null, isPreview ? 'Отпарвить на модерацию' : 'Далее'))));\n  })), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 3,\n    container: true,\n    justify: \"flex-end\",\n    className: classes.adBanner\n  }, __jsx(Grid, {\n    item: true,\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"right-banner\"\n  })))))));\n};\n\n_s(CreateAdvertisement, \"JooZVRra1gOaddQ1MkU24L3BdZ0=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = CreateAdvertisement;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdvertisement\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/CreateAdvertisement.tsx"],"names":["React","useState","Grid","Hidden","Container","Typography","AdvertisementFormContent","SuccessAdvertisement","createAdvrtSchema","Form","Formik","useDispatch","useSelector","fetchAdDataForCreate","ButtonComponent","PreviewAdvertisement","i18n","useStyles","MainLayout","CreateAdvertisement","store","dispatch","lang","language","typeAnchor","setTypeAnchor","categoryAnchor","setCategoryAnchor","subCategoryAnchor","setSubCategoryAnchor","isPreview","setIsPreview","isSuccess","setIsSuccess","handleMenuOpen","setAnchor","e","currentTarget","handleMenuClose","handlePreview","value","handleSuccess","initVals","adName","adType","id","name","adCategory","childs","adSubCategory","safeBuy","haveDelivery","haveExch","location","photos","description","phone","submit","console","log","classes","errors","touched","values","setValues","handleBlur","handleCheckboxChange","event","target","checked","handleClickMenuItem","valueName","newValue","ctgryID","subCtgryID","handleClickMenuCategory","nextButtonBlock","nextButton","adBanner"],"mappings":"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","sourcesContent":["import React, {FC, useState} from 'react';\r\nimport {Grid, Hidden, Container, Typography} from '@material-ui/core';\r\nimport {AdvertisementFormContent} from './advertisementFormContent/AdvertisementFormContent';\r\nimport {SuccessAdvertisement} from './successAdvertisement/SuccessAdvertisement';\r\nimport {AdvertisementProps} from \"@root/interfaces/Advertisement\";\r\nimport {createAdvrtSchema} from \"@src/validationSchemas\";\r\nimport {Form, Formik, FormikProps} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchAdDataForCreate} from '@src/redux/slices/createAdvrtSlice';\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport {PreviewAdvertisement} from './previewAdvertisement/PreviewAdvertisement';\r\nimport {i18n} from '@root/i18n';\r\n// styles\r\nimport {useStyles} from './useStyles';\r\nimport {MainLayout} from \"@src/components/MainLayout\";\r\n\r\n\r\nexport const CreateAdvertisement: FC<AdvertisementProps> = () => {\r\n\r\n    const store = useSelector((store: RootState) => store);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const lang = i18n.language;\r\n\r\n    const [typeAnchor, setTypeAnchor] = useState(null);\r\n    const [categoryAnchor, setCategoryAnchor] = useState(null);\r\n    const [subCategoryAnchor, setSubCategoryAnchor] = useState(null);\r\n    const [isPreview, setIsPreview] = useState(false);\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n\r\n    const handleMenuOpen = (setAnchor) => (e) => {\r\n        setAnchor(e.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = (setAnchor) => () => {\r\n        setAnchor(null);\r\n    };\r\n\r\n    const handlePreview = (value) => () => {\r\n        setIsPreview(value)\r\n    };\r\n\r\n    const handleSuccess = () => {\r\n        setIsSuccess(true)\r\n    };\r\n\r\n    const initVals = {\r\n        adName: '',\r\n        adType: {\r\n            id: null,\r\n            name: 'Тип объявления'\r\n        },\r\n        adCategory: {\r\n            id: null,\r\n            name: 'Выберите категорию',\r\n            childs: []\r\n        },\r\n        adSubCategory: {\r\n            id: null,\r\n            name: 'Выберите под категорию'\r\n        },\r\n        safeBuy: false,\r\n        haveDelivery: false,\r\n        haveExch: false,\r\n        location: null,\r\n        photos: [],\r\n        description: '',\r\n        phone: ''\r\n    };\r\n\r\n    const submit = () => {\r\n        isPreview\r\n            ? console.log('submit')\r\n            : setIsPreview(true)\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <MainLayout>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} md={9}>\r\n                        <Formik initialValues={initVals} validationSchema={createAdvrtSchema} onSubmit={submit}>\r\n                            {\r\n                                ({\r\n                                     errors,\r\n                                     touched,\r\n                                     values,\r\n                                     setValues,\r\n                                     handleBlur,\r\n                                 }) => {\r\n                                    // console.log(values, errors)\r\n\r\n                                    const handleCheckboxChange = (event) => {\r\n                                        setValues(event.target.checked)\r\n                                    };\r\n\r\n                                    const handleClickMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n\r\n                                        setValues({...values, [valueName]: newValue});\r\n\r\n                                        setAnchor(null);\r\n\r\n                                        if (valueName === 'adSubCategory') {\r\n                                            dispatch(fetchAdDataForCreate({\r\n                                                lang,\r\n                                                ctgryID: values.adCategory.id,\r\n                                                subCtgryID: newValue.id,\r\n                                            }))\r\n                                        }\r\n                                    };\r\n\r\n                                    const handleClickMenuCategory = (newValue, setAnchor) => () => {\r\n\r\n                                        setValues({\r\n                                            ...values,\r\n                                            adCategory: newValue,\r\n                                            adSubCategory: initVals.adSubCategory\r\n                                        });\r\n\r\n                                        setAnchor(null);\r\n                                    };\r\n\r\n                                    return (\r\n                                        <Form>\r\n                                            {\r\n                                                isSuccess\r\n                                                    ? <SuccessAdvertisement/>\r\n                                                    : (\r\n                                                        isPreview\r\n                                                            ? <PreviewAdvertisement/>\r\n                                                            : <AdvertisementFormContent\r\n                                                                store={store}\r\n                                                                errors={errors}\r\n                                                                touched={touched}\r\n                                                                values={values}\r\n                                                                handleBlur={handleBlur}\r\n                                                                handleClickMenuItem={handleClickMenuItem}\r\n                                                                handleCheckboxChange={handleCheckboxChange}\r\n                                                                handleClickMenuCategory={handleClickMenuCategory}\r\n                                                            />\r\n                                                    )\r\n                                            }\r\n                                            <div className={classes.nextButtonBlock}>\r\n                                                {\r\n                                                    isPreview && (\r\n                                                        <ButtonComponent\r\n                                                            className={classes.nextButton}\r\n                                                            onClick={handlePreview(false)}\r\n                                                        >\r\n                                                            <Typography>\r\n                                                                Назад\r\n                                                            </Typography>\r\n                                                        </ButtonComponent>\r\n                                                    )\r\n                                                }\r\n                                                <ButtonComponent\r\n                                                    type='submit'\r\n                                                    className={classes.nextButton}\r\n                                                >\r\n                                                    <Typography>\r\n                                                        {\r\n                                                            isPreview\r\n                                                                ? 'Отпарвить на модерацию'\r\n                                                                : 'Далее'\r\n                                                        }\r\n                                                    </Typography>\r\n                                                </ButtonComponent>\r\n                                            </div>\r\n                                        </Form>\r\n                                    )\r\n                                }\r\n                            }\r\n                        </Formik>\r\n                    </Grid>\r\n                    <Hidden smDown>\r\n                        <Grid\r\n                            item\r\n                            md={3}\r\n                            container\r\n                            justify=\"flex-end\"\r\n                            className={classes.adBanner}\r\n                        >\r\n                            <Grid item md={12}>\r\n                                <div className=\"right-banner\"/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Hidden>\r\n                </Grid>\r\n            </Container>\r\n        </MainLayout>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}