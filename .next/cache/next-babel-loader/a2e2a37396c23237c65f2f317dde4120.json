{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { TextField } from \"@material-ui/core\";\n\nvar formatData = function formatData(list) {\n  return list.reduce(function (acc, row) {\n    row.cities.forEach(function (city) {\n      if (city.district.length) {\n        city.district.forEach(function (district) {\n          acc = [].concat(_toConsumableArray(acc), [{\n            region_id: row.id,\n            region: row.name,\n            city_id: city.id,\n            city: city.name,\n            district_id: district.id,\n            district: district.name\n          }]);\n        });\n      } else {\n        acc = [].concat(_toConsumableArray(acc), [{\n          region_id: row.id,\n          region: row.name,\n          city_id: city.id,\n          city: city.name\n        }]);\n      }\n    });\n    return acc;\n  }, []);\n};\n\nexport var LocationAutocomplete = function LocationAutocomplete(_ref) {\n  var values = _ref.values,\n      setValues = _ref.setValues,\n      props = _objectWithoutProperties(_ref, [\"values\", \"setValues\"]);\n\n  var optionSelected = function optionSelected(_ref2, value) {\n    var district_id = _ref2.district_id,\n        city_id = _ref2.city_id;\n    return value.district_id ? district_id === value.district_id : city_id === value.city_id;\n  };\n\n  var option = function option(location) {\n    return location.district ? \"\".concat(location.district, \", \").concat(location.city, \", \").concat(location.region) : \"\".concat(location.city, \", \").concat(location.region);\n  };\n\n  var onChange = function onChange(_, val) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      location: val\n    }));\n  };\n\n  return __jsx(Autocomplete, {\n    value: values.location,\n    onChange: onChange,\n    noOptionsText: \"\\u0413\\u043E\\u0440\\u043E\\u0434 \\u0438\\u043B\\u0438 \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D \\u0441 \\u0442\\u0430\\u043A\\u0438\\u043C \\u0438\\u043C\\u0435\\u043D\\u0435\\u043C \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\",\n    options: formatData(props.list),\n    getOptionSelected: optionSelected,\n    getOptionLabel: option,\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({\n        fullWidth: true,\n        focused: false,\n        variant: \"outlined\"\n      }, params, props));\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"module"}