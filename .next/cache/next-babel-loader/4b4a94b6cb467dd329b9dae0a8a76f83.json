{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useState, useEffect } from 'react';\nimport { CustomSlider } from '@src/components/elements/custom_slider/CustomSlider';\nimport { useStyles } from './useStyles';\nimport { Typography } from '@material-ui/core';\nimport { ButtonComponent } from '@src/components/elements/button/Button';\nexport const ModalSyncSliders = props => {\n  const {\n    imgs,\n    initialSlide,\n    setInitialSlide\n  } = props;\n  const {\n    0: slidersNav,\n    1: setSlidersNav\n  } = useState({\n    nav1: null,\n    nav2: null\n  });\n  const slider1 = useRef();\n  const slider2 = useRef();\n\n  const handleAfterChange = slide => {\n    setInitialSlide(slide);\n  };\n\n  const prev = () => {\n    slidersNav.nav2.slickPrev();\n  };\n\n  const next = () => {\n    slidersNav.nav2.slickNext();\n  };\n\n  useEffect(() => {\n    setSlidersNav({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, []);\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: classes.firstSlider\n  }, __jsx(CustomSlider, {\n    ref: slider1,\n    asNavFor: slidersNav.nav2,\n    centerMode: imgs.length === 1,\n    initialSlide: initialSlide,\n    afterChange: handleAfterChange\n  }, imgs.map((img, i) => __jsx(\"img\", {\n    key: i,\n    alt: img.alt,\n    src: img.url.default\n  })))), __jsx(\"div\", {\n    className: classes.secondSlider\n  }, __jsx(CustomSlider, {\n    ref: slider2,\n    asNavFor: slidersNav.nav1,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    focusOnSelect: true,\n    arrows: false,\n    initialSlide: initialSlide\n  }, imgs.map(({\n    url,\n    alt\n  }, i) => __jsx(\"img\", {\n    key: i,\n    alt: alt,\n    src: url.default\n  }))), __jsx(\"div\", {\n    className: \"slider-counter\"\n  }, __jsx(ButtonComponent, {\n    onClick: prev\n  }, \"<\"), __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, initialSlide + 1, \" / \", imgs.length), __jsx(ButtonComponent, {\n    onClick: next\n  }, \">\"))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/announcement/show_ancmnt/ancmnt_content/modal_sync_sliders/ModalSyncSliders.tsx"],"names":["React","useRef","useState","useEffect","CustomSlider","useStyles","Typography","ButtonComponent","ModalSyncSliders","props","imgs","initialSlide","setInitialSlide","slidersNav","setSlidersNav","nav1","nav2","slider1","slider2","handleAfterChange","slide","prev","slickPrev","next","slickNext","current","classes","root","firstSlider","length","map","img","i","alt","url","default","secondSlider"],"mappings":"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","sourcesContent":["import React, {\r\n    FC,\r\n    Dispatch,\r\n    SetStateAction,\r\n    MutableRefObject,\r\n    useRef,\r\n    useState,\r\n    useEffect,\r\n} from 'react';\r\nimport { CustomSlider } from '@src/components/elements/custom_slider/CustomSlider';\r\nimport { useStyles } from './useStyles';\r\nimport { Typography } from '@material-ui/core';\r\nimport { ButtonComponent } from '@src/components/elements/button/Button';\r\n\r\ntype SyncSlidersProps = {\r\n    initialSlide: number;\r\n    setInitialSlide: Dispatch<SetStateAction<number>>;\r\n    imgs: {\r\n        alt: string;\r\n        url: { default: string };\r\n    }[];\r\n};\r\n\r\nexport const ModalSyncSliders: FC<SyncSlidersProps> = (props) => {\r\n    const { imgs, initialSlide, setInitialSlide } = props;\r\n\r\n    const [slidersNav, setSlidersNav] = useState({ nav1: null, nav2: null });\r\n    const slider1: MutableRefObject<unknown> = useRef();\r\n    const slider2: MutableRefObject<unknown> = useRef();\r\n\r\n    const handleAfterChange = (slide) => {\r\n        setInitialSlide(slide);\r\n    };\r\n\r\n    const prev = () => {\r\n        slidersNav.nav2.slickPrev();\r\n    };\r\n\r\n    const next = () => {\r\n        slidersNav.nav2.slickNext();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setSlidersNav({\r\n            nav1: slider1.current,\r\n            nav2: slider2.current,\r\n        });\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.firstSlider}>\r\n                <CustomSlider\r\n                    ref={slider1}\r\n                    asNavFor={slidersNav.nav2}\r\n                    centerMode={imgs.length === 1}\r\n                    initialSlide={initialSlide}\r\n                    afterChange={handleAfterChange}\r\n                >\r\n                    {imgs.map((img, i) => (\r\n                        <img key={i} alt={img.alt} src={img.url.default} />\r\n                    ))}\r\n                </CustomSlider>\r\n            </div>\r\n            <div className={classes.secondSlider}>\r\n                <CustomSlider\r\n                    ref={slider2}\r\n                    asNavFor={slidersNav.nav1}\r\n                    slidesToShow={4}\r\n                    slidesToScroll={1}\r\n                    focusOnSelect={true}\r\n                    arrows={false}\r\n                    initialSlide={initialSlide}\r\n                >\r\n                    {imgs.map(({ url, alt }, i) => (\r\n                        <img key={i} alt={alt} src={url.default} />\r\n                    ))}\r\n                </CustomSlider>\r\n                <div className=\"slider-counter\">\r\n                    <ButtonComponent onClick={prev}>&lt;</ButtonComponent>\r\n                    <Typography variant=\"subtitle1\">\r\n                        {initialSlide + 1} / {imgs.length}\r\n                    </Typography>\r\n                    <ButtonComponent onClick={next}>&gt;</ButtonComponent>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}