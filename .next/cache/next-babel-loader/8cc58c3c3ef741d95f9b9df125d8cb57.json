{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { CustomSlider } from \"@src/components/elements/custom_slider/CustomSlider\";\nimport { settings } from './sliderSettings';\nimport { Link } from \"@root/i18n\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useStyles } from './useStyles';\nimport { useSelector } from \"react-redux\";\nexport var CategoriesSlider = function CategoriesSlider(_ref) {\n  _s();\n\n  var t = _ref.t;\n\n  var _useSelector = useSelector(function (store) {\n    return store.categories;\n  }),\n      isFetch = _useSelector.isFetch,\n      error = _useSelector.error,\n      list = _useSelector.list;\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    className: \"title\",\n    variant: \"h2\"\n  }, t('popularCategories')), __jsx(\"div\", {\n    className: \"category-slider\"\n  }, __jsx(CustomSlider, settings, error ? __jsx(Typography, {\n    className: \"error-text\"\n  }, error) : list.map(function (category) {\n    return isFetch ? __jsx(\"div\", {\n      className: \"category\",\n      key: category.id\n    }, __jsx(Skeleton, {\n      variant: \"circle\",\n      width: 100,\n      height: 100\n    }), __jsx(Skeleton, {\n      variant: \"text\",\n      width: 100,\n      height: 16\n    })) : __jsx(Link, {\n      href: \"#\",\n      key: category.id\n    }, __jsx(\"a\", {\n      title: category.name\n    }, __jsx(\"div\", {\n      className: \"category\"\n    }, __jsx(\"div\", {\n      className: \"bg-layer\"\n    }, __jsx(\"div\", {\n      className: \"medium\"\n    }, __jsx(\"img\", {\n      src: category.images.url[\"default\"],\n      alt: \"category\"\n    }))), __jsx(\"span\", null, category.name))));\n  }))));\n};\n\n_s(CategoriesSlider, \"6jMY70RUFIWjmc2QFAYDUQRQcRQ=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = CategoriesSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesSlider\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/main/categoriesSlider/CategoriesSlider.tsx"],"names":["React","Typography","CustomSlider","settings","Link","Skeleton","useStyles","useSelector","CategoriesSlider","t","store","categories","isFetch","error","list","classes","root","map","category","id","name","images","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AAEA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,YAAR,QAA2B,qDAA3B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,IAAR,QAAmB,YAAnB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAIA,OAAO,IAAMC,gBAA2B,GAAG,SAA9BA,gBAA8B,OAAS;AAAA;;AAAA,MAAPC,CAAO,QAAPA,CAAO;;AAAA,qBACjBF,WAAW,CAAC,UAACG,KAAD;AAAA,WAAsBA,KAAK,CAACC,UAA5B;AAAA,GAAD,CADM;AAAA,MACzCC,OADyC,gBACzCA,OADyC;AAAA,MAChCC,KADgC,gBAChCA,KADgC;AAAA,MACzBC,IADyB,gBACzBA,IADyB;;AAGhD,MAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAES,OAAO,CAACC;AAAxB,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,OAAtB;AAA8B,IAAA,OAAO,EAAC;AAAtC,KAA4CP,CAAC,CAAC,mBAAD,CAA7C,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,YAAD,EAAkBN,QAAlB,EACKU,KAAK,GACA,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC;AAAtB,KAAoCA,KAApC,CADA,GAEAC,IAAI,CAACG,GAAL,CAAS,UAAAC,QAAQ;AAAA,WACfN,OAAO,GACD;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEM,QAAQ,CAACC;AAAxC,OACE,MAAC,QAAD;AAAU,MAAA,OAAO,EAAC,QAAlB;AAA2B,MAAA,KAAK,EAAE,GAAlC;AAAuC,MAAA,MAAM,EAAE;AAA/C,MADF,EAEE,MAAC,QAAD;AAAU,MAAA,OAAO,EAAC,MAAlB;AAAyB,MAAA,KAAK,EAAE,GAAhC;AAAqC,MAAA,MAAM,EAAE;AAA7C,MAFF,CADC,GAKD,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAe,MAAA,GAAG,EAAED,QAAQ,CAACC;AAA7B,OACE;AAAG,MAAA,KAAK,EAAED,QAAQ,CAACE;AAAnB,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,GAAG,EAAEF,QAAQ,CAACG,MAAT,CAAgBC,GAAhB,WAAV;AAAuC,MAAA,GAAG,EAAC;AAA3C,MADJ,CADJ,CADJ,EAMI,oBAAOJ,QAAQ,CAACE,IAAhB,CANJ,CADJ,CADF,CANS;AAAA,GAAjB,CAHV,CADJ,CAFJ,CADJ;AA8BH,CAlCM;;GAAMZ,gB;UACsBD,W,EAEfD,S;;;KAHPE,gB","sourcesContent":["import React, {FC} from 'react';\r\nimport {WithT} from \"i18next\";\r\nimport {Typography} from '@material-ui/core';\r\nimport {CustomSlider} from \"@src/components/elements/custom_slider/CustomSlider\";\r\nimport {settings} from './sliderSettings';\r\nimport {Link} from \"@root/i18n\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport {useStyles} from './useStyles';\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\n\r\n\r\nexport const CategoriesSlider: FC<WithT> = ({t}) => {\r\n    const {isFetch, error, list} = useSelector((store: RootState) => store.categories);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography className='title' variant=\"h2\">{t('popularCategories')}</Typography>\r\n            <div className=\"category-slider\">\r\n                <CustomSlider {...settings}>\r\n                    {error\r\n                        ? <Typography className=\"error-text\">{error}</Typography>\r\n                        : list.map(category => (\r\n                            isFetch\r\n                                ? <div className='category' key={category.id}>\r\n                                    <Skeleton variant=\"circle\" width={100} height={100}/>\r\n                                    <Skeleton variant=\"text\" width={100} height={16}/>\r\n                                </div>\r\n                                : <Link href=\"#\" key={category.id}>\r\n                                    <a title={category.name}>\r\n                                        <div className='category'>\r\n                                            <div className=\"bg-layer\">\r\n                                                <div className=\"medium\">\r\n                                                    <img src={category.images.url.default} alt=\"category\"/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <span>{category.name}</span>\r\n                                        </div>\r\n                                    </a>\r\n                                </Link>\r\n                        ))}\r\n                </CustomSlider>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}