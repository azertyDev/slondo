{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { FormikProvider, useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AncmntAuctionForm } from './AncmntAuctionForm';\nimport { setErrorMsgAction } from \"@src/redux/slices/errorSlice\";\nimport { createAdvrtSchema, isRequired } from \"@root/validation_schemas/createAdvrtSchema\";\nimport { TOTAL_FILES_LIMIT } from \"@src/constants\";\nimport { initUrl } from \"@src/components/announcement_auction/create_ancmnt_auction/CreateAncmntAuctionContainer\";\nimport { i18n } from \"@root/i18n\";\nexport const autoSelectKeys = ['condition', 'area'];\nexport const textFieldKeys = ['area'];\nconst numberRegEx = /^[0-9]*$/;\nexport const AncmntAuctionFormContainer = props => {\n  const {\n    activeStep,\n    ancmntType,\n    handleNextStep,\n    createAncmnt\n  } = props;\n  const {\n    category,\n    subCategory\n  } = createAncmnt;\n  const {\n    locations\n  } = useSelector(store => store);\n  const lang = i18n.language;\n  const dispatch = useDispatch();\n  const initPhotos = Array.from({\n    length: TOTAL_FILES_LIMIT\n  }).map(() => initUrl);\n  const initFormFields = {\n    isFetch: false,\n    title: '',\n    safe_deal: false,\n    delivery: false,\n    exchange: false,\n    location: null,\n    files: initPhotos,\n    description: '',\n    phone: '',\n    price: '',\n    currency: {\n      id: null,\n      name: ''\n    },\n    avalTime: {\n      isActive: false,\n      start_time: '00:00',\n      end_time: '00:00',\n      week: [{\n        id: 1,\n        name: 'Пн'\n      }, {\n        id: 2,\n        name: 'Вт'\n      }, {\n        id: 3,\n        name: 'Ср'\n      }, {\n        id: 4,\n        name: 'Чт'\n      }, {\n        id: 5,\n        name: 'Пт'\n      }, {\n        id: 6,\n        name: 'Сб'\n      }, {\n        id: 7,\n        name: 'Вс'\n      }]\n    },\n    auction: {\n      duration: {\n        id: null,\n        expiration_at: null\n      },\n      offer_the_price: false,\n      auto_renewal: false,\n      reserve_price: '',\n      price_by_now: {\n        isActive: false,\n        value: ''\n      },\n      display_phone: false\n    },\n    adParams: {\n      safety: [],\n      multimedia: [],\n      assistant: [],\n      exterior: [],\n      car_climate: [],\n      airbags: []\n    }\n  };\n  const formik = useFormik({\n    initialValues: initFormFields,\n    validationSchema: createAdvrtSchema,\n    onSubmit\n  });\n  const {\n    values,\n    setValues,\n    errors,\n    touched,\n    setTouched,\n    handleBlur,\n    handleSubmit\n  } = formik;\n  let {\n    adParams\n  } = values;\n\n  const getFormData = data => {\n    const form = new FormData();\n    const {\n      avalTime,\n      location,\n      files,\n      adParams,\n      auction\n    } = data;\n    form.set('ads_type_id', ancmntType.id.toString());\n    form.set('parent_categories_id', category.id.toString());\n    form.set('title', data.title);\n    form.set('safe_deal', Number(data.safe_deal).toString());\n    form.set('delivery', Number(data.delivery).toString());\n    form.set('exchange', Number(data.exchange).toString());\n    form.set('phone', data.phone);\n    form.set('description', data.description);\n    form.set('price', data.price);\n    form.set('currency_id', data.currency.id.toString());\n    if (subCategory.id) form.set('child_categories_id', subCategory.id.toString());\n    files.forEach(({\n      file\n    }) => file && form.append('files[]', file, file.name));\n\n    if (avalTime.isActive) {\n      avalTime.week.forEach((day, i) => form.append(`week[${i}]`, day.id.toString()));\n      form.set('start_time', avalTime.start_time.toString());\n      form.set('end_time', avalTime.end_time.toString());\n    }\n\n    for (const key in location) {\n      if (typeof location[key] === 'number') {\n        form.set(key, Number(location[key]).toString());\n      }\n    }\n\n    for (let key in adParams) {\n      const value = adParams[key];\n\n      if (value) {\n        if (typeof value === 'string') {\n          const validKey = key.replace('_value', '');\n\n          if (textFieldKeys.some(k => k === validKey)) {\n            key = validKey;\n          }\n\n          form.set(key, value);\n        } else if (Array.isArray(value)) {\n          value.forEach((value, i) => form.append(`${key}[${i}]`, value.id));\n        } else {\n          if (value.id) {\n            switch (key) {\n              case 'models':\n                key = 'model';\n                break;\n\n              case 'colors':\n                key = 'color';\n            }\n\n            form.set(`${key}_id`, value.id);\n          }\n        }\n      }\n    }\n\n    if (ancmntType.id !== 1) {\n      form.set('duration_id', auction.duration.id.toString());\n      form.set('display_phone', Number(auction.display_phone).toString());\n\n      if (ancmntType.id === 3) {\n        form.set('reserve_price', auction.reserve_price);\n        form.set('auto_renewal', Number(auction.auto_renewal).toString());\n        form.set('offer_the_price', Number(auction.offer_the_price).toString());\n\n        if (auction.price_by_now.isActive) {\n          form.set('price_by_now', auction.price_by_now.value);\n        }\n      }\n    } // for (const key of form.entries()) {\n    //     console.log(key[0] + '-' + key[1]);\n    // }\n\n\n    return form;\n  };\n\n  async function onSubmit(values) {\n    try {\n      if (activeStep !== 3) {\n        handleNextStep();\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          isFetch: true\n        }));\n        const data = getFormData(values); // await userAPI.createAdvrt(data);\n\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          isFetch: false\n        }));\n        handleNextStep();\n      }\n    } catch (e) {\n      dispatch(setErrorMsgAction(e.message));\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        isFetch: false\n      }));\n    }\n  }\n\n  const handleCheckboxChange = valName => ({\n    target\n  }) => {\n    const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price'].some(fieldName => fieldName === valName);\n\n    if (isAuctionField) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          [valName]: target.checked\n        })\n      }));\n    } else if (valName === 'price_by_now') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          price_by_now: {\n            isActive: target.checked,\n            value: values.auction.price_by_now.value\n          }\n        })\n      }));\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        [valName]: target.checked\n      }));\n    }\n  };\n\n  const handleParamsCheckbox = (valueName, value) => () => {\n    if (adParams[valueName]) {\n      if (adParams[valueName].some(val => val.id === value.id)) {\n        adParams[valueName].map((val, index) => {\n          if (val.id === value.id) {\n            adParams[valueName].splice(index, 1);\n          }\n        });\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n          [valueName]: [...adParams[valueName], value]\n        });\n      }\n    } else {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: [value]\n      });\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      adParams\n    }));\n  };\n\n  const handleMenuItem = valueName => (newValue, setAnchor) => () => {\n    setAnchor(null);\n\n    if (valueName === 'currency') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        [valueName]: newValue\n      }));\n    } else if (valueName === 'duration') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          [valueName]: newValue\n        })\n      }));\n    } else {\n      // Reset sub props in values\n      Object.keys(newValue).map(key => {\n        if (adParams[key]) {\n          adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n            [key]: {\n              id: null,\n              name: 'Не выбрано'\n            }\n          });\n        }\n\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          adParams: _objectSpread(_objectSpread({}, adParams), {}, {\n            [valueName]: newValue\n          })\n        }));\n      });\n    }\n  };\n\n  const handleListItem = (valueName, value) => () => {\n    if (adParams[valueName] && adParams[valueName].id === value.id) {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: {\n          id: null,\n          name: 'Не выбрано'\n        }\n      });\n    } else {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: value\n      });\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      adParams\n    }));\n  };\n\n  const handleInput = valueName => ({\n    target\n  }) => {\n    if (numberRegEx.test(target.value)) {\n      if (valueName === 'price') {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          [valueName]: target.value\n        }));\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n          [valueName]: target.value\n        });\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          adParams\n        }));\n      }\n    }\n  };\n\n  const handleAuctionInput = valName => ({\n    target\n  }) => {\n    if (numberRegEx.test(target.value)) {\n      if (valName === 'price_by_now') {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n            [valName]: {\n              isActive: true,\n              value: target.value\n            }\n          })\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n            [valName]: target.value\n          })\n        }));\n      }\n    }\n  };\n\n  const handleSwitch = (_, value) => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n        isActive: value\n      })\n    }));\n  };\n\n  const handleWeekDay = value => () => {\n    if (values.avalTime.week.some(val => val.id === value.id)) {\n      values.avalTime.week.map((val, index) => {\n        if (val.id === value.id) {\n          values.avalTime.week.splice(index, 1);\n        }\n      });\n      setValues(_objectSpread({}, values));\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n          week: [...values.avalTime.week, value]\n        })\n      }));\n    }\n  };\n\n  const handleTime = ({\n    target\n  }) => {\n    let {\n      value\n    } = target;\n    const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\n    const isValid = regEx.test(value);\n\n    if (isValid) {\n      value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n          [target.name]: value\n        })\n      }));\n    }\n  };\n\n  const setReqValues = () => {\n    const reqVals = {};\n    const reqParamsVals = {};\n    const adParamsVals = subCategory.data;\n\n    if (category.id === 11) {\n      reqVals['price'] = '0';\n    }\n\n    if (ancmntType.currency.length !== 0) {\n      reqVals['currency'] = ancmntType.currency.filter(cur => cur.name === 'sum')[0];\n    }\n\n    if (ancmntType.id !== 1 && ancmntType.expired.length !== 0) {\n      reqVals['auction'] = _objectSpread(_objectSpread({}, values.auction), {}, {\n        duration: ancmntType.expired[0]\n      });\n    }\n\n    Object.keys(adParamsVals).forEach(key => {\n      if (isRequired(key) && adParams[key] === undefined) {\n        if (key === 'manufacturer' && subCategory.id == 1) {\n          reqParamsVals['models'] = {\n            id: null,\n            name: 'Не выбрано'\n          };\n        }\n\n        if (Array.isArray(adParamsVals[key])) {\n          reqParamsVals[key] = {\n            id: null,\n            name: 'Не выбрано'\n          };\n        } else {\n          reqParamsVals[key] = adParamsVals[key];\n        }\n      } else if (autoSelectKeys.some(k => k === key)) {\n        if (textFieldKeys.some(k => k === key)) {\n          reqParamsVals[`${key}_value`] = '';\n        }\n\n        reqParamsVals[key] = adParamsVals[key][0];\n      }\n    });\n    setValues(_objectSpread(_objectSpread(_objectSpread({}, values), reqVals), {}, {\n      adParams: _objectSpread(_objectSpread({}, adParams), reqParamsVals)\n    }));\n  };\n\n  useEffect(() => {\n    window && window.scrollTo(0, 0);\n  }, []);\n  useEffect(() => {\n    setReqValues();\n  }, [category.id, lang]);\n  return __jsx(FormikProvider, {\n    value: formik\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(AncmntAuctionForm, _extends({}, props, {\n    errors: errors,\n    touched: touched,\n    setTouched: setTouched,\n    values: values,\n    setValues: setValues,\n    locations: locations,\n    handleBlur: handleBlur,\n    handleTime: handleTime,\n    handleInput: handleInput,\n    handleSwitch: handleSwitch,\n    handleWeekDay: handleWeekDay,\n    handleListItem: handleListItem,\n    handleMenuItem: handleMenuItem,\n    handleAuctionInput: handleAuctionInput,\n    handleParamsCheckbox: handleParamsCheckbox,\n    handleCheckboxChange: handleCheckboxChange\n  }))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/announcement_auction/create_ancmnt_auction/ancmnt_auction_form/AncmntAuctionFormContainer.tsx"],"names":["React","useEffect","FormikProvider","useFormik","useDispatch","useSelector","AncmntAuctionForm","setErrorMsgAction","createAdvrtSchema","isRequired","TOTAL_FILES_LIMIT","initUrl","i18n","autoSelectKeys","textFieldKeys","numberRegEx","AncmntAuctionFormContainer","props","activeStep","ancmntType","handleNextStep","createAncmnt","category","subCategory","locations","store","lang","language","dispatch","initPhotos","Array","from","length","map","initFormFields","isFetch","title","safe_deal","delivery","exchange","location","files","description","phone","price","currency","id","name","avalTime","isActive","start_time","end_time","week","auction","duration","expiration_at","offer_the_price","auto_renewal","reserve_price","price_by_now","value","display_phone","adParams","safety","multimedia","assistant","exterior","car_climate","airbags","formik","initialValues","validationSchema","onSubmit","values","setValues","errors","touched","setTouched","handleBlur","handleSubmit","getFormData","data","form","FormData","set","toString","Number","forEach","file","append","day","i","key","validKey","replace","some","k","isArray","e","message","handleCheckboxChange","valName","target","isAuctionField","fieldName","checked","handleParamsCheckbox","valueName","val","index","splice","handleMenuItem","newValue","setAnchor","Object","keys","handleListItem","handleInput","test","handleAuctionInput","handleSwitch","_","handleWeekDay","handleTime","regEx","isValid","m","setReqValues","reqVals","reqParamsVals","adParamsVals","filter","cur","expired","undefined","window","scrollTo"],"mappings":"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","sourcesContent":["import React, {FC, useEffect} from 'react';\r\nimport {FormikProvider, useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AncmntAuctionForm} from './AncmntAuctionForm';\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {CreateAncmntFields, FileType} from \"@root/interfaces/Announcement\";\r\nimport {setErrorMsgAction} from \"@src/redux/slices/errorSlice\";\r\nimport {createAdvrtSchema, isRequired} from \"@root/validation_schemas/createAdvrtSchema\";\r\nimport {TOTAL_FILES_LIMIT} from \"@src/constants\";\r\nimport {initUrl} from \"@src/components/announcement_auction/create_ancmnt_auction/CreateAncmntAuctionContainer\";\r\nimport {i18n} from \"@root/i18n\";\r\n\r\n\r\nexport const autoSelectKeys = ['condition', 'area'];\r\nexport const textFieldKeys = ['area'];\r\n\r\nconst numberRegEx = /^[0-9]*$/;\r\n\r\nexport const AncmntAuctionFormContainer: FC<any> = (props) => {\r\n    const {\r\n        activeStep,\r\n        ancmntType,\r\n        handleNextStep,\r\n        createAncmnt\r\n    } = props;\r\n    const {category, subCategory} = createAncmnt;\r\n\r\n    const {locations} = useSelector((store: RootState) => store);\r\n\r\n    const lang = i18n.language;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initPhotos: FileType[] = Array.from({\r\n        length: TOTAL_FILES_LIMIT\r\n    }).map(() => initUrl);\r\n\r\n    const initFormFields: CreateAncmntFields = {\r\n        isFetch: false,\r\n        title: '',\r\n        safe_deal: false,\r\n        delivery: false,\r\n        exchange: false,\r\n        location: null,\r\n        files: initPhotos,\r\n        description: '',\r\n        phone: '',\r\n        price: '',\r\n        currency: {\r\n            id: null,\r\n            name: ''\r\n        },\r\n        avalTime: {\r\n            isActive: false,\r\n            start_time: '00:00',\r\n            end_time: '00:00',\r\n            week: [\r\n                {id: 1, name: 'Пн'},\r\n                {id: 2, name: 'Вт'},\r\n                {id: 3, name: 'Ср'},\r\n                {id: 4, name: 'Чт'},\r\n                {id: 5, name: 'Пт'},\r\n                {id: 6, name: 'Сб'},\r\n                {id: 7, name: 'Вс'}\r\n            ],\r\n        },\r\n        auction: {\r\n            duration: {\r\n                id: null,\r\n                expiration_at: null\r\n            },\r\n            offer_the_price: false,\r\n            auto_renewal: false,\r\n            reserve_price: '',\r\n            price_by_now: {\r\n                isActive: false,\r\n                value: ''\r\n            },\r\n            display_phone: false,\r\n        },\r\n        adParams: {\r\n            safety: [],\r\n            multimedia: [],\r\n            assistant: [],\r\n            exterior: [],\r\n            car_climate: [],\r\n            airbags: [],\r\n        }\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initFormFields,\r\n        validationSchema: createAdvrtSchema,\r\n        onSubmit\r\n    });\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        touched,\r\n        setTouched,\r\n        handleBlur,\r\n        handleSubmit\r\n    } = formik;\r\n    let {adParams} = values;\r\n\r\n    const getFormData = (data: CreateAncmntFields) => {\r\n        const form = new FormData();\r\n        const {\r\n            avalTime,\r\n            location,\r\n            files,\r\n            adParams,\r\n            auction\r\n        } = data;\r\n\r\n        form.set('ads_type_id', ancmntType.id.toString());\r\n        form.set('parent_categories_id', category.id.toString());\r\n        form.set('title', data.title);\r\n        form.set('safe_deal', Number(data.safe_deal).toString());\r\n        form.set('delivery', Number(data.delivery).toString());\r\n        form.set('exchange', Number(data.exchange).toString());\r\n        form.set('phone', data.phone);\r\n        form.set('description', data.description);\r\n        form.set('price', data.price);\r\n        form.set('currency_id', data.currency.id.toString());\r\n\r\n        if (subCategory.id) form.set('child_categories_id', subCategory.id.toString());\r\n\r\n        files.forEach(({file}: any) => file && form.append('files[]', file, file.name));\r\n\r\n        if (avalTime.isActive) {\r\n            avalTime.week.forEach((day, i) => (\r\n                form.append(`week[${i}]`, day.id.toString())\r\n            ));\r\n            form.set('start_time', avalTime.start_time.toString());\r\n            form.set('end_time', avalTime.end_time.toString());\r\n        }\r\n\r\n        for (const key in location) {\r\n            if (typeof location[key] === 'number') {\r\n                form.set(key, Number(location[key]).toString());\r\n            }\r\n        }\r\n\r\n        for (let key in adParams) {\r\n            const value = adParams[key];\r\n            if (value) {\r\n                if (typeof value === 'string') {\r\n                    const validKey = key.replace('_value', '');\r\n                    if (textFieldKeys.some(k => k === validKey)) {\r\n                        key = validKey;\r\n                    }\r\n                    form.set(key, value);\r\n                } else if (Array.isArray(value)) {\r\n                    value.forEach((value, i) => (\r\n                        form.append(`${key}[${i}]`, value.id))\r\n                    )\r\n                } else {\r\n                    if (value.id) {\r\n                        switch (key) {\r\n                            case 'models' :\r\n                                key = 'model';\r\n                                break;\r\n                            case 'colors' :\r\n                                key = 'color';\r\n                        }\r\n                        form.set(`${key}_id`, value.id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ancmntType.id !== 1) {\r\n            form.set('duration_id', auction.duration.id.toString());\r\n            form.set('display_phone', Number(auction.display_phone).toString());\r\n            if (ancmntType.id === 3) {\r\n                form.set('reserve_price', auction.reserve_price);\r\n                form.set('auto_renewal', Number(auction.auto_renewal).toString());\r\n                form.set('offer_the_price', Number(auction.offer_the_price).toString());\r\n                if (auction.price_by_now.isActive) {\r\n                    form.set('price_by_now', auction.price_by_now.value);\r\n                }\r\n            }\r\n        }\r\n\r\n        // for (const key of form.entries()) {\r\n        //     console.log(key[0] + '-' + key[1]);\r\n        // }\r\n\r\n        return form;\r\n    };\r\n\r\n    async function onSubmit(values: CreateAncmntFields) {\r\n        try {\r\n            if (activeStep !== 3) {\r\n                handleNextStep();\r\n            } else {\r\n                setValues({...values, isFetch: true});\r\n\r\n                const data = getFormData(values);\r\n                // await userAPI.createAdvrt(data);\r\n\r\n                setValues({...values, isFetch: false});\r\n\r\n                handleNextStep();\r\n            }\r\n        } catch (e) {\r\n            dispatch(setErrorMsgAction(e.message));\r\n            setValues({...values, isFetch: false});\r\n        }\r\n    }\r\n\r\n    const handleCheckboxChange = (valName) => ({target}) => {\r\n        const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price']\r\n            .some(fieldName => fieldName === valName);\r\n\r\n        if (isAuctionField) {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valName]: target.checked\r\n                }\r\n            });\r\n        } else if (valName === 'price_by_now') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    price_by_now: {\r\n                        isActive: target.checked,\r\n                        value: values.auction.price_by_now.value\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            setValues({...values, [valName]: target.checked});\r\n        }\r\n    };\r\n\r\n    const handleParamsCheckbox = (valueName, value) => () => {\r\n        if (adParams[valueName]) {\r\n            if (adParams[valueName].some(val => val.id === value.id)) {\r\n                adParams[valueName].map((val, index) => {\r\n                    if (val.id === value.id) {\r\n                        adParams[valueName].splice(index, 1);\r\n                    }\r\n                });\r\n            } else {\r\n                adParams = {\r\n                    ...adParams,\r\n                    [valueName]: [...adParams[valueName], value]\r\n                };\r\n            }\r\n        } else {\r\n            adParams = {...adParams, [valueName]: [value]};\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n        setAnchor(null);\r\n\r\n        if (valueName === 'currency') {\r\n            setValues({\r\n                ...values,\r\n                [valueName]: newValue\r\n            });\r\n        } else if (valueName === 'duration') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valueName]: newValue\r\n                }\r\n            });\r\n        } else {\r\n            // Reset sub props in values\r\n            Object.keys(newValue).map(key => {\r\n                if (adParams[key]) {\r\n                    adParams = {\r\n                        ...adParams,\r\n                        [key]: {id: null, name: 'Не выбрано'}\r\n                    };\r\n                }\r\n                setValues({\r\n                    ...values,\r\n                    adParams: {\r\n                        ...adParams,\r\n                        [valueName]: newValue\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleListItem = (valueName, value) => () => {\r\n        if (adParams[valueName] && adParams[valueName].id === value.id) {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: {id: null, name: 'Не выбрано'}\r\n            };\r\n        } else {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: value\r\n            };\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleInput = (valueName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valueName === 'price') {\r\n                setValues({...values, [valueName]: target.value})\r\n            } else {\r\n                adParams = {...adParams, [valueName]: target.value};\r\n                setValues({...values, adParams})\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleAuctionInput = (valName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valName === 'price_by_now') {\r\n                setValues({\r\n                    ...values,\r\n                    auction: {\r\n                        ...values.auction,\r\n                        [valName]: {\r\n                            isActive: true,\r\n                            value: target.value\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    auction: {\r\n                        ...values.auction,\r\n                        [valName]: target.value\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSwitch = (_, value) => {\r\n        setValues({\r\n            ...values,\r\n            avalTime: {\r\n                ...values.avalTime,\r\n                isActive: value\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleWeekDay = (value) => () => {\r\n        if (values.avalTime.week.some(val => val.id === value.id)) {\r\n            values.avalTime.week.map((val, index) => {\r\n                if (val.id === value.id) {\r\n                    values.avalTime.week.splice(index, 1)\r\n                }\r\n            });\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    week: [\r\n                        ...values.avalTime.week,\r\n                        value\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTime = ({target}) => {\r\n        let {value} = target;\r\n        const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\r\n        const isValid = regEx.test(value);\r\n\r\n        if (isValid) {\r\n            value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    [target.name]: value\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const setReqValues = () => {\r\n        const reqVals = {};\r\n        const reqParamsVals = {};\r\n\r\n        const adParamsVals = subCategory.data;\r\n\r\n        if (category.id === 11) {\r\n            reqVals['price'] = '0';\r\n        }\r\n\r\n        if (ancmntType.currency.length !== 0) {\r\n            reqVals['currency'] = ancmntType.currency.filter(cur => cur.name === 'sum')[0];\r\n        }\r\n\r\n        if (ancmntType.id !== 1 && ancmntType.expired.length !== 0) {\r\n            reqVals['auction'] = {\r\n                ...values.auction,\r\n                duration: ancmntType.expired[0]\r\n            };\r\n        }\r\n\r\n        Object.keys(adParamsVals).forEach(key => {\r\n            if (isRequired(key) && adParams[key] === undefined) {\r\n                if (key === 'manufacturer' && subCategory.id == 1) {\r\n                    reqParamsVals['models'] = {\r\n                        id: null,\r\n                        name: 'Не выбрано'\r\n                    };\r\n                }\r\n                if (Array.isArray(adParamsVals[key])) {\r\n                    reqParamsVals[key] = {\r\n                        id: null,\r\n                        name: 'Не выбрано'\r\n                    };\r\n                } else {\r\n                    reqParamsVals[key] = adParamsVals[key];\r\n                }\r\n            } else if (autoSelectKeys.some(k => k === key)) {\r\n                if (textFieldKeys.some(k => k === key)) {\r\n                    reqParamsVals[`${key}_value`] = '';\r\n                }\r\n                reqParamsVals[key] = adParamsVals[key][0];\r\n            }\r\n        });\r\n\r\n        setValues({\r\n            ...values,\r\n            ...reqVals,\r\n            adParams: {\r\n                ...adParams,\r\n                ...reqParamsVals\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window && window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setReqValues();\r\n    }, [category.id, lang]);\r\n\r\n    return (\r\n        <FormikProvider value={formik}>\r\n            <form onSubmit={handleSubmit}>\r\n                <AncmntAuctionForm\r\n                    {...props}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    setTouched={setTouched}\r\n                    values={values}\r\n                    setValues={setValues}\r\n                    locations={locations}\r\n                    handleBlur={handleBlur}\r\n                    handleTime={handleTime}\r\n                    handleInput={handleInput}\r\n                    handleSwitch={handleSwitch}\r\n                    handleWeekDay={handleWeekDay}\r\n                    handleListItem={handleListItem}\r\n                    handleMenuItem={handleMenuItem}\r\n                    handleAuctionInput={handleAuctionInput}\r\n                    handleParamsCheckbox={handleParamsCheckbox}\r\n                    handleCheckboxChange={handleCheckboxChange}\r\n                />\r\n            </form>\r\n        </FormikProvider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}