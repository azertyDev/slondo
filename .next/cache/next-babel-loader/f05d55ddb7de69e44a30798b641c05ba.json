{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(workerAuth),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchAuth);\n\nimport { userApi } from '../../api/api';\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { useCookies } from 'react-cookie';\nimport { FETCH_TOKEN, authActions } from \"../actions/authActions\"; // Auth saga\n\nvar fetchAuthBegin = authActions.fetchAuthBegin,\n    fetchAuthSuccess = authActions.fetchAuthSuccess,\n    fetchAuthFailure = authActions.fetchAuthFailure;\n\nfunction workerAuth(actions) {\n  var payload, _useCookies, _useCookies2, cookies, setCookies, _yield$call, token;\n\n  return _regeneratorRuntime.wrap(function workerAuth$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _s();\n\n          payload = actions.payload;\n          _useCookies = useCookies(['token']), _useCookies2 = _slicedToArray(_useCookies, 2), cookies = _useCookies2[0], setCookies = _useCookies2[1];\n          _context.prev = 3;\n          _context.next = 6;\n          return put(fetchAuthBegin());\n\n        case 6:\n          _context.next = 8;\n          return call(userApi.login, payload.phone, payload.password);\n\n        case 8:\n          _yield$call = _context.sent;\n          token = _yield$call.token;\n          _context.next = 12;\n          return put(fetchAuthSuccess({\n            token: token\n          }));\n\n        case 12:\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](3);\n          _context.next = 18;\n          return put(fetchAuthFailure(_context.t0.message));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[3, 14]]);\n}\n\n_s(workerAuth, \"lryTrLk8K0tBiGIsX3uhCr3AS7k=\", false, function () {\n  return [useCookies];\n});\n\nexport function watchAuth() {\n  return _regeneratorRuntime.wrap(function watchAuth$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(FETCH_TOKEN, workerAuth);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/sagas/authSaga.ts"],"names":["workerAuth","watchAuth","userApi","call","put","takeLatest","useCookies","FETCH_TOKEN","authActions","fetchAuthBegin","fetchAuthSuccess","fetchAuthFailure","actions","payload","cookies","setCookies","login","phone","password","token","message"],"mappings":";;;;;oDASUA,U;qDAaOC,S;;AAtBjB,SAAQC,OAAR,QAAsB,eAAtB;AACA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,wBAAvC,C,CAGA;;IACOC,c,GAAsDD,W,CAAtDC,c;IAAgBC,gB,GAAsCF,W,CAAtCE,gB;IAAkBC,gB,GAAoBH,W,CAApBG,gB;;AAEzC,SAAUX,UAAV,CAAqBY,OAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACWC,UAAAA,OADX,GACsBD,OADtB,CACWC,OADX;AAAA,wBAEkCP,UAAU,CAAC,CAAC,OAAD,CAAD,CAF5C,iDAEWQ,OAFX,oBAEoBC,UAFpB;AAAA;AAAA;AAKQ,iBAAMX,GAAG,CAACK,cAAc,EAAf,CAAT;;AALR;AAAA;AAMwB,iBAAMN,IAAI,CAACD,OAAO,CAACc,KAAT,EAAgBH,OAAO,CAACI,KAAxB,EAA+BJ,OAAO,CAACK,QAAvC,CAAV;;AANxB;AAAA;AAMeC,UAAAA,KANf,eAMeA,KANf;AAAA;AAOQ,iBAAMf,GAAG,CAACM,gBAAgB,CAAC;AAACS,YAAAA,KAAK,EAALA;AAAD,WAAD,CAAjB,CAAT;;AAPR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASQ,iBAAMf,GAAG,CAACO,gBAAgB,CAAC,YAAES,OAAH,CAAjB,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;GAAUpB,U;UAEwBM,U;;;AAWlC,OAAO,SAAUL,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMI,UAAU,CAACE,WAAD,EAAcP,UAAd,CAAhB;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {userApi} from '../../api/api'\r\nimport {call, put, takeLatest} from \"redux-saga/effects\"\r\nimport {useCookies} from 'react-cookie'\r\nimport {FETCH_TOKEN, authActions} from \"../actions/authActions\"\r\n\r\n\r\n// Auth saga\r\nconst {fetchAuthBegin, fetchAuthSuccess, fetchAuthFailure} = authActions;\r\n\r\nfunction* workerAuth(actions) {\r\n    const {payload} = actions;\r\n    const [cookies, setCookies] = useCookies(['token']);\r\n\r\n    try {\r\n        yield put(fetchAuthBegin());\r\n        const {token} = yield call(userApi.login, payload.phone, payload.password);\r\n        yield put(fetchAuthSuccess({token}));\r\n    } catch (e) {\r\n        yield put(fetchAuthFailure(e.message));\r\n    }\r\n}\r\n\r\nexport function* watchAuth() {\r\n    yield takeLatest(FETCH_TOKEN, workerAuth);\r\n}"]},"metadata":{},"sourceType":"module"}