{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userAPI } from '@src/api/api';\nvar initialState = {\n  isFetch: false,\n  error: null,\n  data: {\n    data: []\n  }\n}; // Async thunk\n\nexport var fetchCardData = createAsyncThunk('cardData/fetchCardData', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n    var itemsPerPage, page, type, rejectWithValue;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            itemsPerPage = _ref.itemsPerPage, page = _ref.page, type = _ref.type;\n            rejectWithValue = _ref2.rejectWithValue;\n            _context.prev = 2;\n            _context.next = 5;\n            return userAPI.getCardData(itemsPerPage, page, type);\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", rejectWithValue(_context.t0.message));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 8]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}()); // Slice\n\nvar cardDataSlice = createSlice({\n  name: 'cardData',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchCardData.pending, function (state) {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchCardData.fulfilled, function (state, action) {\n      state.isFetch = false;\n      state.data = action.payload;\n    });\n    builder.addCase(fetchCardData.rejected, function (state, action) {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport var cardDataReducer = cardDataSlice.reducer;","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/slices/cardDataSlice.ts"],"names":["createAsyncThunk","createSlice","userAPI","initialState","isFetch","error","data","fetchCardData","itemsPerPage","page","type","rejectWithValue","getCardData","message","cardDataSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","cardDataReducer","reducer"],"mappings":";;AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,OAAT,QAAwB,cAAxB;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,IAAI,EAAE;AACFA,IAAAA,IAAI,EAAE;AADJ;AAHW,CAArB,C,CAQA;;AACA,OAAO,IAAMC,aAAa,GAAGP,gBAAgB,CACzC,wBADyC;AAAA,uEAEzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAASQ,YAAAA,YAAT,QAASA,YAAT,EAAuBC,IAAvB,QAAuBA,IAAvB,EAA6BC,IAA7B,QAA6BA,IAA7B;AAAuCC,YAAAA,eAAvC,SAAuCA,eAAvC;AAAA;AAAA;AAAA,mBAEqBT,OAAO,CAACU,WAAR,CAAoBJ,YAApB,EAAkCC,IAAlC,EAAwCC,IAAxC,CAFrB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAIeC,eAAe,CAAC,YAAEE,OAAH,CAJ9B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFyC;;AAAA;AAAA;AAAA;AAAA,IAAtC,C,CAWP;;AACA,IAAMC,aAAa,GAAGb,WAAW,CAAC;AAC9Bc,EAAAA,IAAI,EAAE,UADwB;AAE9BZ,EAAAA,YAAY,EAAZA,YAF8B;AAG9Ba,EAAAA,QAAQ,EAAE,EAHoB;AAI9BC,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,aAAa,CAACa,OAA9B,EAAuC,UAACC,KAAD,EAAW;AAC9CA,MAAAA,KAAK,CAACjB,OAAN,GAAgB,IAAhB;AACAiB,MAAAA,KAAK,CAAChB,KAAN,GAAc,IAAd;AACH,KAHD;AAIAa,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,aAAa,CAACe,SAA9B,EAAyC,UAACD,KAAD,EAAQE,MAAR,EAAmB;AACxDF,MAAAA,KAAK,CAACjB,OAAN,GAAgB,KAAhB;AACAiB,MAAAA,KAAK,CAACf,IAAN,GAAaiB,MAAM,CAACC,OAApB;AACH,KAHD;AAIAN,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,aAAa,CAACkB,QAA9B,EAAwC,UAACJ,KAAD,EAAQE,MAAR,EAAmB;AACvDF,MAAAA,KAAK,CAACjB,OAAN,GAAgB,KAAhB;AACAiB,MAAAA,KAAK,CAAChB,KAAN,GAAckB,MAAM,CAACC,OAArB;AACH,KAHD;AAIH;AAjB6B,CAAD,CAAjC;AAoBA,OAAO,IAAME,eAAe,GAAGZ,aAAa,CAACa,OAAtC","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { userAPI } from '@src/api/api';\r\nimport { CardDataTypes } from '@root/types/CardDataTypes';\r\n\r\nconst initialState = {\r\n    isFetch: false,\r\n    error: null,\r\n    data: {\r\n        data: [],\r\n    },\r\n};\r\n\r\n// Async thunk\r\nexport const fetchCardData = createAsyncThunk<never, CardDataTypes>(\r\n    'cardData/fetchCardData',\r\n    async ({ itemsPerPage, page, type }, { rejectWithValue }) => {\r\n        try {\r\n            return await userAPI.getCardData(itemsPerPage, page, type);\r\n        } catch (e) {\r\n            return rejectWithValue(e.message);\r\n        }\r\n    },\r\n);\r\n\r\n// Slice\r\nconst cardDataSlice = createSlice({\r\n    name: 'cardData',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchCardData.pending, (state) => {\r\n            state.isFetch = true;\r\n            state.error = null;\r\n        });\r\n        builder.addCase(fetchCardData.fulfilled, (state, action) => {\r\n            state.isFetch = false;\r\n            state.data = action.payload;\r\n        });\r\n        builder.addCase(fetchCardData.rejected, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = action.payload;\r\n        });\r\n    },\r\n});\r\n\r\nexport const cardDataReducer = cardDataSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}