{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { CustomMenu } from \"@src/components/elements/custom_menu/CustomMenu\";\nimport { useStyles } from './useStyles';\nexport const AdvrtSettingsBlock = props => {\n  const {\n    data,\n    values,\n    onBlur,\n    handleClickMenuItem\n  } = props;\n  const dataKeys = Object.keys(data);\n  const classes = useStyles();\n  return __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    spacing: 1,\n    className: classes.root\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"h5\"\n  }, __jsx(\"strong\", null, \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"))), dataKeys.map(key => {\n    if (key !== 'id' && key !== 'name' && data[key].length) {\n      const newData = key !== 'adsParams' ? [{\n        id: 0,\n        name: 'Выбрать'\n      }, ...data[key]] : data[key]; // console.log(values['type'])\n\n      return __jsx(React.Fragment, null, __jsx(Grid, {\n        key: key,\n        item: true,\n        xs: 12,\n        sm: 4\n      }, __jsx(Typography, {\n        variant: \"subtitle1\"\n      }, __jsx(\"strong\", null, key)), __jsx(CustomMenu, {\n        valueName: values[key] ? values[key].name : 'Выбрать',\n        items: newData,\n        onBlur: onBlur,\n        onClick: handleClickMenuItem(key)\n      })), values['type'] && values['type'].sub_type && __jsx(Grid, {\n        key: key,\n        item: true,\n        xs: 12,\n        sm: 4\n      }, __jsx(Typography, {\n        variant: \"subtitle1\"\n      }, __jsx(\"strong\", null, 'sub_type')), __jsx(CustomMenu, {\n        valueName: values['sub_type'] ? values['sub_type'].name : 'Выбрать',\n        items: values['type'].sub_type,\n        onBlur: onBlur,\n        onClick: handleClickMenuItem('sub_type')\n      })));\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advertisement/advrtFormContent/advrt_settings_block/AdvrtSettingsBlock.tsx"],"names":["React","Grid","Typography","CustomMenu","useStyles","AdvrtSettingsBlock","props","data","values","onBlur","handleClickMenuItem","dataKeys","Object","keys","classes","root","map","key","length","newData","id","name","sub_type"],"mappings":";AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,mBAA/B;AACA,SAAQC,UAAR,QAAyB,iDAAzB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAO,MAAMC,kBAA2B,GAAIC,KAAD,IAAW;AAClD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,MAAP;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,MAA8CJ,KAApD;AACA,QAAMK,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,IAAZ,CAAjB;AAEA,QAAMO,OAAO,GAAGV,SAAS,EAAzB;AACA,SACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,OAAO,EAAE,CAAtC;AAAyC,IAAA,SAAS,EAAEU,OAAO,CAACC;AAA5D,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE;AAAf,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KACI,4IADJ,CADJ,CADJ,EAOQJ,QAAQ,CAACK,GAAT,CAAcC,GAAD,IAAS;AAClB,QAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,MAAxB,IAAkCV,IAAI,CAACU,GAAD,CAAJ,CAAUC,MAAhD,EAAwD;AACpD,YAAMC,OAAO,GAAGF,GAAG,KAAK,WAAR,GAAsB,CAAC;AAACG,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE;AAAd,OAAD,EAA2B,GAAGd,IAAI,CAACU,GAAD,CAAlC,CAAtB,GAAiEV,IAAI,CAACU,GAAD,CAArF,CADoD,CAEpD;;AACA,aACI,4BACI,MAAC,IAAD;AACI,QAAA,GAAG,EAAEA,GADT;AAEI,QAAA,IAAI,MAFR;AAGI,QAAA,EAAE,EAAE,EAHR;AAII,QAAA,EAAE,EAAE;AAJR,SAMI,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,SACI,sBAASA,GAAT,CADJ,CANJ,EASI,MAAC,UAAD;AACI,QAAA,SAAS,EAAET,MAAM,CAACS,GAAD,CAAN,GAAcT,MAAM,CAACS,GAAD,CAAN,CAAYI,IAA1B,GAAiC,SADhD;AAEI,QAAA,KAAK,EAAEF,OAFX;AAGI,QAAA,MAAM,EAAEV,MAHZ;AAII,QAAA,OAAO,EAAEC,mBAAmB,CAACO,GAAD;AAJhC,QATJ,CADJ,EAkBQT,MAAM,CAAC,MAAD,CAAN,IAAkBA,MAAM,CAAC,MAAD,CAAN,CAAec,QAAjC,IACI,MAAC,IAAD;AACI,QAAA,GAAG,EAAEL,GADT;AAEI,QAAA,IAAI,MAFR;AAGI,QAAA,EAAE,EAAE,EAHR;AAII,QAAA,EAAE,EAAE;AAJR,SAMI,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,SACI,sBAAS,UAAT,CADJ,CANJ,EASI,MAAC,UAAD;AACI,QAAA,SAAS,EAAET,MAAM,CAAC,UAAD,CAAN,GAAqBA,MAAM,CAAC,UAAD,CAAN,CAAmBa,IAAxC,GAA+C,SAD9D;AAEI,QAAA,KAAK,EAAEb,MAAM,CAAC,MAAD,CAAN,CAAec,QAF1B;AAGI,QAAA,MAAM,EAAEb,MAHZ;AAII,QAAA,OAAO,EAAEC,mBAAmB,CAAC,UAAD;AAJhC,QATJ,CAnBZ,CADJ;AAwCH;AACJ,GA7CD,CAPR,CADJ;AAyDH,CA9DM","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport {CustomMenu} from \"@src/components/elements/custom_menu/CustomMenu\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const AdvrtSettingsBlock: FC<any> = (props) => {\r\n    const {data, values, onBlur, handleClickMenuItem} = props;\r\n    const dataKeys = Object.keys(data);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item container xs={12} spacing={1} className={classes.root}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h5\">\r\n                    <strong>Настройки объявления</strong>\r\n                </Typography>\r\n            </Grid>\r\n            {\r\n                dataKeys.map((key) => {\r\n                    if (key !== 'id' && key !== 'name' && data[key].length) {\r\n                        const newData = key !== 'adsParams' ? [{id: 0, name: 'Выбрать'}, ...data[key]] : data[key];\r\n                        // console.log(values['type'])\r\n                        return (\r\n                            <>\r\n                                <Grid\r\n                                    key={key}\r\n                                    item\r\n                                    xs={12}\r\n                                    sm={4}\r\n                                >\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        <strong>{key}</strong>\r\n                                    </Typography>\r\n                                    <CustomMenu\r\n                                        valueName={values[key] ? values[key].name : 'Выбрать'}\r\n                                        items={newData}\r\n                                        onBlur={onBlur}\r\n                                        onClick={handleClickMenuItem(key)}\r\n                                    />\r\n                                </Grid>\r\n                                {\r\n                                    values['type'] && values['type'].sub_type && (\r\n                                        <Grid\r\n                                            key={key}\r\n                                            item\r\n                                            xs={12}\r\n                                            sm={4}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\">\r\n                                                <strong>{'sub_type'}</strong>\r\n                                            </Typography>\r\n                                            <CustomMenu\r\n                                                valueName={values['sub_type'] ? values['sub_type'].name : 'Выбрать'}\r\n                                                items={values['type'].sub_type}\r\n                                                onBlur={onBlur}\r\n                                                onClick={handleClickMenuItem('sub_type')}\r\n                                            />\r\n                                        </Grid>\r\n                                    )\r\n                                }\r\n                            </>\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}