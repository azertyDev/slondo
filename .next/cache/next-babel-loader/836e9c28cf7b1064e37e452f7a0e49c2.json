{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Link } from '@root/i18n';\nimport { CardItem } from '@src/components/elements/card/Card';\nimport { transformTitle } from '@root/src/helpers';\nimport { useStyles } from './useStyles';\nexport const CustomGridView = props => {\n  const {\n    isFetch,\n    ancmntType,\n    list,\n    t\n  } = props;\n  console.log(list);\n  const classes = useStyles(props);\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, list.map((item, index) => {\n    const translatedTitle = transformTitle(item.title);\n    return __jsx(Grid, {\n      key: index,\n      xs: 6,\n      sm: 4,\n      lg: 3,\n      item: true\n    }, __jsx(Link, {\n      href: `/obyavlenie/${translatedTitle}-${item.id}`\n    }, __jsx(\"a\", null, __jsx(CardItem, _extends({}, item, {\n      isFetch: isFetch,\n      cardType: t(ancmntType)\n    })))));\n  }));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/custom_card_view/custom_grid_view/CustomGridView.tsx"],"names":["React","Grid","Link","CardItem","transformTitle","useStyles","CustomGridView","props","isFetch","ancmntType","list","t","console","log","classes","map","item","index","translatedTitle","title","id"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,SAAQC,IAAR,QAAmB,YAAnB;AACA,SAAQC,QAAR,QAAuB,oCAAvB;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACrC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA;AAA5B,MAAiCJ,KAAvC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,QAAMI,OAAO,GAAGT,SAAS,CAACE,KAAD,CAAzB;AACA,SACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE;AAAzB,KACKG,IAAI,CAACK,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,UAAMC,eAAe,GAAGd,cAAc,CAACY,IAAI,CAACG,KAAN,CAAtC;AACA,WACI,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEF,KAAX;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAgC,MAAA,EAAE,EAAE,CAApC;AAAuC,MAAA,IAAI;AAA3C,OACI,MAAC,IAAD;AACI,MAAA,IAAI,EAAG,eAAcC,eAAgB,IAAGF,IAAI,CAACI,EAAG;AADpD,OAGI,iBACI,MAAC,QAAD,eACQJ,IADR;AAEI,MAAA,OAAO,EAAER,OAFb;AAGI,MAAA,QAAQ,EAAEG,CAAC,CAACF,UAAD;AAHf,OADJ,CAHJ,CADJ,CADJ;AAeH,GAjBA,CADL,CADJ;AAsBH,CA3BM","sourcesContent":["import React from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport {Link} from '@root/i18n';\r\nimport {CardItem} from '@src/components/elements/card/Card';\r\nimport {transformTitle} from '@root/src/helpers';\r\nimport {useStyles} from './useStyles';\r\n\r\nexport const CustomGridView = (props) => {\r\n    const {isFetch, ancmntType, list, t} = props;\r\n    console.log(list)\r\n\r\n    const classes = useStyles(props);\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {list.map((item, index) => {\r\n                const translatedTitle = transformTitle(item.title);\r\n                return (\r\n                    <Grid key={index} xs={6} sm={4} lg={3} item>\r\n                        <Link\r\n                            href={`/obyavlenie/${translatedTitle}-${item.id}`}\r\n                        >\r\n                            <a>\r\n                                <CardItem\r\n                                    {...item}\r\n                                    isFetch={isFetch}\r\n                                    cardType={t(ancmntType)}\r\n                                />\r\n                            </a>\r\n                        </Link>\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </Grid>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}