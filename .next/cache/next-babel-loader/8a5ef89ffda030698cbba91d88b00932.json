{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userAPI } from \"@src/api/api\";\nvar initCategory = {\n  id: null,\n  name: '',\n  image: {\n    id: null,\n    url: {\n      \"default\": ''\n    }\n  },\n  icon: {\n    id: null,\n    url: {\n      \"default\": ''\n    }\n  },\n  parents: [],\n  model: [],\n  has_auction: null\n};\nvar initCategories = Array.from({\n  length: 11\n}).map(function () {\n  return initCategory;\n});\nvar initialState = {\n  isFetch: false,\n  error: null,\n  list: initCategories\n}; // Async thunk\n\nexport var fetchCategories = createAsyncThunk('categories/fetchCategories', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(lang, _ref) {\n    var rejectWithValue;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            rejectWithValue = _ref.rejectWithValue;\n            _context.prev = 1;\n            _context.next = 4;\n            return userAPI.getCategories(lang);\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", rejectWithValue(_context.t0.message));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 7]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nvar advertisementSlice = createSlice({\n  name: 'categories',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchCategories.pending, function (state) {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchCategories.fulfilled, function (state, action) {\n      state.isFetch = false;\n      state.error = null;\n      state.list = action.payload;\n    });\n    builder.addCase(fetchCategories.rejected, function (state, action) {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport var categoriesReducer = advertisementSlice.reducer;","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/slices/categoriesSlice.ts"],"names":["createAsyncThunk","createSlice","userAPI","initCategory","id","name","image","url","icon","parents","model","has_auction","initCategories","Array","from","length","map","initialState","isFetch","error","list","fetchCategories","lang","rejectWithValue","getCategories","message","advertisementSlice","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","categoriesReducer","reducer"],"mappings":";;AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AAEA,SAAQC,OAAR,QAAsB,cAAtB;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,EAAE,EAAE,IADa;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,KAAK,EAAE;AACHF,IAAAA,EAAE,EAAE,IADD;AAEHG,IAAAA,GAAG,EAAE;AACD,iBAAS;AADR;AAFF,GAHU;AASjBC,EAAAA,IAAI,EAAE;AACFJ,IAAAA,EAAE,EAAE,IADF;AAEFG,IAAAA,GAAG,EAAE;AACD,iBAAS;AADR;AAFH,GATW;AAejBE,EAAAA,OAAO,EAAE,EAfQ;AAgBjBC,EAAAA,KAAK,EAAE,EAhBU;AAiBjBC,EAAAA,WAAW,EAAE;AAjBI,CAArB;AAoBA,IAAMC,cAA8B,GAAGC,KAAK,CAACC,IAAN,CAAW;AAACC,EAAAA,MAAM,EAAE;AAAT,CAAX,EAAyBC,GAAzB,CAA6B;AAAA,SAAMb,YAAN;AAAA,CAA7B,CAAvC;AAEA,IAAMc,YAAwB,GAAG;AAC7BC,EAAAA,OAAO,EAAE,KADoB;AAE7BC,EAAAA,KAAK,EAAE,IAFsB;AAG7BC,EAAAA,IAAI,EAAER;AAHuB,CAAjC,C,CAMA;;AACA,OAAO,IAAMS,eAAe,GAAGrB,gBAAgB,CAC3C,4BAD2C;AAAA,uEAE3C,iBAAOsB,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAcC,YAAAA,eAAd,QAAcA,eAAd;AAAA;AAAA;AAAA,mBAEqBrB,OAAO,CAACsB,aAAR,CAAsBF,IAAtB,CAFrB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAIeC,eAAe,CAAC,YAAEE,OAAH,CAJ9B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAF2C;;AAAA;AAAA;AAAA;AAAA,IAAxC;AAWP,IAAMC,kBAAkB,GAAGzB,WAAW,CAAC;AACnCI,EAAAA,IAAI,EAAE,YAD6B;AAEnCY,EAAAA,YAAY,EAAZA,YAFmC;AAGnCU,EAAAA,QAAQ,EAAE,EAHyB;AAInCC,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBT,eAAe,CAACU,OAAhC,EAAyC,UAACC,KAAD,EAAW;AAChDA,MAAAA,KAAK,CAACd,OAAN,GAAgB,IAAhB;AACAc,MAAAA,KAAK,CAACb,KAAN,GAAc,IAAd;AACH,KAHD;AAIAU,IAAAA,OAAO,CAACC,OAAR,CAAgBT,eAAe,CAACY,SAAhC,EAA2C,UAACD,KAAD,EAAQE,MAAR,EAAmB;AAC1DF,MAAAA,KAAK,CAACd,OAAN,GAAgB,KAAhB;AACAc,MAAAA,KAAK,CAACb,KAAN,GAAc,IAAd;AACAa,MAAAA,KAAK,CAACZ,IAAN,GAAac,MAAM,CAACC,OAApB;AACH,KAJD;AAKAN,IAAAA,OAAO,CAACC,OAAR,CAAgBT,eAAe,CAACe,QAAhC,EAA0C,UAACJ,KAAD,EAAQE,MAAR,EAAmB;AACzDF,MAAAA,KAAK,CAACd,OAAN,GAAgB,KAAhB;AACAc,MAAAA,KAAK,CAACb,KAAN,GAAce,MAAM,CAACC,OAArB;AACH,KAHD;AAIH;AAlBkC,CAAD,CAAtC;AAqBA,OAAO,IAAME,iBAAiB,GAAGX,kBAAkB,CAACY,OAA7C","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {Categories, CategoryType} from '@root/interfaces/Categories';\r\nimport {userAPI} from \"@src/api/api\";\r\n\r\n\r\nconst initCategory = {\r\n    id: null,\r\n    name: '',\r\n    image: {\r\n        id: null,\r\n        url: {\r\n            default: ''\r\n        }\r\n    },\r\n    icon: {\r\n        id: null,\r\n        url: {\r\n            default: ''\r\n        }\r\n    },\r\n    parents: [],\r\n    model: [],\r\n    has_auction: null\r\n};\r\n\r\nconst initCategories: CategoryType[] = Array.from({length: 11}).map(() => initCategory);\r\n\r\nconst initialState: Categories = {\r\n    isFetch: false,\r\n    error: null,\r\n    list: initCategories,\r\n};\r\n\r\n// Async thunk\r\nexport const fetchCategories = createAsyncThunk<CategoryType[], string>(\r\n    'categories/fetchCategories',\r\n    async (lang, {rejectWithValue}) => {\r\n        try {\r\n            return await userAPI.getCategories(lang);\r\n        } catch (e) {\r\n            return rejectWithValue(e.message);\r\n        }\r\n    }\r\n);\r\n\r\nconst advertisementSlice = createSlice({\r\n    name: 'categories',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchCategories.pending, (state) => {\r\n            state.isFetch = true;\r\n            state.error = null;\r\n        });\r\n        builder.addCase(fetchCategories.fulfilled, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = null;\r\n            state.list = action.payload;\r\n        });\r\n        builder.addCase(fetchCategories.rejected, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = action.payload;\r\n        });\r\n    }\r\n});\r\n\r\nexport const categoriesReducer = advertisementSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}