{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { AncmntsTabs } from './AncmntsTabs';\nimport { ITEMS_PER_PAGE } from '@src/constants';\nimport { userAPI } from '@src/api/api';\nimport { i18n } from '@root/i18n';\nimport { initCards } from '../ancmnts_slider/AncmntsSliderContainer';\nimport { setErrorMsgAction } from \"@src/redux/slices/errorSlice\";\nimport { useDispatch } from \"react-redux\";\nconst initCardData = {\n  isFetch: false,\n  isShowMoreFetch: false,\n  error: null,\n  data: {\n    cards: initCards,\n    total: null\n  }\n};\nexport const AncmntsTabsContainer = props => {\n  const dispatch = useDispatch();\n  const lang = i18n.language;\n  const {\n    0: tabValue,\n    1: setTabValue\n  } = useState(0);\n  const {\n    0: ancmntCurrentPage,\n    1: setAncmntCurrentPage\n  } = useState(1);\n  const {\n    0: auctionCurrentPage,\n    1: setAuctionCurrentPage\n  } = useState(1);\n  const {\n    0: ancmntCardData,\n    1: setAncmntCardData\n  } = useState(initCardData);\n  const {\n    0: auctionCardData,\n    1: setAuctionCardData\n  } = useState(initCardData);\n\n  const setCardData = async (state, setState, currentPage, type, isShowMore = false) => {\n    try {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        isFetch: !isShowMore,\n        isShowMoreFetch: true\n      }));\n      const newData = await userAPI.getCards(ITEMS_PER_PAGE, currentPage, type, lang);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        isFetch: false,\n        isShowMoreFetch: false,\n        data: {\n          cards: isShowMore ? [...state.data.cards, ...newData.data] : newData.data,\n          total: newData.total\n        }\n      }));\n    } catch (e) {\n      dispatch(setErrorMsgAction(e.message));\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        error: e.message\n      }));\n    }\n  };\n\n  const handleTabChange = (_, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const handleShowMore = () => {\n    if (tabValue === 0) {\n      const nextAncmntPage = ancmntCurrentPage + 1;\n      setAncmntCurrentPage(nextAncmntPage);\n      setCardData(ancmntCardData, setAncmntCardData, nextAncmntPage, 'ad', true);\n    } else {\n      const nextAuctionPage = auctionCurrentPage + 1;\n      setAuctionCurrentPage(nextAuctionPage);\n      setCardData(auctionCardData, setAuctionCardData, nextAuctionPage, 'lot', true);\n    }\n  };\n\n  useEffect(() => {\n    ancmntCurrentPage !== 1 && setAncmntCurrentPage(1);\n    auctionCurrentPage !== 1 && setAuctionCurrentPage(1);\n    setCardData(ancmntCardData, setAncmntCardData, 1, 'ad');\n    setCardData(auctionCardData, setAuctionCardData, 1, 'lot');\n  }, [lang]);\n  return __jsx(AncmntsTabs, {\n    t: props.t,\n    tabValue: tabValue,\n    ancmntCardData: ancmntCardData,\n    auctionCardData: auctionCardData,\n    handleTabChange: handleTabChange,\n    handleShowMore: handleShowMore\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/main/ancmnts_tabs/AncmntsTabsContainer.tsx"],"names":["React","useEffect","useState","AncmntsTabs","ITEMS_PER_PAGE","userAPI","i18n","initCards","setErrorMsgAction","useDispatch","initCardData","isFetch","isShowMoreFetch","error","data","cards","total","AncmntsTabsContainer","props","dispatch","lang","language","tabValue","setTabValue","ancmntCurrentPage","setAncmntCurrentPage","auctionCurrentPage","setAuctionCurrentPage","ancmntCardData","setAncmntCardData","auctionCardData","setAuctionCardData","setCardData","state","setState","currentPage","type","isShowMore","newData","getCards","e","message","handleTabChange","_","newValue","handleShowMore","nextAncmntPage","nextAuctionPage","t"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {WithT} from 'i18next';\r\nimport {AncmntsTabs} from './AncmntsTabs';\r\nimport {ITEMS_PER_PAGE} from '@src/constants';\r\nimport {userAPI} from '@src/api/api';\r\nimport {i18n} from '@root/i18n';\r\nimport {CardData} from '@root/interfaces/CardData';\r\nimport {initCards} from '../ancmnts_slider/AncmntsSliderContainer';\r\nimport {setErrorMsgAction} from \"@src/redux/slices/errorSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nconst initCardData: CardData = {\r\n    isFetch: false,\r\n    isShowMoreFetch: false,\r\n    error: null,\r\n    data: {\r\n        cards: initCards,\r\n        total: null,\r\n    }\r\n};\r\n\r\nexport const AncmntsTabsContainer: FC<WithT> = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const lang = i18n.language;\r\n\r\n    const [tabValue, setTabValue] = useState(0);\r\n\r\n    const [ancmntCurrentPage, setAncmntCurrentPage] = useState(1);\r\n    const [auctionCurrentPage, setAuctionCurrentPage] = useState(1);\r\n\r\n    const [ancmntCardData, setAncmntCardData] = useState(initCardData);\r\n    const [auctionCardData, setAuctionCardData] = useState(initCardData);\r\n\r\n    const setCardData = async (state, setState, currentPage, type, isShowMore = false) => {\r\n        try {\r\n            setState({\r\n                ...state,\r\n                isFetch: !isShowMore,\r\n                isShowMoreFetch: true,\r\n            });\r\n\r\n            const newData = await userAPI.getCards(ITEMS_PER_PAGE, currentPage, type, lang);\r\n\r\n            setState({\r\n                ...state,\r\n                isFetch: false,\r\n                isShowMoreFetch: false,\r\n                data: {\r\n                    cards: isShowMore ? [...state.data.cards, ...newData.data] : newData.data,\r\n                    total: newData.total,\r\n                }\r\n            });\r\n        } catch (e) {\r\n            dispatch(setErrorMsgAction(e.message));\r\n            setState({\r\n                ...state,\r\n                error: e.message,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (_, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n        if (tabValue === 0) {\r\n            const nextAncmntPage = ancmntCurrentPage + 1;\r\n            setAncmntCurrentPage(nextAncmntPage);\r\n            setCardData(ancmntCardData, setAncmntCardData, nextAncmntPage, 'ad', true);\r\n        } else {\r\n            const nextAuctionPage = auctionCurrentPage + 1;\r\n            setAuctionCurrentPage(nextAuctionPage);\r\n            setCardData(auctionCardData, setAuctionCardData, nextAuctionPage, 'lot', true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        ancmntCurrentPage !== 1 && setAncmntCurrentPage(1);\r\n        auctionCurrentPage !== 1 && setAuctionCurrentPage(1);\r\n        setCardData(ancmntCardData, setAncmntCardData, 1, 'ad');\r\n        setCardData(auctionCardData, setAuctionCardData, 1, 'lot');\r\n    }, [lang]);\r\n\r\n    return (\r\n        <AncmntsTabs\r\n            t={props.t}\r\n            tabValue={tabValue}\r\n            ancmntCardData={ancmntCardData}\r\n            auctionCardData={auctionCardData}\r\n            handleTabChange={handleTabChange}\r\n            handleShowMore={handleShowMore}\r\n        />\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}