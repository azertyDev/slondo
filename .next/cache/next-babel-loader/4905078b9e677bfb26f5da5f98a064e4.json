{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Cookies from 'universal-cookie';\nimport { i18n, withTranslation } from '@root/i18n';\nimport { Container, Modal, Typography } from '@material-ui/core';\nimport TopContainer from \"./top/TopContainer\";\nimport BottomHeader from './bottom/Bottom';\nimport { AuthRegPage } from \"./auth_reg/AuthRegPage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIsAuthAction, setIsAuthModalOpen } from '@src/redux/slices/authRegSlice';\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { fetchCategories } from \"@src/redux/slices/categoriesSlice\";\nimport { fetchLocations } from \"@src/redux/slices/locationsSlice\";\nimport { useStyles } from './useStyles';\n\nvar Header = function Header(props) {\n  _s();\n\n  var t = props.t;\n  var cookies = new Cookies();\n  var isTokenExst = !!cookies.get('token');\n  var lang = i18n.language;\n\n  var _useSelector = useSelector(function (store) {\n    return store.auth;\n  }),\n      isAuth = _useSelector.isAuth,\n      isAuthModalOpen = _useSelector.isAuthModalOpen;\n\n  var dispatch = useDispatch();\n\n  var handleModal = function handleModal(value) {\n    return function () {\n      dispatch(setIsAuthModalOpen(value));\n    };\n  };\n\n  useEffect(function () {\n    dispatch(fetchCategories(lang));\n    dispatch(fetchLocations(lang));\n  }, [lang]);\n  useEffect(function () {\n    dispatch(setIsAuthAction(isTokenExst));\n  }, [isTokenExst]);\n  var classes = useStyles();\n  return __jsx(\"header\", {\n    className: classes.root,\n    id: \"back-to-top-anchor\"\n  }, __jsx(Container, {\n    maxWidth: \"xl\"\n  }, __jsx(\"div\", {\n    className: classes.topWrapper\n  }, __jsx(TopContainer, {\n    t: t,\n    handleOpenModal: handleModal(true)\n  })), __jsx(\"div\", null, __jsx(BottomHeader, {\n    t: t,\n    isAuth: isAuth,\n    handleOpenModal: handleModal(true)\n  }))), __jsx(Modal, {\n    open: isAuthModalOpen,\n    onClose: handleModal(false),\n    className: classes.modalDialog\n  }, __jsx(React.Fragment, null, isAuth ? __jsx(\"div\", {\n    style: {\n      width: '200px',\n      height: '80px',\n      backgroundColor: '#fff'\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\"\n  }, \"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0441\\u0430\\u0439\\u0442\\u0430?\"), __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    }\n  }, __jsx(ButtonComponent, {\n    onClick: handleModal(false)\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"), __jsx(ButtonComponent, null, \"\\u0412\\u044B\\u0439\\u0442\\u0438\"))) : __jsx(AuthRegPage, {\n    t: t,\n    handleCloseModal: handleModal(false)\n  }))));\n};\n\n_s(Header, \"9LbYAI9+wNQw07KVmjFCVbgcyMo=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = Header;\nexport default withTranslation(['header', 'auth_reg', 'common'])(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/header/Header.tsx"],"names":["React","useEffect","Cookies","i18n","withTranslation","Container","Modal","Typography","TopContainer","BottomHeader","AuthRegPage","useDispatch","useSelector","setIsAuthAction","setIsAuthModalOpen","ButtonComponent","fetchCategories","fetchLocations","useStyles","Header","props","t","cookies","isTokenExst","get","lang","language","store","auth","isAuth","isAuthModalOpen","dispatch","handleModal","value","classes","root","topWrapper","modalDialog","width","height","backgroundColor","display"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport {i18n, withTranslation} from '@root/i18n';\r\nimport {Container, Modal, Typography} from '@material-ui/core';\r\nimport TopContainer from \"./top/TopContainer\";\r\nimport BottomHeader from './bottom/Bottom';\r\nimport {AuthRegPage} from \"./auth_reg/AuthRegPage\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setIsAuthAction, setIsAuthModalOpen} from '@src/redux/slices/authRegSlice';\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport {fetchCategories} from \"@src/redux/slices/categoriesSlice\";\r\nimport {fetchLocations} from \"@src/redux/slices/locationsSlice\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nconst Header = (props) => {\r\n    const {t} = props;\r\n\r\n    const cookies = new Cookies();\r\n    const isTokenExst = !!cookies.get('token');\r\n\r\n    const lang = i18n.language;\r\n\r\n    const {isAuth, isAuthModalOpen} = useSelector((store: RootState) => store.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleModal = (value) => () => {\r\n        dispatch(setIsAuthModalOpen(value));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCategories(lang));\r\n        dispatch(fetchLocations(lang));\r\n    }, [lang]);\r\n\r\n    useEffect(() => {\r\n        dispatch(setIsAuthAction(isTokenExst));\r\n    }, [isTokenExst]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <header className={classes.root} id='back-to-top-anchor'>\r\n            <Container maxWidth=\"xl\">\r\n                <div className={classes.topWrapper}>\r\n                    <TopContainer\r\n                        t={t}\r\n                        handleOpenModal={handleModal(true)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <BottomHeader\r\n                        t={t}\r\n                        isAuth={isAuth}\r\n                        handleOpenModal={handleModal(true)}\r\n                    />\r\n                </div>\r\n            </Container>\r\n            <Modal\r\n                open={isAuthModalOpen}\r\n                onClose={handleModal(false)}\r\n                className={classes.modalDialog}\r\n            >\r\n                <>\r\n                    {isAuth\r\n                        ? <div style={{width: '200px', height: '80px', backgroundColor: '#fff'}}>\r\n                            <Typography variant='h5'>Выйти из сайта?</Typography>\r\n                            <div style={{display: 'flex'}}>\r\n                                <ButtonComponent onClick={handleModal(false)}>Отмена</ButtonComponent>\r\n                                <ButtonComponent>Выйти</ButtonComponent>\r\n                            </div>\r\n                        </div>\r\n                        : <AuthRegPage\r\n                            t={t}\r\n                            handleCloseModal={handleModal(false)}\r\n                        />}\r\n                </>\r\n            </Modal>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default withTranslation(['header', 'auth_reg', 'common'])(Header);\r\n"]},"metadata":{},"sourceType":"module"}