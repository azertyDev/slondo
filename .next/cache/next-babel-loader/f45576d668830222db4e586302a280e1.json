{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_TOKEN_BEGIN, FETCH_TOKEN_SUCCESS, FETCH_TOKEN_FAILURE, SET_IS_AUTH } from '../actions/authActions';\nvar initialState = {\n  isFetch: false,\n  isAuth: false,\n  error: null\n};\nexport var authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_IS_AUTH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuth: action.payload\n      });\n\n    case FETCH_TOKEN_BEGIN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFetch: true,\n        error: null\n      });\n\n    case FETCH_TOKEN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFetch: false\n      }, action.payload);\n\n    case FETCH_TOKEN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFetch: false,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/reducers/authReducer.ts"],"names":["FETCH_TOKEN_BEGIN","FETCH_TOKEN_SUCCESS","FETCH_TOKEN_FAILURE","SET_IS_AUTH","initialState","isFetch","isAuth","error","authReducer","state","action","type","payload"],"mappings":";;;;;;AAEA,SACIA,iBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,WAJJ,QAKO,wBALP;AAaA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,MAAM,EAAE,KAFS;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAmE;AAAA,MAAlEC,KAAkE,uEAA/CL,YAA+C;AAAA,MAAjCM,MAAiC;;AAC1F,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAL;AACI,6CACOM,KADP;AAEIH,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAFnB;;AAIJ,SAAKZ,iBAAL;AACI,6CACOS,KADP;AAEIJ,QAAAA,OAAO,EAAE,IAFb;AAGIE,QAAAA,KAAK,EAAE;AAHX;;AAKJ,SAAKN,mBAAL;AACI,6CACOQ,KADP;AAEIJ,QAAAA,OAAO,EAAE;AAFb,SAGOK,MAAM,CAACE,OAHd;;AAKJ,SAAKV,mBAAL;AACI,6CACOO,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIE,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAHlB;;AAKJ;AACI,aAAOH,KAAP;AAzBR;AA2BH,CA5BM","sourcesContent":["import {AnyAction} from \"redux\"\r\nimport {HYDRATE} from \"next-redux-wrapper\"\r\nimport {\r\n    FETCH_TOKEN_BEGIN,\r\n    FETCH_TOKEN_SUCCESS,\r\n    FETCH_TOKEN_FAILURE,\r\n    SET_IS_AUTH\r\n} from '../actions/authActions'\r\n\r\nexport type AuthTypes = {\r\n    isFetch: boolean,\r\n    isAuth: boolean,\r\n    error?: any\r\n};\r\n\r\nconst initialState = {\r\n    isFetch: false,\r\n    isAuth: false,\r\n    error: null\r\n};\r\n\r\nexport const authReducer = (state: AuthTypes = initialState, action: AnyAction): AuthTypes => {\r\n    switch (action.type) {\r\n        case SET_IS_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload\r\n            }\r\n        case FETCH_TOKEN_BEGIN:\r\n            return {\r\n                ...state,\r\n                isFetch: true,\r\n                error: null\r\n            }\r\n        case FETCH_TOKEN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetch: false,\r\n                ...action.payload\r\n            }\r\n        case FETCH_TOKEN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFetch: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}