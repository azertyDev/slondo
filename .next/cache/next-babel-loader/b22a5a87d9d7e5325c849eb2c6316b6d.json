{"ast":null,"code":"import * as yup from \"yup\";\nexport const requiredFields = {\n  year: true,\n  mileage: true,\n  body: true,\n  manufacturer: true,\n  model: true,\n  colors: true,\n  car_engine_type: true,\n  transmission: true\n};\nconst requiredMsg = 'Обязательное параметр!';\nconst lazy = yup.lazy(value => yup.object(Object.entries(value).reduce((a, [key]) => {\n  if (requiredFields[key]) {\n    a[key] = yup.object({\n      id: yup.number().nullable().required(requiredMsg)\n    });\n    return a;\n  }\n}, {})));\nexport const createAdvrtSchema = yup.object().shape({\n  // adType: yup.object({\n  //     id: yup.number().nullable().required(requiredMsg)\n  // }),\n  // category: yup.object({\n  //     id: yup.number().nullable().required(requiredMsg)\n  // }),\n  // title: yup.string().required(requiredMsg),\n  // location: yup.object({\n  //     city_id: yup.number().required(requiredMsg),\n  // }).nullable().required(requiredMsg),\n  // files: yup.array().required(requiredMsg),\n  // description: yup.string().required(requiredMsg),\n  // phone: yup.string().required(requiredMsg),\n  adParams: lazy\n});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/validation_schemas/createAdvrtSchema.ts"],"names":["yup","requiredFields","year","mileage","body","manufacturer","model","colors","car_engine_type","transmission","requiredMsg","lazy","value","object","Object","entries","reduce","a","key","id","number","nullable","required","createAdvrtSchema","shape","adParams"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,IAAI,EAAE,IADoB;AAE1BC,EAAAA,OAAO,EAAE,IAFiB;AAG1BC,EAAAA,IAAI,EAAE,IAHoB;AAI1BC,EAAAA,YAAY,EAAE,IAJY;AAK1BC,EAAAA,KAAK,EAAE,IALmB;AAM1BC,EAAAA,MAAM,EAAE,IANkB;AAO1BC,EAAAA,eAAe,EAAE,IAPS;AAQ1BC,EAAAA,YAAY,EAAE;AARY,CAAvB;AAWP,MAAMC,WAAW,GAAG,wBAApB;AAEA,MAAMC,IAAI,GAAGX,GAAG,CAACW,IAAJ,CAAUC,KAAD,IAAWZ,GAAG,CAACa,MAAJ,CAC7BC,MAAM,CAACC,OAAP,CAAeH,KAAf,EACKI,MADL,CAEQ,CAACC,CAAD,EAAI,CAACC,GAAD,CAAJ,KAAc;AACV,MAAIjB,cAAc,CAACiB,GAAD,CAAlB,EAAyB;AACrBD,IAAAA,CAAC,CAACC,GAAD,CAAD,GAASlB,GAAG,CAACa,MAAJ,CAAW;AAChBM,MAAAA,EAAE,EAAEnB,GAAG,CAACoB,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiCZ,WAAjC;AADY,KAAX,CAAT;AAGA,WAAOO,CAAP;AACH;AACJ,CATT,EASW,EATX,CAD6B,CAApB,CAAb;AAcA,OAAO,MAAMM,iBAAiB,GAAGvB,GAAG,CAACa,MAAJ,GAAaW,KAAb,CAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAEd;AAdsC,CAAnB,CAA1B","sourcesContent":["import * as yup from \"yup\";\r\n\r\n\r\nexport const requiredFields = {\r\n    year: true,\r\n    mileage: true,\r\n    body: true,\r\n    manufacturer: true,\r\n    model: true,\r\n    colors: true,\r\n    car_engine_type: true,\r\n    transmission: true,\r\n};\r\n\r\nconst requiredMsg = 'Обязательное параметр!';\r\n\r\nconst lazy = yup.lazy((value) => yup.object(\r\n    Object.entries(value)\r\n        .reduce(\r\n            (a, [key]) => {\r\n                if (requiredFields[key]) {\r\n                    a[key] = yup.object({\r\n                        id: yup.number().nullable().required(requiredMsg)\r\n                    });\r\n                    return a;\r\n                }\r\n            }, {}\r\n        )\r\n));\r\n\r\nexport const createAdvrtSchema = yup.object().shape({\r\n    // adType: yup.object({\r\n    //     id: yup.number().nullable().required(requiredMsg)\r\n    // }),\r\n    // category: yup.object({\r\n    //     id: yup.number().nullable().required(requiredMsg)\r\n    // }),\r\n    // title: yup.string().required(requiredMsg),\r\n    // location: yup.object({\r\n    //     city_id: yup.number().required(requiredMsg),\r\n    // }).nullable().required(requiredMsg),\r\n    // files: yup.array().required(requiredMsg),\r\n    // description: yup.string().required(requiredMsg),\r\n    // phone: yup.string().required(requiredMsg),\r\n    adParams: lazy\r\n});"]},"metadata":{},"sourceType":"module"}