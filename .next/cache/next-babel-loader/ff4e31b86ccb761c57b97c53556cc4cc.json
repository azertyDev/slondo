{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport SlickSlider from 'react-slick';\nimport { Container } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Image from '../../../../../../common/img/slider-img.jpg';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'; // Styles\n\nimport { useStyles } from './useStyle';\n\nclass MainSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n  }\n\n  next() {\n    this.slider.slickNext();\n  }\n\n  previous() {\n    this.slider.slickPrev();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const settings = {\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      adaptiveHeight: true,\n      autoplay: false,\n      autoplaySpeed: 5000,\n      centerMode: true,\n      arrows: false,\n      responsive: [{\n        breakpoint: 480,\n        settings: {\n          dots: false,\n          infinite: true,\n          speed: 500,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          autoplay: false,\n          autoplaySpeed: 5000,\n          centerMode: true,\n          arrows: false\n        }\n      }, {\n        breakpoint: 600,\n        settings: {\n          dots: false,\n          infinite: true,\n          speed: 500,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          autoplay: false,\n          autoplaySpeed: 5000,\n          centerMode: true,\n          arrows: false\n        }\n      }, {\n        breakpoint: 1000,\n        settings: {\n          dots: false,\n          infinite: true,\n          speed: 500,\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          autoplay: false,\n          autoplaySpeed: 5000,\n          centerMode: true,\n          arrows: false\n        }\n      }]\n    };\n    return __jsx(\"div\", {\n      className: classes.root\n    }, __jsx(SlickSlider, _extends({\n      ref: c => this.slider = c\n    }, settings), __jsx(\"div\", null, __jsx(\"img\", {\n      src: Image\n    })), __jsx(\"div\", null, __jsx(\"img\", {\n      src: Image\n    })), __jsx(\"div\", null, __jsx(\"img\", {\n      src: Image\n    })), __jsx(\"div\", null, __jsx(\"img\", {\n      src: Image\n    })), __jsx(\"div\", null, __jsx(\"img\", {\n      src: Image\n    })), __jsx(\"div\", null, __jsx(\"img\", {\n      src: Image\n    })), __jsx(\"div\", null, __jsx(\"img\", {\n      src: Image\n    })), __jsx(\"div\", null, __jsx(\"img\", {\n      src: Image\n    })), __jsx(\"div\", null, __jsx(\"img\", {\n      src: Image\n    }))), __jsx(IconButton, {\n      size: \"small\",\n      onClick: this.previous,\n      className: \"left-button\"\n    }, __jsx(ArrowLeftIcon, null)), __jsx(IconButton, {\n      size: \"small\",\n      onClick: this.next,\n      className: \"right-button\"\n    }, __jsx(ArrowRightIcon, null)));\n  }\n\n}\n\nexport default withStyles(useStyles)(MainSlider);","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/header/slider/mainSlider/MainSlider.jsx"],"names":["React","Component","SlickSlider","Container","withStyles","Image","IconButton","ArrowLeftIcon","ArrowRightIcon","useStyles","MainSlider","constructor","props","next","bind","previous","slider","slickNext","slickPrev","render","classes","settings","dots","infinite","speed","slidesToShow","slidesToScroll","adaptiveHeight","autoplay","autoplaySpeed","centerMode","arrows","responsive","breakpoint","root","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport SlickSlider from 'react-slick'\nimport { Container } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport Image from '../../../../../../common/img/slider-img.jpg'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft'\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\n\n// Styles\nimport { useStyles } from './useStyle'\n\nclass MainSlider extends Component {\n    constructor(props) {\n        super(props)\n        this.next = this.next.bind(this)\n        this.previous = this.previous.bind(this)\n    }\n    next() {\n        this.slider.slickNext()\n    }\n    previous() {\n        this.slider.slickPrev()\n    }\n    render() {\n        const { classes } = this.props\n\n        const settings = {\n            dots: false,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            adaptiveHeight: true,\n            autoplay: false,\n            autoplaySpeed: 5000,\n            centerMode: true,\n            arrows: false,\n            responsive: [\n                {\n                    breakpoint: 480,\n                    settings: {\n                        dots: false,\n                        infinite: true,\n                        speed: 500,\n                        slidesToShow: 1,\n                        slidesToScroll: 1,\n                        autoplay: false,\n                        autoplaySpeed: 5000,\n                        centerMode: true,\n                        arrows: false,\n                    },\n                },\n                {\n                    breakpoint: 600,\n                    settings: {\n                        dots: false,\n                        infinite: true,\n                        speed: 500,\n                        slidesToShow: 1,\n                        slidesToScroll: 1,\n                        autoplay: false,\n                        autoplaySpeed: 5000,\n                        centerMode: true,\n                        arrows: false,\n                    },\n                },\n                {\n                    breakpoint: 1000,\n                    settings: {\n                        dots: false,\n                        infinite: true,\n                        speed: 500,\n                        slidesToShow: 2,\n                        slidesToScroll: 2,\n                        autoplay: false,\n                        autoplaySpeed: 5000,\n                        centerMode: true,\n                        arrows: false,\n                    },\n                },\n            ],\n        }\n        return (\n            <div className={classes.root}>\n                <SlickSlider ref={(c) => (this.slider = c)} {...settings}>\n                    <div>\n                        <img src={Image} />\n                    </div>\n                    <div>\n                        <img src={Image} />\n                    </div>\n                    <div>\n                        <img src={Image} />\n                    </div>\n                    <div>\n                        <img src={Image} />\n                    </div>\n                    <div>\n                        <img src={Image} />\n                    </div>\n                    <div>\n                        <img src={Image} />\n                    </div>\n                    <div>\n                        <img src={Image} />\n                    </div>\n                    <div>\n                        <img src={Image} />\n                    </div>\n                    <div>\n                        <img src={Image} />\n                    </div>\n                </SlickSlider>\n\n                <IconButton\n                    size=\"small\"\n                    onClick={this.previous}\n                    className=\"left-button\"\n                >\n                    <ArrowLeftIcon />\n                </IconButton>\n                <IconButton\n                    size=\"small\"\n                    onClick={this.next}\n                    className=\"right-button\"\n                >\n                    <ArrowRightIcon />\n                </IconButton>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(MainSlider)\n"]},"metadata":{},"sourceType":"module"}