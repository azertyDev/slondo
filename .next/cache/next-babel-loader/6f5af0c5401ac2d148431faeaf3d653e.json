{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Cookies from 'universal-cookie';\nimport { withTranslation } from '@root/i18n';\nimport { Container, Hidden } from '@material-ui/core';\nimport TopHeaderContainer from \"./topHeader/TopHeaderContainer\";\nimport BottomHeader from './bottomHeader/BottomHeader';\nimport { ModalComponent } from '../elements/modal/Modal';\nimport { AuthRegPage } from \"./auth_reg/AuthRegPage\";\nimport { AuthRegSm } from \"./auth_reg/auth_reg_sm/AutRegSm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { setIsAuth } from '@src/redux/slices/authSlice';\n// styles\nimport { useStyles } from './useStyles';\n\nvar Header = function Header(props) {\n  _s();\n\n  var t = props.t;\n\n  var _useSelector = useSelector(function (store) {\n    return store.auth;\n  }),\n      isAuth = _useSelector.isAuth;\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var cookies = new Cookies();\n  var isTokenExst = !!cookies.get('token');\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  useEffect(function () {\n    dispatch(setIsAuth(isTokenExst));\n  }, [isTokenExst]);\n\n  var handleOpenModal = function handleOpenModal() {\n    setIsOpen(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setIsOpen(false);\n  };\n\n  var classes = useStyles();\n  return __jsx(\"header\", {\n    className: classes.root\n  }, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, __jsx(TopHeaderContainer, {\n    t: t,\n    handleOpenModal: handleOpenModal\n  }), __jsx(\"div\", {\n    className: classes.bottomHeader\n  }, __jsx(BottomHeader, {\n    t: t,\n    handleOpenModal: handleOpenModal\n  }))), __jsx(ModalComponent, {\n    isOpen: isOpen,\n    handleCloseModal: handleCloseModal,\n    className: classes.modalDialog\n  }, __jsx(React.Fragment, null, __jsx(Hidden, {\n    smDown: true\n  }, __jsx(AuthRegPage, {\n    t: t,\n    handleCloseModal: handleCloseModal\n  })), __jsx(Hidden, {\n    mdUp: true\n  }, __jsx(AuthRegSm, {\n    t: t,\n    handleCloseModal: handleCloseModal\n  })))));\n};\n\n_s(Header, \"XRrPyeusvSZMt4tQaEjqcXMw0tk=\", false, function () {\n  return [useSelector, useDispatch, useRouter, useStyles];\n});\n\n_c = Header;\nexport default withTranslation(['header', 'auth_reg', 'common'])(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/header/Header.tsx"],"names":["React","useEffect","useState","Cookies","withTranslation","Container","Hidden","TopHeaderContainer","BottomHeader","ModalComponent","AuthRegPage","AuthRegSm","useDispatch","useSelector","useRouter","setIsAuth","useStyles","Header","props","t","store","auth","isAuth","dispatch","router","cookies","isTokenExst","get","isOpen","setIsOpen","handleOpenModal","handleCloseModal","classes","root","bottomHeader","modalDialog"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAQC,eAAR,QAA8B,YAA9B;AACA,SAAQC,SAAR,EAAmBC,MAAnB,QAAgC,mBAAhC;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAAQC,cAAR,QAA6B,yBAA7B;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,SAAR,QAAwB,iCAAxB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,SAAR,QAAwB,6BAAxB;AAGA;AACA,SAAQC,SAAR,QAAwB,aAAxB;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AAAA,MACfC,CADe,GACVD,KADU,CACfC,CADe;;AAAA,qBAGLN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAsBA,KAAK,CAACC,IAA5B;AAAA,GAAD,CAHN;AAAA,MAGfC,MAHe,gBAGfA,MAHe;;AAItB,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,MAAM,GAAGV,SAAS,EAAxB;AAEA,MAAMW,OAAO,GAAG,IAAItB,OAAJ,EAAhB;AACA,MAAMuB,WAAW,GAAG,CAAC,CAACD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAtB;;AARsB,kBAUMzB,QAAQ,CAAC,KAAD,CAVd;AAAA,MAUf0B,MAVe;AAAA,MAUPC,SAVO;;AAYtB5B,EAAAA,SAAS,CAAC,YAAM;AACZsB,IAAAA,QAAQ,CAACR,SAAS,CAACW,WAAD,CAAV,CAAR;AACH,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAMI,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAFD;;AAIA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFD;;AAIA,MAAMG,OAAO,GAAGhB,SAAS,EAAzB;AACA,SACI;AAAQ,IAAA,SAAS,EAAEgB,OAAO,CAACC;AAA3B,KACI,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC;AAApB,KACI,MAAC,kBAAD;AAAoB,IAAA,CAAC,EAAEd,CAAvB;AAA0B,IAAA,eAAe,EAAEW;AAA3C,IADJ,EAEI;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACE;AAAxB,KACI,MAAC,YAAD;AAAc,IAAA,CAAC,EAAEf,CAAjB;AAAoB,IAAA,eAAe,EAAEW;AAArC,IADJ,CAFJ,CADJ,EAOI,MAAC,cAAD;AACI,IAAA,MAAM,EAAEF,MADZ;AAEI,IAAA,gBAAgB,EAAEG,gBAFtB;AAGI,IAAA,SAAS,EAAEC,OAAO,CAACG;AAHvB,KAKI,4BACI,MAAC,MAAD;AAAQ,IAAA,MAAM;AAAd,KACI,MAAC,WAAD;AACI,IAAA,CAAC,EAAEhB,CADP;AAEI,IAAA,gBAAgB,EAAEY;AAFtB,IADJ,CADJ,EAOI,MAAC,MAAD;AAAQ,IAAA,IAAI;AAAZ,KACI,MAAC,SAAD;AACI,IAAA,CAAC,EAAEZ,CADP;AAEI,IAAA,gBAAgB,EAAEY;AAFtB,IADJ,CAPJ,CALJ,CAPJ,CADJ;AA8BH,CAvDD;;GAAMd,M;UAGeJ,W,EACAD,W,EACFE,S,EAmBCE,S;;;KAxBdC,M;AAyDN,eAAeb,eAAe,CAAC,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CAAD,CAAf,CAAkDa,MAAlD,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport Cookies from 'universal-cookie'\r\nimport {withTranslation} from '@root/i18n'\r\nimport {Container, Hidden} from '@material-ui/core'\r\nimport TopHeaderContainer from \"./topHeader/TopHeaderContainer\"\r\nimport BottomHeader from './bottomHeader/BottomHeader'\r\nimport {ModalComponent} from '../elements/modal/Modal'\r\nimport {AuthRegPage} from \"./auth_reg/AuthRegPage\"\r\nimport {AuthRegSm} from \"./auth_reg/auth_reg_sm/AutRegSm\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {useRouter} from \"next/router\"\r\nimport {setIsAuth} from '@src/redux/slices/authSlice'\r\nimport {RootState} from \"@src/redux/rootReducer\"\r\n\r\n// styles\r\nimport {useStyles} from './useStyles'\r\n\r\n\r\nconst Header = (props) => {\r\n    const {t} = props;\r\n\r\n    const {isAuth} = useSelector((store: RootState) => store.auth);\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n\r\n    const cookies = new Cookies();\r\n    const isTokenExst = !!cookies.get('token');\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(setIsAuth(isTokenExst));\r\n    }, [isTokenExst]);\r\n\r\n    const handleOpenModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <header className={classes.root}>\r\n            <Container maxWidth=\"lg\">\r\n                <TopHeaderContainer t={t} handleOpenModal={handleOpenModal}/>\r\n                <div className={classes.bottomHeader}>\r\n                    <BottomHeader t={t} handleOpenModal={handleOpenModal}/>\r\n                </div>\r\n            </Container>\r\n            <ModalComponent\r\n                isOpen={isOpen}\r\n                handleCloseModal={handleCloseModal}\r\n                className={classes.modalDialog}\r\n            >\r\n                <>\r\n                    <Hidden smDown>\r\n                        <AuthRegPage\r\n                            t={t}\r\n                            handleCloseModal={handleCloseModal}\r\n                        />\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                        <AuthRegSm\r\n                            t={t}\r\n                            handleCloseModal={handleCloseModal}\r\n                        />\r\n                    </Hidden>\r\n                </>\r\n            </ModalComponent>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default withTranslation(['header', 'auth_reg', 'common'])(Header);\r\n"]},"metadata":{},"sourceType":"module"}