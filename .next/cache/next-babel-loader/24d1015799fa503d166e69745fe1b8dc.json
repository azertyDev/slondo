{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { AncmntsTabs } from './AncmntsTabs';\nimport { ITEMS_PER_PAGE } from '@src/constants';\nimport { userAPI } from '@src/api/api';\nimport { i18n } from '@root/i18n';\nconst cardData = {\n  id: null,\n  title: '',\n  cardType: '',\n  safe_deal: null,\n  price: null,\n  currency: {\n    id: null,\n    name: ''\n  },\n  created_at: '',\n  location: '',\n  images: [{\n    url: ''\n  }]\n};\nconst initCards = [];\n\nfor (let i = 1; i <= 16; i++) {\n  initCards.push(cardData);\n}\n\nconst initialCardData = {\n  isFetch: false,\n  error: null,\n  data: {\n    cards: initCards,\n    total: null\n  }\n};\n\nconst fetchCardData = async (itemsPerPage, page, type, lang) => {\n  return await userAPI.getCardData(itemsPerPage, page, type, lang);\n};\n\nexport const AncmntsTabsContainer = props => {\n  const lang = i18n.language;\n  const {\n    0: tabValue,\n    1: setTabValue\n  } = useState(0);\n  const {\n    0: adCurrentPage,\n    1: setAdCurrentPage\n  } = useState(1);\n  const {\n    0: lotCurrentPage,\n    1: setLotCurrentPage\n  } = useState(1);\n  const {\n    0: adCardData,\n    1: setAdCardData\n  } = useState(initialCardData);\n  const {\n    0: lotCardData,\n    1: setLotCardData\n  } = useState(initialCardData);\n  const pageCount = Math.ceil((tabValue === 0 ? adCardData.data.total : lotCardData.data.total) / ITEMS_PER_PAGE) || 1;\n  const currentPage = tabValue === 0 ? adCurrentPage : lotCurrentPage;\n\n  const setCardData = async (state, setState, currentPage, type) => {\n    try {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        isFetch: true\n      }));\n      const newData = await fetchCardData(ITEMS_PER_PAGE, currentPage, type, lang);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        isFetch: false,\n        data: {\n          cards: newData.data,\n          total: newData.total\n        }\n      }));\n    } catch (e) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        error: e.message\n      }));\n    }\n  };\n\n  const handleTabChange = (_, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const handleShowMore = () => {\n    if (tabValue === 0) {\n      setAdCurrentPage(adCurrentPage + 1);\n    } else {\n      setLotCurrentPage(lotCurrentPage + 1);\n    }\n  };\n\n  const handlePaginationPage = (_, pageNumber) => {\n    tabValue === 0 ? setAdCurrentPage(pageNumber) : setLotCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    setCardData(adCardData, setAdCardData, adCurrentPage, 'ad');\n  }, [adCurrentPage]);\n  useEffect(() => {\n    setCardData(lotCardData, setLotCardData, lotCurrentPage, 'lot');\n  }, [lotCurrentPage]);\n  return __jsx(AncmntsTabs, {\n    t: props.t,\n    tabValue: tabValue,\n    adCardData: adCardData,\n    lotCardData: lotCardData,\n    pageCount: pageCount,\n    currentPage: currentPage,\n    handlePaginationPage: handlePaginationPage,\n    handleTabChange: handleTabChange // handleShowMore={handleShowMore}\n\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/main/ancmnts_tabs/AncmntsTabsContainer.tsx"],"names":["React","useEffect","useState","AncmntsTabs","ITEMS_PER_PAGE","userAPI","i18n","cardData","id","title","cardType","safe_deal","price","currency","name","created_at","location","images","url","initCards","i","push","initialCardData","isFetch","error","data","cards","total","fetchCardData","itemsPerPage","page","type","lang","getCardData","AncmntsTabsContainer","props","language","tabValue","setTabValue","adCurrentPage","setAdCurrentPage","lotCurrentPage","setLotCurrentPage","adCardData","setAdCardData","lotCardData","setLotCardData","pageCount","Math","ceil","currentPage","setCardData","state","setState","newData","e","message","handleTabChange","_","newValue","handleShowMore","handlePaginationPage","pageNumber","t"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AAEA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAAQC,IAAR,QAAmB,YAAnB;AAIA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,EAAE,EAAE,IADS;AAEbC,EAAAA,KAAK,EAAE,EAFM;AAGbC,EAAAA,QAAQ,EAAE,EAHG;AAIbC,EAAAA,SAAS,EAAE,IAJE;AAKbC,EAAAA,KAAK,EAAE,IALM;AAMbC,EAAAA,QAAQ,EAAE;AACNL,IAAAA,EAAE,EAAE,IADE;AAENM,IAAAA,IAAI,EAAE;AAFA,GANG;AAUbC,EAAAA,UAAU,EAAE,EAVC;AAWbC,EAAAA,QAAQ,EAAE,EAXG;AAYbC,EAAAA,MAAM,EAAE,CAAC;AACLC,IAAAA,GAAG,EAAE;AADA,GAAD;AAZK,CAAjB;AAiBA,MAAMC,SAAS,GAAG,EAAlB;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BD,EAAAA,SAAS,CAACE,IAAV,CAAed,QAAf;AACH;;AAED,MAAMe,eAAyB,GAAG;AAC9BC,EAAAA,OAAO,EAAE,KADqB;AAE9BC,EAAAA,KAAK,EAAE,IAFuB;AAG9BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAEP,SADL;AAEFQ,IAAAA,KAAK,EAAE;AAFL;AAHwB,CAAlC;;AASA,MAAMC,aAAa,GAAG,OAAOC,YAAP,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,IAAjC,KAA0C;AAC5D,SAAO,MAAM3B,OAAO,CAAC4B,WAAR,CAAoBJ,YAApB,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8CC,IAA9C,CAAb;AACH,CAFD;;AAIA,OAAO,MAAME,oBAA+B,GAAIC,KAAD,IAAW;AACtD,QAAMH,IAAI,GAAG1B,IAAI,CAAC8B,QAAlB;AAEA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BpC,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACqC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCtC,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM;AAAA,OAACuC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCxC,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM;AAAA,OAACyC,UAAD;AAAA,OAAaC;AAAb,MAA8B1C,QAAQ,CAACoB,eAAD,CAA5C;AACA,QAAM;AAAA,OAACuB,WAAD;AAAA,OAAcC;AAAd,MAAgC5C,QAAQ,CAACoB,eAAD,CAA9C;AACA,QAAMyB,SAAS,GAAGC,IAAI,CAACC,IAAL,CACd,CAACZ,QAAQ,KAAK,CAAb,GAAiBM,UAAU,CAAClB,IAAX,CAAgBE,KAAjC,GAAyCkB,WAAW,CAACpB,IAAZ,CAAiBE,KAA3D,IACAvB,cAFc,KAGb,CAHL;AAKA,QAAM8C,WAAW,GAAGb,QAAQ,KAAK,CAAb,GAAiBE,aAAjB,GAAiCE,cAArD;;AAEA,QAAMU,WAAW,GAAG,OAAOC,KAAP,EAAcC,QAAd,EAAwBH,WAAxB,EAAqCnB,IAArC,KAA8C;AAC9D,QAAI;AACAsB,MAAAA,QAAQ,iCACDD,KADC;AAEJ7B,QAAAA,OAAO,EAAE;AAFL,SAAR;AAKA,YAAM+B,OAAO,GAAG,MAAM1B,aAAa,CAC/BxB,cAD+B,EAE/B8C,WAF+B,EAG/BnB,IAH+B,EAI/BC,IAJ+B,CAAnC;AAOAqB,MAAAA,QAAQ,iCACDD,KADC;AAEJ7B,QAAAA,OAAO,EAAE,KAFL;AAGJE,QAAAA,IAAI,EAAE;AACFC,UAAAA,KAAK,EAAE4B,OAAO,CAAC7B,IADb;AAEFE,UAAAA,KAAK,EAAE2B,OAAO,CAAC3B;AAFb;AAHF,SAAR;AAQH,KArBD,CAqBE,OAAO4B,CAAP,EAAU;AACRF,MAAAA,QAAQ,iCACDD,KADC;AAEJ5B,QAAAA,KAAK,EAAE+B,CAAC,CAACC;AAFL,SAAR;AAIH;AACJ,GA5BD;;AA8BA,QAAMC,eAAe,GAAG,CAACC,CAAD,EAAIC,QAAJ,KAAiB;AACrCrB,IAAAA,WAAW,CAACqB,QAAD,CAAX;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AACzB,QAAIvB,QAAQ,KAAK,CAAjB,EAAoB;AAChBG,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,KAFD,MAEO;AACHG,MAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACH;AACJ,GAND;;AAQA,QAAMoB,oBAAoB,GAAG,CAACH,CAAD,EAAII,UAAJ,KAAmB;AAC5CzB,IAAAA,QAAQ,KAAK,CAAb,GACMG,gBAAgB,CAACsB,UAAD,CADtB,GAEMpB,iBAAiB,CAACoB,UAAD,CAFvB;AAGH,GAJD;;AAMA7D,EAAAA,SAAS,CAAC,MAAM;AACZkD,IAAAA,WAAW,CAACR,UAAD,EAAaC,aAAb,EAA4BL,aAA5B,EAA2C,IAA3C,CAAX;AACH,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIAtC,EAAAA,SAAS,CAAC,MAAM;AACZkD,IAAAA,WAAW,CAACN,WAAD,EAAcC,cAAd,EAA8BL,cAA9B,EAA8C,KAA9C,CAAX;AACH,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,SACI,MAAC,WAAD;AACI,IAAA,CAAC,EAAEN,KAAK,CAAC4B,CADb;AAEI,IAAA,QAAQ,EAAE1B,QAFd;AAGI,IAAA,UAAU,EAAEM,UAHhB;AAII,IAAA,WAAW,EAAEE,WAJjB;AAKI,IAAA,SAAS,EAAEE,SALf;AAMI,IAAA,WAAW,EAAEG,WANjB;AAOI,IAAA,oBAAoB,EAAEW,oBAP1B;AAQI,IAAA,eAAe,EAAEJ,eARrB,CASI;;AATJ,IADJ;AAaH,CApFM","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {WithT} from 'i18next';\r\nimport {AncmntsTabs} from './AncmntsTabs';\r\nimport {ITEMS_PER_PAGE} from '@src/constants';\r\nimport {userAPI} from '@src/api/api';\r\nimport {i18n} from '@root/i18n';\r\nimport {CardData} from '@root/interfaces/CardData';\r\n\r\n\r\nconst cardData = {\r\n    id: null,\r\n    title: '',\r\n    cardType: '',\r\n    safe_deal: null,\r\n    price: null,\r\n    currency: {\r\n        id: null,\r\n        name: '',\r\n    },\r\n    created_at: '',\r\n    location: '',\r\n    images: [{\r\n        url: ''\r\n    }]\r\n};\r\n\r\nconst initCards = [];\r\n\r\nfor (let i = 1; i <= 16; i++) {\r\n    initCards.push(cardData);\r\n}\r\n\r\nconst initialCardData: CardData = {\r\n    isFetch: false,\r\n    error: null,\r\n    data: {\r\n        cards: initCards,\r\n        total: null,\r\n    },\r\n};\r\n\r\nconst fetchCardData = async (itemsPerPage, page, type, lang) => {\r\n    return await userAPI.getCardData(itemsPerPage, page, type, lang);\r\n};\r\n\r\nexport const AncmntsTabsContainer: FC<WithT> = (props) => {\r\n    const lang = i18n.language;\r\n\r\n    const [tabValue, setTabValue] = useState(0);\r\n    const [adCurrentPage, setAdCurrentPage] = useState(1);\r\n    const [lotCurrentPage, setLotCurrentPage] = useState(1);\r\n    const [adCardData, setAdCardData] = useState(initialCardData);\r\n    const [lotCardData, setLotCardData] = useState(initialCardData);\r\n    const pageCount = Math.ceil(\r\n        (tabValue === 0 ? adCardData.data.total : lotCardData.data.total) /\r\n        ITEMS_PER_PAGE,\r\n    ) || 1;\r\n\r\n    const currentPage = tabValue === 0 ? adCurrentPage : lotCurrentPage;\r\n\r\n    const setCardData = async (state, setState, currentPage, type) => {\r\n        try {\r\n            setState({\r\n                ...state,\r\n                isFetch: true,\r\n            });\r\n\r\n            const newData = await fetchCardData(\r\n                ITEMS_PER_PAGE,\r\n                currentPage,\r\n                type,\r\n                lang,\r\n            );\r\n\r\n            setState({\r\n                ...state,\r\n                isFetch: false,\r\n                data: {\r\n                    cards: newData.data,\r\n                    total: newData.total,\r\n                },\r\n            });\r\n        } catch (e) {\r\n            setState({\r\n                ...state,\r\n                error: e.message,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (_, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n        if (tabValue === 0) {\r\n            setAdCurrentPage(adCurrentPage + 1)\r\n        } else {\r\n            setLotCurrentPage(lotCurrentPage + 1)\r\n        }\r\n    };\r\n\r\n    const handlePaginationPage = (_, pageNumber) => {\r\n        tabValue === 0\r\n            ? setAdCurrentPage(pageNumber)\r\n            : setLotCurrentPage(pageNumber);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCardData(adCardData, setAdCardData, adCurrentPage, 'ad');\r\n    }, [adCurrentPage]);\r\n\r\n    useEffect(() => {\r\n        setCardData(lotCardData, setLotCardData, lotCurrentPage, 'lot');\r\n    }, [lotCurrentPage]);\r\n\r\n    return (\r\n        <AncmntsTabs\r\n            t={props.t}\r\n            tabValue={tabValue}\r\n            adCardData={adCardData}\r\n            lotCardData={lotCardData}\r\n            pageCount={pageCount}\r\n            currentPage={currentPage}\r\n            handlePaginationPage={handlePaginationPage}\r\n            handleTabChange={handleTabChange}\r\n            // handleShowMore={handleShowMore}\r\n        />\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}