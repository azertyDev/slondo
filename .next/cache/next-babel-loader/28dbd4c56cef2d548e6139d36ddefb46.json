{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from 'react-beautiful-dnd';\nimport { useStyles } from './useStyles';\nexport const PreviewPhotos = props => {\n  const {\n    images,\n    setImages\n  } = props;\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const items = Array.from(images);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setImages(items);\n  }\n\n  const handleUploadFile = e => {\n    setImages([{\n      file: e.target.files[0]\n    }, ...images]);\n  };\n\n  resetServerContext();\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: handleUploadFile\n  }), __jsx(DragDropContext, {\n    onDragEnd: handleOnDragEnd\n  }, __jsx(Droppable, {\n    droppableId: \"images\",\n    direction: \"horizontal\"\n  }, provided => __jsx(\"div\", _extends({\n    className: \"images-wrapper\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef\n  }), images.map(({\n    file\n  }, index) => {\n    const img = getBase64(file);\n    console.log(file);\n    return __jsx(Draggable, {\n      key: file.name,\n      draggableId: file.name,\n      index: index\n    }, provided => __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps), __jsx(\"img\", {\n      src: img,\n      alt: file.name\n    }), __jsx(Typography, null, file.name)));\n  }), provided.placeholder))));\n};\n\nconst getBase64 = file => {\n  const reader = new FileReader();\n  return new Promise((res, rej) => {\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      res(reader.result);\n    };\n\n    reader.onerror = error => {\n      rej(error);\n    };\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/preview_photos/PreviewPhotos.tsx"],"names":["Typography","React","DragDropContext","Droppable","Draggable","resetServerContext","useStyles","PreviewPhotos","props","images","setImages","handleOnDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","handleUploadFile","e","file","target","files","classes","root","provided","droppableProps","innerRef","map","img","getBase64","console","log","name","draggableProps","dragHandleProps","placeholder","reader","FileReader","Promise","res","rej","readAsDataURL","onload","onerror","error"],"mappings":"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","sourcesContent":["import {Typography} from '@material-ui/core';\r\nimport React, {Dispatch, FC} from 'react';\r\nimport {DragDropContext, Droppable, Draggable, resetServerContext} from 'react-beautiful-dnd';\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const PreviewPhotos: FC<{ images: [], setImages: Dispatch<any> }> = (props) => {\r\n    const {images, setImages} = props;\r\n\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n\r\n        const items = Array.from(images);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        setImages(items);\r\n    }\r\n\r\n    const handleUploadFile = (e) => {\r\n        setImages([{\r\n            file: e.target.files[0]\r\n        },\r\n            ...images\r\n        ]);\r\n    };\r\n\r\n    resetServerContext();\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <input type='file' onChange={handleUploadFile}/>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId=\"images\" direction=\"horizontal\">\r\n                    {(provided) => (\r\n                        <div className=\"images-wrapper\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {images.map(({file}, index) => {\r\n                                const img = getBase64(file);\r\n                                console.log(file)\r\n                                return (\r\n                                    <Draggable key={file.name} draggableId={file.name} index={index}>\r\n                                        {(provided) => (\r\n                                            <div\r\n                                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                                <img src={img} alt={file.name}/>\r\n                                                <Typography>{file.name}</Typography>\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                );\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst getBase64 = (file) => {\r\n    const reader = new FileReader();\r\n    return new Promise((res, rej) => {\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            res(reader.result)\r\n        };\r\n        reader.onerror = (error) => {\r\n            rej(error);\r\n        };\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}