{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { userAPI } from '@src/api/api';\nimport { i18n } from '@root/i18n';\nimport { useRouter } from 'next/router';\nimport { ShowAdLot } from '@src/components/advertisement/show_advertisement/ShowAdLot';\nvar initValues = {\n  id: null,\n  name: ''\n};\nvar initialAdData = {\n  isFetch: false,\n  error: null,\n  data: {\n    id: null,\n    title: '',\n    currency: initValues,\n    condition: initValues,\n    created_at: null,\n    expiration_at: null,\n    number_of_views: null,\n    images: [],\n    description: '',\n    region: initValues,\n    city: initValues,\n    district: initValues,\n    ads_type: {\n      id: null,\n      name: '',\n      mark: ''\n    },\n    parent: {\n      id: null,\n      name: '',\n      mark: ''\n    },\n    child: {\n      id: null,\n      name: '',\n      mark: ''\n    },\n    auction: {\n      duration: '',\n      display_phone: '',\n      reserve_price: '',\n      price_by_now: ''\n    }\n  }\n};\nexport var ShowAdLotContainer = function ShowAdLotContainer(_ref) {\n  var t = _ref.t;\n\n  var _useState = useState(initialAdData),\n      adData = _useState[0],\n      setAdData = _useState[1];\n\n  var _useState2 = useState({}),\n      parameters = _useState2[0],\n      setParameters = _useState2[1];\n\n  var adsId = useRouter().query.id;\n  var lang = i18n.language;\n\n  var fetchAdData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$userAPI$getAdd, title, currency, condition, images, description, region, city, district, otherData;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setAdData(_objectSpread(_objectSpread({}, adData), {}, {\n                isFetch: true\n              }));\n              _context.next = 4;\n              return userAPI.getAddById(adsId, lang);\n\n            case 4:\n              _yield$userAPI$getAdd = _context.sent;\n              title = _yield$userAPI$getAdd.title;\n              currency = _yield$userAPI$getAdd.currency;\n              condition = _yield$userAPI$getAdd.condition;\n              images = _yield$userAPI$getAdd.images;\n              description = _yield$userAPI$getAdd.description;\n              region = _yield$userAPI$getAdd.region;\n              city = _yield$userAPI$getAdd.city;\n              district = _yield$userAPI$getAdd.district;\n              otherData = _objectWithoutProperties(_yield$userAPI$getAdd, [\"title\", \"currency\", \"condition\", \"images\", \"description\", \"region\", \"city\", \"district\"]);\n              setAdData(_objectSpread(_objectSpread({}, adData), {}, {\n                isFetch: false\n              }));\n              setParameters(_objectSpread({}, otherData[otherData.parent.mark]));\n              setAdData(_objectSpread(_objectSpread({}, adData), {}, {\n                data: _objectSpread({\n                  title: title,\n                  images: images,\n                  description: description,\n                  currency: currency !== null && currency !== void 0 ? currency : initValues,\n                  condition: condition !== null && condition !== void 0 ? condition : initValues,\n                  region: region !== null && region !== void 0 ? region : initValues,\n                  city: city !== null && city !== void 0 ? city : initValues,\n                  district: district !== null && district !== void 0 ? district : initValues\n                }, otherData)\n              }));\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n              setAdData(_objectSpread(_objectSpread({}, adData), {}, {\n                error: _context.t0.message\n              }));\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 19]]);\n    }));\n\n    return function fetchAdData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchAdData();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(ShowAdLot, {\n    adData: adData,\n    t: t,\n    parameters: parameters\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}