{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { DragDropContext, resetServerContext } from 'react-beautiful-dnd';\nimport { TOTAL_FILES_SIZE_LIMIT } from '@src/constants';\nimport { CustomDroppable } from \"../preview_photos/CustomDroppable\";\nimport { initUrl } from \"../CreateAdvrtContainer\";\n\nvar sizeCounter = function sizeCounter(files) {\n  return files.reduce(function (total, _ref) {\n    var file = _ref.file;\n    console.log(file);\n\n    if (file) {\n      return total + file.size;\n    }\n  }, 0);\n};\n\nexport var PreviewPhotos = function PreviewPhotos(props) {\n  resetServerContext();\n  var values = props.values,\n      setValues = props.setValues,\n      isPreview = props.isPreview;\n  var files = values.files;\n\n  var handleOnDragEnd = function handleOnDragEnd(_ref2) {\n    var destination = _ref2.destination,\n        source = _ref2.source;\n    if (!destination) return;\n    var items = files;\n\n    var _items$splice = items.splice(source.index, 1),\n        _items$splice2 = _slicedToArray(_items$splice, 1),\n        reorderedItem = _items$splice2[0];\n\n    items.splice(destination.index, 0, reorderedItem);\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      files: items\n    }));\n  };\n\n  var handleUploadFile = function handleUploadFile(_ref3) {\n    var target = _ref3.target;\n    var photos = Array.from(target.files);\n    var totalFilesSize = sizeCounter(files);\n    var totalPhotosSize = sizeCounter(photos); // console.log(totalFilesSize, totalPhotosSize, TOTAL_FILES_SIZE_LIMIT)\n    // console.log((totalFilesSize + totalPhotosSize) <= TOTAL_FILES_SIZE_LIMIT)\n\n    if (totalFilesSize + totalPhotosSize <= TOTAL_FILES_SIZE_LIMIT) {\n      photos = photos.map(function (photo) {\n        return {\n          file: photo,\n          url: URL.createObjectURL(photo)\n        };\n      });\n      files.splice(-photos.length, photos.length);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        files: [].concat(_toConsumableArray(photos), _toConsumableArray(files))\n      }));\n    }\n  };\n\n  var removeFile = function removeFile(url) {\n    return function () {\n      files.map(function (item, index) {\n        if (item.url === url) {\n          files.splice(index, 1);\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            files: [].concat(_toConsumableArray(files), [initUrl])\n          }));\n        }\n      });\n    };\n  };\n\n  console.log(files);\n  return __jsx(\"div\", null, __jsx(\"input\", {\n    type: \"file\",\n    disabled: isPreview,\n    onChange: handleUploadFile,\n    multiple: true,\n    accept: \"image/png,image/jpeg\"\n  }), __jsx(DragDropContext, {\n    enableDefaultSensors: true,\n    onDragEnd: handleOnDragEnd\n  }, __jsx(CustomDroppable, {\n    droppableId: \"firstRow\",\n    files: files,\n    isPreview: isPreview,\n    removeFile: removeFile\n  }), __jsx(CustomDroppable, {\n    droppableId: \"secondRow\",\n    files: files,\n    isPreview: isPreview,\n    removeFile: removeFile\n  })));\n};\n_c = PreviewPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreviewPhotos\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/preview_photos/PreviewPhotos.tsx"],"names":["React","DragDropContext","resetServerContext","TOTAL_FILES_SIZE_LIMIT","CustomDroppable","initUrl","sizeCounter","files","reduce","total","file","console","log","size","PreviewPhotos","props","values","setValues","isPreview","handleOnDragEnd","destination","source","items","splice","index","reorderedItem","handleUploadFile","target","photos","Array","from","totalFilesSize","totalPhotosSize","map","photo","url","URL","createObjectURL","length","removeFile","item"],"mappings":"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","sourcesContent":["import React, {Dispatch, FC} from 'react';\r\nimport {DragDropContext, resetServerContext, DropResult} from 'react-beautiful-dnd';\r\nimport {TOTAL_FILES_SIZE_LIMIT} from '@src/constants';\r\nimport {CreateAdFields, FileType} from \"@root/interfaces/Advertisement\";\r\nimport {CustomDroppable} from \"../preview_photos/CustomDroppable\";\r\nimport {initUrl} from \"../CreateAdvrtContainer\";\r\n\r\n\r\ninterface IPreviewPhotos {\r\n    values: CreateAdFields,\r\n    setValues: Dispatch<unknown>\r\n    isPreview: boolean\r\n}\r\n\r\nconst sizeCounter = (files) => {\r\n    return files.reduce((total, {file}) => {\r\n            console.log(file)\r\n            if (file) {\r\n                return total + file.size\r\n            }\r\n        },\r\n        0\r\n    )\r\n};\r\n\r\nexport const PreviewPhotos: FC<IPreviewPhotos> = (props) => {\r\n    resetServerContext();\r\n\r\n    const {values, setValues, isPreview} = props;\r\n    const {files} = values;\r\n\r\n    const handleOnDragEnd = ({destination, source}: DropResult): void => {\r\n        if (!destination) return;\r\n\r\n        const items = files;\r\n        const [reorderedItem] = items.splice(source.index, 1);\r\n\r\n        items.splice(destination.index, 0, reorderedItem);\r\n        setValues({...values, files: items});\r\n    };\r\n\r\n    const handleUploadFile = ({target}) => {\r\n        let photos: any = Array.from(target.files);\r\n\r\n        const totalFilesSize = sizeCounter(files);\r\n        const totalPhotosSize = sizeCounter(photos);\r\n        // console.log(totalFilesSize, totalPhotosSize, TOTAL_FILES_SIZE_LIMIT)\r\n        // console.log((totalFilesSize + totalPhotosSize) <= TOTAL_FILES_SIZE_LIMIT)\r\n        if ((totalFilesSize + totalPhotosSize) <= TOTAL_FILES_SIZE_LIMIT) {\r\n            photos = photos.map(photo => ({\r\n                file: photo,\r\n                url: URL.createObjectURL(photo)\r\n            }));\r\n\r\n            files.splice((-photos.length), photos.length);\r\n\r\n            setValues({\r\n                ...values,\r\n                files: [...photos, ...files]\r\n            })\r\n        }\r\n    };\r\n\r\n    const removeFile = (url) => () => {\r\n        files.map((item: FileType, index) => {\r\n            if (item.url === url) {\r\n                files.splice(index, 1);\r\n                setValues({\r\n                    ...values,\r\n                    files: [\r\n                        ...files,\r\n                        initUrl\r\n                    ]\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    console.log(files)\r\n    return (\r\n        <div>\r\n            <input\r\n                type='file'\r\n                disabled={isPreview}\r\n                onChange={handleUploadFile}\r\n                multiple={true}\r\n                accept=\"image/png,image/jpeg\"\r\n            />\r\n            <DragDropContext enableDefaultSensors={true} onDragEnd={handleOnDragEnd}>\r\n                <CustomDroppable\r\n                    droppableId='firstRow'\r\n                    files={files}\r\n                    isPreview={isPreview}\r\n                    removeFile={removeFile}\r\n                />\r\n                <CustomDroppable\r\n                    droppableId='secondRow'\r\n                    files={files}\r\n                    isPreview={isPreview}\r\n                    removeFile={removeFile}\r\n                />\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}