{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport Cookies from 'universal-cookie';\nimport { userApi } from '../../api/api';\nimport { FETCH_TOKEN, SET_IS_AUTH, authActions } from \"../actions/authActions\";\nconst cookies = new Cookies();\nconst {\n  fetchTokenBegin,\n  fetchTokenSuccess,\n  fetchTokenFailure,\n  setIsAuth\n} = authActions; // Login saga\n\nfunction* workerAuth(actions) {\n  const {\n    payload\n  } = actions;\n\n  try {\n    yield put(fetchTokenBegin());\n    const {\n      token\n    } = yield call(userApi.login, payload.phone, payload.password);\n    cookies.set('token', token, {\n      maxAge: 2 * 3600\n    });\n    yield put(fetchTokenSuccess({\n      isAuth: true,\n      isFetch: false\n    }));\n  } catch (e) {\n    yield put(fetchTokenFailure(e.message));\n  }\n}\n\nexport function* watchAuth() {\n  yield takeLatest(FETCH_TOKEN, workerAuth);\n} // Is user auth saga\n\nfunction* workerIsAuth() {\n  const isTokenExst = !!cookies.get('token');\n  yield put(setIsAuth(isTokenExst));\n}\n\nexport function* watchIsAuth() {\n  yield takeLatest(SET_IS_AUTH, workerIsAuth);\n}","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/sagas/authSaga.ts"],"names":["call","put","takeLatest","Cookies","userApi","FETCH_TOKEN","SET_IS_AUTH","authActions","cookies","fetchTokenBegin","fetchTokenSuccess","fetchTokenFailure","setIsAuth","workerAuth","actions","payload","token","login","phone","password","set","maxAge","isAuth","isFetch","e","message","watchAuth","workerIsAuth","isTokenExst","get","watchIsAuth"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,WAAlC,QAAoD,wBAApD;AAEA,MAAMC,OAAO,GAAG,IAAIL,OAAJ,EAAhB;AAEA,MAAM;AACFM,EAAAA,eADE;AAEFC,EAAAA,iBAFE;AAGFC,EAAAA,iBAHE;AAIFC,EAAAA;AAJE,IAKFL,WALJ,C,CAOA;;AACA,UAAUM,UAAV,CAAqBC,OAArB,EAA8B;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAYD,OAAlB;;AAEA,MAAI;AACA,UAAMb,GAAG,CAACQ,eAAe,EAAhB,CAAT;AACA,UAAM;AAACO,MAAAA;AAAD,QAAU,MAAMhB,IAAI,CAACI,OAAO,CAACa,KAAT,EAAgBF,OAAO,CAACG,KAAxB,EAA+BH,OAAO,CAACI,QAAvC,CAA1B;AACAX,IAAAA,OAAO,CAACY,GAAR,CAAY,OAAZ,EAAqBJ,KAArB,EAA4B;AAACK,MAAAA,MAAM,EAAE,IAAI;AAAb,KAA5B;AACA,UAAMpB,GAAG,CAACS,iBAAiB,CAAC;AAACY,MAAAA,MAAM,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAD,CAAlB,CAAT;AACH,GALD,CAKE,OAAOC,CAAP,EAAU;AACR,UAAMvB,GAAG,CAACU,iBAAiB,CAACa,CAAC,CAACC,OAAH,CAAlB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUC,SAAV,GAAsB;AACzB,QAAMxB,UAAU,CAACG,WAAD,EAAcQ,UAAd,CAAhB;AACH,C,CAGD;;AACA,UAAUc,YAAV,GAAyB;AACrB,QAAMC,WAAW,GAAG,CAAC,CAACpB,OAAO,CAACqB,GAAR,CAAY,OAAZ,CAAtB;AACA,QAAM5B,GAAG,CAACW,SAAS,CAACgB,WAAD,CAAV,CAAT;AACH;;AAED,OAAO,UAAUE,WAAV,GAAwB;AAC3B,QAAM5B,UAAU,CAACI,WAAD,EAAcqB,YAAd,CAAhB;AACH","sourcesContent":["import {call, put, takeLatest} from \"redux-saga/effects\"\r\nimport Cookies from 'universal-cookie'\r\nimport {userApi} from '../../api/api'\r\nimport {FETCH_TOKEN, SET_IS_AUTH, authActions} from \"../actions/authActions\"\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst {\r\n    fetchTokenBegin,\r\n    fetchTokenSuccess,\r\n    fetchTokenFailure,\r\n    setIsAuth\r\n} = authActions;\r\n\r\n// Login saga\r\nfunction* workerAuth(actions) {\r\n    const {payload} = actions;\r\n\r\n    try {\r\n        yield put(fetchTokenBegin());\r\n        const {token} = yield call(userApi.login, payload.phone, payload.password);\r\n        cookies.set('token', token, {maxAge: 2 * 3600});\r\n        yield put(fetchTokenSuccess({isAuth: true, isFetch: false}));\r\n    } catch (e) {\r\n        yield put(fetchTokenFailure(e.message));\r\n    }\r\n}\r\n\r\nexport function* watchAuth() {\r\n    yield takeLatest(FETCH_TOKEN, workerAuth);\r\n}\r\n\r\n\r\n// Is user auth saga\r\nfunction* workerIsAuth() {\r\n    const isTokenExst = !!cookies.get('token');\r\n    yield put(setIsAuth(isTokenExst));\r\n}\r\n\r\nexport function* watchIsAuth() {\r\n    yield takeLatest(SET_IS_AUTH, workerIsAuth);\r\n}"]},"metadata":{},"sourceType":"module"}