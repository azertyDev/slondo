{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userAPI } from \"@src/api/api\";\nvar initialState = {\n  isFetch: false,\n  error: null,\n  list: []\n}; // Async thunk\n\nexport var fetchCategories = createAsyncThunk('categories/fetchCategories', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(lang, _ref) {\n    var rejectWithValue;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            rejectWithValue = _ref.rejectWithValue;\n            _context.prev = 1;\n            _context.next = 4;\n            return userAPI.getCategories(lang);\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", rejectWithValue(_context.t0.message));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 7]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // Slice\n\nvar advertisementSlice = createSlice({\n  name: 'categories',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchCategories.pending, function (state) {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchCategories.fulfilled, function (state, action) {\n      state.isFetch = false;\n      state.list = action.payload;\n    });\n    builder.addCase(fetchCategories.rejected, function (state, action) {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport var categoriesReducer = advertisementSlice.reducer;","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/slices/categoriesSlice.ts"],"names":["createAsyncThunk","createSlice","userAPI","initialState","isFetch","error","list","fetchCategories","lang","rejectWithValue","getCategories","message","advertisementSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","categoriesReducer","reducer"],"mappings":";;AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AAEA,SAAQC,OAAR,QAAsB,cAAtB;AAGA,IAAMC,YAAyB,GAAG;AAC9BC,EAAAA,OAAO,EAAE,KADqB;AAE9BC,EAAAA,KAAK,EAAE,IAFuB;AAG9BC,EAAAA,IAAI,EAAE;AAHwB,CAAlC,C,CAMA;;AACA,OAAO,IAAMC,eAAe,GAAGP,gBAAgB,CAC3C,4BAD2C;AAAA,uEAE3C,iBAAOQ,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAcC,YAAAA,eAAd,QAAcA,eAAd;AAAA;AAAA;AAAA,mBAEqBP,OAAO,CAACQ,aAAR,CAAsBF,IAAtB,CAFrB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAIeC,eAAe,CAAC,YAAEE,OAAH,CAJ9B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAF2C;;AAAA;AAAA;AAAA;AAAA,IAAxC,C,CAWP;;AACA,IAAMC,kBAAkB,GAAGX,WAAW,CAAC;AACnCY,EAAAA,IAAI,EAAE,YAD6B;AAEnCV,EAAAA,YAAY,EAAZA,YAFmC;AAGnCW,EAAAA,QAAQ,EAAE,EAHyB;AAInCC,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBV,eAAe,CAACW,OAAhC,EAAyC,UAACC,KAAD,EAAW;AAChDA,MAAAA,KAAK,CAACf,OAAN,GAAgB,IAAhB;AACAe,MAAAA,KAAK,CAACd,KAAN,GAAc,IAAd;AACH,KAHD;AAIAW,IAAAA,OAAO,CAACC,OAAR,CAAgBV,eAAe,CAACa,SAAhC,EAA2C,UAACD,KAAD,EAAQE,MAAR,EAAmB;AAC1DF,MAAAA,KAAK,CAACf,OAAN,GAAgB,KAAhB;AACAe,MAAAA,KAAK,CAACb,IAAN,GAAae,MAAM,CAACC,OAApB;AACH,KAHD;AAIAN,IAAAA,OAAO,CAACC,OAAR,CAAgBV,eAAe,CAACgB,QAAhC,EAA0C,UAACJ,KAAD,EAAQE,MAAR,EAAmB;AACzDF,MAAAA,KAAK,CAACf,OAAN,GAAgB,KAAhB;AACAe,MAAAA,KAAK,CAACd,KAAN,GAAcgB,MAAM,CAACC,OAArB;AACH,KAHD;AAIH;AAjBkC,CAAD,CAAtC;AAoBA,OAAO,IAAME,iBAAiB,GAAGZ,kBAAkB,CAACa,OAA7C","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport {ICategories} from '@root/interfaces/ICategories'\r\nimport {userAPI} from \"@src/api/api\";\r\n\r\n\r\nconst initialState: ICategories = {\r\n    isFetch: false,\r\n    error: null,\r\n    list: [],\r\n};\r\n\r\n// Async thunk\r\nexport const fetchCategories = createAsyncThunk<never, string>(\r\n    'categories/fetchCategories',\r\n    async (lang, {rejectWithValue}) => {\r\n        try {\r\n            return await userAPI.getCategories(lang);\r\n        } catch (e) {\r\n            return rejectWithValue(e.message);\r\n        }\r\n    }\r\n);\r\n\r\n// Slice\r\nconst advertisementSlice = createSlice({\r\n    name: 'categories',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchCategories.pending, (state) => {\r\n            state.isFetch = true;\r\n            state.error = null;\r\n        })\r\n        builder.addCase(fetchCategories.fulfilled, (state, action) => {\r\n            state.isFetch = false;\r\n            state.list = action.payload;\r\n        })\r\n        builder.addCase(fetchCategories.rejected, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = action.payload;\r\n        })\r\n    }\r\n});\r\n\r\nexport const categoriesReducer = advertisementSlice.reducer;"]},"metadata":{},"sourceType":"module"}