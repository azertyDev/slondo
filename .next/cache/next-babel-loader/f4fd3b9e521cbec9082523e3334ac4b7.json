{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { CustomMenu } from \"@src/components/elements/custom_menu/CustomMenu\";\nexport var AdvertisementCreateData = function AdvertisementCreateData(props) {\n  var data = props.data,\n      values = props.values,\n      onBlur = props.onBlur,\n      handleClickMenuItem = props.handleClickMenuItem;\n  var dataKeys = Object.keys(data);\n  return __jsx(React.Fragment, null, dataKeys.map(function (key) {\n    if (key !== 'id' && key !== 'name' && data[key].length) {\n      var newData = key !== 'adsParams' ? [{\n        id: 0,\n        name: 'Выбрать'\n      }].concat(_toConsumableArray(data[key])) : data[key];\n      console.log(\"\".concat(key, \" - \"), newData);\n      return __jsx(React.Fragment, null, __jsx(Grid, {\n        key: key,\n        item: true,\n        xs: 12,\n        sm: 4\n      }, __jsx(Typography, {\n        variant: \"subtitle1\"\n      }, __jsx(\"strong\", null, key)), __jsx(CustomMenu, {\n        valueName: values[key] ? values[key].name : 'Выбрать',\n        items: newData,\n        onBlur: onBlur,\n        onClick: handleClickMenuItem(key)\n      })), key === 'type' && newData.map(function (data) {\n        if (Array.isArray(data)) {\n          return __jsx(Grid, {\n            key: key,\n            item: true,\n            xs: 12,\n            sm: 4\n          }, __jsx(Typography, {\n            variant: \"subtitle1\"\n          }, __jsx(\"strong\", null, [data])), __jsx(CustomMenu, {\n            valueName: 'Выбрать',\n            items: values[key].sub_type,\n            onBlur: onBlur,\n            onClick: handleClickMenuItem(key)\n          }));\n        }\n      }));\n    }\n  }));\n};\n_c = AdvertisementCreateData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdvertisementCreateData\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/advertisementFormContent/AdvertisementCreateData.tsx"],"names":["React","Grid","Typography","CustomMenu","AdvertisementCreateData","props","data","values","onBlur","handleClickMenuItem","dataKeys","Object","keys","map","key","length","newData","id","name","console","log","Array","isArray","sub_type"],"mappings":";;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,mBAA/B;AACA,SAAQC,UAAR,QAAyB,iDAAzB;AAIA,OAAO,IAAMC,uBAAgC,GAAG,SAAnCA,uBAAmC,CAACC,KAAD,EAAW;AAAA,MAChDC,IADgD,GACHD,KADG,CAChDC,IADgD;AAAA,MAC1CC,MAD0C,GACHF,KADG,CAC1CE,MAD0C;AAAA,MAClCC,MADkC,GACHH,KADG,CAClCG,MADkC;AAAA,MAC1BC,mBAD0B,GACHJ,KADG,CAC1BI,mBAD0B;AAEvD,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,IAAZ,CAAjB;AAEA,SACI,4BAEQI,QAAQ,CAACG,GAAT,CAAa,UAACC,GAAD,EAAS;AAClB,QAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,MAAxB,IAAkCR,IAAI,CAACQ,GAAD,CAAJ,CAAUC,MAAhD,EAAwD;AAEpD,UAAMC,OAAO,GAAGF,GAAG,KAAK,WAAR,IAAuB;AAACG,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE;AAAd,OAAvB,4BAAoDZ,IAAI,CAACQ,GAAD,CAAxD,KAAiER,IAAI,CAACQ,GAAD,CAArF;AACAK,MAAAA,OAAO,CAACC,GAAR,WAAeN,GAAf,UAAyBE,OAAzB;AACA,aACI,4BACI,MAAC,IAAD;AACI,QAAA,GAAG,EAAEF,GADT;AAEI,QAAA,IAAI,MAFR;AAGI,QAAA,EAAE,EAAE,EAHR;AAII,QAAA,EAAE,EAAE;AAJR,SAMI,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB,SACI,sBAASA,GAAT,CADJ,CANJ,EASI,MAAC,UAAD;AACI,QAAA,SAAS,EAAEP,MAAM,CAACO,GAAD,CAAN,GAAcP,MAAM,CAACO,GAAD,CAAN,CAAYI,IAA1B,GAAiC,SADhD;AAEI,QAAA,KAAK,EAAEF,OAFX;AAGI,QAAA,MAAM,EAAER,MAHZ;AAII,QAAA,OAAO,EAAEC,mBAAmB,CAACK,GAAD;AAJhC,QATJ,CADJ,EAkBQA,GAAG,KAAK,MAAR,IAAkBE,OAAO,CAACH,GAAR,CAAY,UAAAP,IAAI,EAAI;AAClC,YAAIe,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAJ,EAAyB;AACrB,iBACI,MAAC,IAAD;AACI,YAAA,GAAG,EAAEQ,GADT;AAEI,YAAA,IAAI,MAFR;AAGI,YAAA,EAAE,EAAE,EAHR;AAII,YAAA,EAAE,EAAE;AAJR,aAMI,MAAC,UAAD;AAAY,YAAA,OAAO,EAAC;AAApB,aACI,sBAAS,CAACR,IAAD,CAAT,CADJ,CANJ,EASI,MAAC,UAAD;AACI,YAAA,SAAS,EAAE,SADf;AAEI,YAAA,KAAK,EAAEC,MAAM,CAACO,GAAD,CAAN,CAAYS,QAFvB;AAGI,YAAA,MAAM,EAAEf,MAHZ;AAII,YAAA,OAAO,EAAEC,mBAAmB,CAACK,GAAD;AAJhC,YATJ,CADJ;AAkBH;AACJ,OArBiB,CAlB1B,CADJ;AA4CH;AACJ,GAlDD,CAFR,CADJ;AAyDH,CA7DM;KAAMV,uB","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport {CustomMenu} from \"@src/components/elements/custom_menu/CustomMenu\";\r\nimport {log} from \"util\";\r\n\r\n\r\nexport const AdvertisementCreateData: FC<any> = (props) => {\r\n    const {data, values, onBlur, handleClickMenuItem} = props;\r\n    const dataKeys = Object.keys(data);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                dataKeys.map((key) => {\r\n                    if (key !== 'id' && key !== 'name' && data[key].length) {\r\n\r\n                        const newData = key !== 'adsParams' ? [{id: 0, name: 'Выбрать'}, ...data[key]] : data[key];\r\n                        console.log(`${key} - `, newData)\r\n                        return (\r\n                            <>\r\n                                <Grid\r\n                                    key={key}\r\n                                    item\r\n                                    xs={12}\r\n                                    sm={4}\r\n                                >\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        <strong>{key}</strong>\r\n                                    </Typography>\r\n                                    <CustomMenu\r\n                                        valueName={values[key] ? values[key].name : 'Выбрать'}\r\n                                        items={newData}\r\n                                        onBlur={onBlur}\r\n                                        onClick={handleClickMenuItem(key)}\r\n                                    />\r\n                                </Grid>\r\n                                {\r\n                                    key === 'type' && newData.map(data => {\r\n                                        if (Array.isArray(data)) {\r\n                                            return (\r\n                                                <Grid\r\n                                                    key={key}\r\n                                                    item\r\n                                                    xs={12}\r\n                                                    sm={4}\r\n                                                >\r\n                                                    <Typography variant=\"subtitle1\">\r\n                                                        <strong>{[data]}</strong>\r\n                                                    </Typography>\r\n                                                    <CustomMenu\r\n                                                        valueName={'Выбрать'}\r\n                                                        items={values[key].sub_type}\r\n                                                        onBlur={onBlur}\r\n                                                        onClick={handleClickMenuItem(key)}\r\n                                                    />\r\n                                                </Grid>\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </>\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        </>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}