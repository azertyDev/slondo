{"ast":null,"code":"import * as yup from \"yup\";\nvar requiredList = {\n  drive: true,\n  seats: true\n};\n\nvar requiredFieldsGenerator = function requiredFieldsGenerator(value) {\n  var fields = {};\n  Object.keys(value).forEach(function (key) {\n    if (requiredList[key]) {\n      fields[key] = yup.object({\n        id: yup.number().nullable().required('Обязательный параметр')\n      });\n    }\n  });\n  return fields;\n};\n\nvar lazyFunc = function lazyFunc(value) {\n  if (value !== undefined) {\n    console.log(value);\n    return yup.object().shape(requiredFieldsGenerator(value));\n  }\n\n  return yup.mixed().notRequired();\n};\n\nexport var createAdvrtSchema = yup.object({\n  // title: yup.string().required('Обязательное поле!'),\n  // location: yup.string().required('Обязательное поле!'),\n  // files: yup.array().required('Загрузите фотографии!'),\n  // description: yup.string().required('Обязательное поле!'),\n  // phone: yup.string().required('Обязательное поле!'),\n  adsParams: yup.lazy(lazyFunc)\n});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/validation_schemas/createAdvrtSchema.ts"],"names":["yup","requiredList","drive","seats","requiredFieldsGenerator","value","fields","Object","keys","forEach","key","object","id","number","nullable","required","lazyFunc","undefined","console","log","shape","mixed","notRequired","createAdvrtSchema","adsParams","lazy"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;;AAKA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAW;AACvC,MAAMC,MAAM,GAAG,EAAf;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2B,UAAAC,GAAG,EAAI;AAC9B,QAAIT,YAAY,CAACS,GAAD,CAAhB,EAAuB;AACnBJ,MAAAA,MAAM,CAACI,GAAD,CAAN,GAAcV,GAAG,CAACW,MAAJ,CAAW;AAACC,QAAAA,EAAE,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiC,uBAAjC;AAAL,OAAX,CAAd;AACH;AACJ,GAJD;AAMA,SAAOT,MAAP;AACH,CAVD;;AAYA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACX,KAAD,EAAW;AAExB,MAAIA,KAAK,KAAKY,SAAd,EAAyB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACA,WAAOL,GAAG,CAACW,MAAJ,GAAaS,KAAb,CACHhB,uBAAuB,CAACC,KAAD,CADpB,CAAP;AAGH;;AAED,SAAOL,GAAG,CAACqB,KAAJ,GAAYC,WAAZ,EAAP;AACH,CAVD;;AAYA,OAAO,IAAMC,iBAAiB,GAAGvB,GAAG,CAACW,MAAJ,CAAW;AACxC;AACA;AACA;AACA;AACA;AACAa,EAAAA,SAAS,EAAExB,GAAG,CAACyB,IAAJ,CAAST,QAAT;AAN6B,CAAX,CAA1B","sourcesContent":["import * as yup from \"yup\";\r\n\r\n\r\nconst requiredList = {\r\n    drive: true,\r\n    seats: true\r\n};\r\n\r\nconst requiredFieldsGenerator = (value) => {\r\n    const fields = {};\r\n\r\n    Object.keys(value).forEach(key => {\r\n        if (requiredList[key]) {\r\n            fields[key] = yup.object({id: yup.number().nullable().required('Обязательный параметр')});\r\n        }\r\n    })\r\n\r\n    return fields;\r\n}\r\n\r\nconst lazyFunc = (value) => {\r\n\r\n    if (value !== undefined) {\r\n        console.log(value)\r\n        return yup.object().shape(\r\n            requiredFieldsGenerator(value)\r\n        );\r\n    }\r\n\r\n    return yup.mixed().notRequired();\r\n};\r\n\r\nexport const createAdvrtSchema = yup.object({\r\n    // title: yup.string().required('Обязательное поле!'),\r\n    // location: yup.string().required('Обязательное поле!'),\r\n    // files: yup.array().required('Загрузите фотографии!'),\r\n    // description: yup.string().required('Обязательное поле!'),\r\n    // phone: yup.string().required('Обязательное поле!'),\r\n    adsParams: yup.lazy(lazyFunc)\r\n});"]},"metadata":{},"sourceType":"module"}