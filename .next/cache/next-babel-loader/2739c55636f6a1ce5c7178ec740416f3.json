{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { CustomSlider } from '@src/components/elements/custom_slider/CustomSlider';\nimport { CardItem } from '@src/components/elements/card/Card';\nimport { settings } from \"./sliderSettings\";\nimport { useStyles } from './useStyles';\nexport const AncmntsSlider = ({\n  cardData,\n  title\n}) => {\n  const {\n    isFetch,\n    data: {\n      cards\n    }\n  } = cardData;\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    className: \"title\",\n    variant: \"h2\"\n  }, title), __jsx(\"div\", {\n    className: \"slider\"\n  }, __jsx(CustomSlider, settings, cards.map(card => __jsx(CardItem, _extends({\n    isFetch: isFetch,\n    key: card.id\n  }, card))))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/main/ancmnts_slider/AncmntsSlider.tsx"],"names":["React","Typography","CustomSlider","CardItem","settings","useStyles","AncmntsSlider","cardData","title","isFetch","data","cards","classes","root","map","card","id"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,YAAR,QAA2B,qDAA3B;AACA,SAAQC,QAAR,QAAuB,oCAAvB;AAEA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAO,MAAMC,aAAwD,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAC3F,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAhB,MAA2BJ,QAAjC;AAEA,QAAMK,OAAO,GAAGP,SAAS,EAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAEO,OAAO,CAACC;AAAxB,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,OAAtB;AAA8B,IAAA,OAAO,EAAC;AAAtC,KACKL,KADL,CADJ,EAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,YAAD,EACQJ,QADR,EAGKO,KAAK,CAACG,GAAN,CAAWC,IAAD,IACP,MAAC,QAAD;AACI,IAAA,OAAO,EAAEN,OADb;AAEI,IAAA,GAAG,EAAEM,IAAI,CAACC;AAFd,KAGQD,IAHR,EADH,CAHL,CADJ,CAJJ,CADJ;AAoBH,CAxBM","sourcesContent":["import React, {FC} from 'react';\r\nimport {Typography} from '@material-ui/core';\r\nimport {CustomSlider} from '@src/components/elements/custom_slider/CustomSlider';\r\nimport {CardItem} from '@src/components/elements/card/Card';\r\nimport {CardData} from '@root/interfaces/CardData';\r\nimport {settings} from \"./sliderSettings\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const AncmntsSlider: FC<{ title: string; cardData: CardData }> = ({cardData, title}) => {\r\n    const {isFetch, data: {cards}} = cardData;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography className=\"title\" variant=\"h2\">\r\n                {title}\r\n            </Typography>\r\n            <div className=\"slider\">\r\n                <CustomSlider\r\n                    {...settings}\r\n                >\r\n                    {cards.map((card) => (\r\n                        <CardItem\r\n                            isFetch={isFetch}\r\n                            key={card.id}\r\n                            {...card}\r\n                        />\r\n                    ))}\r\n                </CustomSlider>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}