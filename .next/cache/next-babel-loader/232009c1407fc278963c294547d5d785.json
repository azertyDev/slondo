{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { CustomMenu } from \"@src/components/elements/custom_menu/CustomMenu\";\nimport { useStyles } from './useStyles';\nexport var AdvrtSettingsBlock = function AdvrtSettingsBlock(props) {\n  _s();\n\n  var isPreview = props.isPreview,\n      createAdvrt = props.createAdvrt,\n      adsParams = props.adsParams,\n      onBlur = props.onBlur,\n      handleClickMenuItem = props.handleClickMenuItem;\n  var data = isPreview ? adsParams : createAdvrt.data;\n  var classes = useStyles();\n  return __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.root\n  }, Object.keys(data).map(function (key) {\n    if (Array.isArray(data[key]) && data[key].length && key !== 'adsParams' && key !== 'address') {\n      return __jsx(React.Fragment, null, __jsx(Grid, {\n        item: true,\n        container: true,\n        key: key,\n        xs: 12,\n        sm: key !== 'body' ? 6 : null\n      }, listGenerator(data[key], key)), adsParams[key] && Object.keys(adsParams[key]).map(function (innerKey) {\n        if (Array.isArray(adsParams[key][innerKey]) && adsParams[key][innerKey].length) {\n          return __jsx(Grid, {\n            item: true,\n            container: true,\n            key: key,\n            xs: 12,\n            sm: key !== 'body' ? 6 : null\n          }, listGenerator(adsParams[key][innerKey], innerKey));\n        }\n      }));\n    } else if (!Array.isArray(data[key]) && isPreview && data[key]) {\n      return listGenerator(data, key);\n    }\n  }));\n\n  function listGenerator(data, key) {\n    var field;\n\n    if (key === 'body') {\n      console.log(data);\n      field = data.map(function (body) {\n        return __jsx(\"div\", {\n          key: body.id\n        }, __jsx(\"img\", {\n          src: body.icon.url,\n          alt: body.name\n        }), __jsx(Typography, null, body.name));\n      });\n    } else {\n      data = [{\n        id: null,\n        name: 'Не выбрано'\n      }].concat(_toConsumableArray(data));\n      field = isPreview ? __jsx(Typography, {\n        variant: \"subtitle1\"\n      }, __jsx(\"strong\", null, data[key].name)) : __jsx(CustomMenu, {\n        valueName: adsParams[key] ? adsParams[key].name : data[0].name,\n        items: data,\n        onBlur: onBlur,\n        onClick: handleClickMenuItem(key)\n      });\n    }\n\n    return __jsx(React.Fragment, null, __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, __jsx(\"strong\", null, key)), field);\n  }\n};\n\n_s(AdvrtSettingsBlock, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdvrtSettingsBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdvrtSettingsBlock\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/advrtForm/advrt_settings_block/AdvrtSettingsBlock.tsx"],"names":["React","Grid","Typography","CustomMenu","useStyles","AdvrtSettingsBlock","props","isPreview","createAdvrt","adsParams","onBlur","handleClickMenuItem","data","classes","root","Object","keys","map","key","Array","isArray","length","listGenerator","innerKey","field","console","log","body","id","icon","url","name"],"mappings":"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","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport {CustomMenu} from \"@src/components/elements/custom_menu/CustomMenu\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const AdvrtSettingsBlock: FC<any> = (props) => {\r\n    const {\r\n        isPreview,\r\n        createAdvrt,\r\n        adsParams,\r\n        onBlur,\r\n        handleClickMenuItem\r\n    } = props;\r\n\r\n    const data = isPreview ? adsParams : createAdvrt.data;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item container xs={12} spacing={2} justify='space-between' className={classes.root}>\r\n            {\r\n                Object.keys(data).map(key => {\r\n                    if (Array.isArray(data[key]) && data[key].length && key !== 'adsParams' && key !== 'address') {\r\n                        return (\r\n                            <>\r\n                                <Grid\r\n                                    item\r\n                                    container\r\n                                    key={key}\r\n                                    xs={12}\r\n                                    sm={key !== 'body' ? 6 : null}\r\n                                >\r\n                                    {listGenerator(data[key], key)}\r\n                                </Grid>\r\n                                {\r\n                                    adsParams[key] && Object.keys(adsParams[key]).map(innerKey => {\r\n                                        if (Array.isArray(adsParams[key][innerKey]) && adsParams[key][innerKey].length) {\r\n                                            return (\r\n                                                <Grid\r\n                                                    item\r\n                                                    container\r\n                                                    key={key}\r\n                                                    xs={12}\r\n                                                    sm={key !== 'body' ? 6 : null}\r\n                                                >\r\n                                                    {listGenerator(adsParams[key][innerKey], innerKey)}\r\n                                                </Grid>\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </>\r\n                        );\r\n                    } else if (!Array.isArray(data[key]) && isPreview && data[key]) {\r\n                        return listGenerator(data, key);\r\n                    }\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n\r\n    function listGenerator(data, key) {\r\n        let field;\r\n\r\n        if (key === 'body') {\r\n            console.log(data)\r\n            field = data.map(body => (\r\n                <div key={body.id}>\r\n                    <img src={body.icon.url} alt={body.name}/>\r\n                    <Typography>{body.name}</Typography>\r\n                </div>\r\n            ));\r\n        } else {\r\n            data = [{id: null, name: 'Не выбрано'}, ...data];\r\n            field = isPreview\r\n                ? (\r\n                    <Typography variant=\"subtitle1\">\r\n                        <strong>{data[key].name}</strong>\r\n                    </Typography>\r\n                )\r\n                : (\r\n                    <CustomMenu\r\n                        valueName={adsParams[key] ? adsParams[key].name : data[0].name}\r\n                        items={data}\r\n                        onBlur={onBlur}\r\n                        onClick={handleClickMenuItem(key)}\r\n                    />\r\n                );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Typography variant=\"subtitle1\">\r\n                    <strong>{key}</strong>\r\n                </Typography>\r\n                {field}\r\n            </>\r\n        )\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}