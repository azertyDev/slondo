{"ast":null,"code":"import Axios from 'axios'; // import Cookies from 'universal-cookie';\n\n// const cookies = new Cookies();\n// const {token} = cookies.get('token') || {token: ''};\nvar amazonServer = 'http://54.205.72.116/api/';\nvar localServer = 'http://192.168.1.60/slondo/public/api/';\nvar instance = Axios.create({\n  withCredentials: true,\n  baseURL: localServer\n}); // const config = {\n//     headers: {\n//         'Content-Type': 'multipart/form-data',\n//         // 'Authorization': `Bearer ${token}`,\n//         \"Access-Control-Allow-Origin\": \"*\"\n//     }\n// };\n\nexport var userAPI = {\n  login: function login(phone, password) {\n    var form = new FormData();\n    form.set('phone', phone);\n    form.set('password', password);\n    return instance.post(\"login\", form, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (res) {\n      return res.data;\n    })[\"catch\"](function (err) {\n      throw err;\n    });\n  },\n  getCategories: function getCategories(lang) {\n    return instance.get(\"categories/alla?lang=\".concat(lang)).then(function (res) {\n      return res.data;\n    })[\"catch\"](function (err) {\n      throw err;\n    });\n  },\n  getAdDataForCreateAncmnt: function getAdDataForCreateAncmnt(ctgryID, subCtgryID, lang) {\n    return instance.get(\"subcategory?parent_id=\".concat(ctgryID, \"&lang=\").concat(lang, \"&child_id=\").concat(subCtgryID)).then(function (res) {\n      return res.data;\n    })[\"catch\"](function (err) {\n      throw err;\n    });\n  },\n  getCardData: function getCardData(itemsPerPage, page, type, lang) {\n    return instance.get(\"ads/all?itemsPerPage=\".concat(itemsPerPage, \"&page=\").concat(page, \"&type=\").concat(type, \"&lang=\").concat(lang)).then(function (res) {\n      return res.data;\n    })[\"catch\"](function (err) {\n      throw err;\n    });\n  },\n  getAddById: function getAddById(ads_id, lang) {\n    return instance.get(\"getAddById?ads_id=\".concat(ads_id, \"&lang=\").concat(lang)).then(function (res) {\n      return res.data;\n    })[\"catch\"](function (err) {\n      throw err;\n    });\n  },\n  getLocations: function getLocations(lang) {\n    return instance.get(\"location?lang=\".concat(lang)).then(function (res) {\n      return res.data;\n    })[\"catch\"](function (err) {\n      throw err;\n    });\n  },\n  createAdvrt: function createAdvrt(data) {\n    return instance.post(\"regular/ads/new\", data).then(function (res) {\n      return res.data;\n    })[\"catch\"](function (err) {\n      throw err;\n    });\n  },\n  getAncmntsTypes: function getAncmntsTypes(lang) {\n    return instance.get(\"ads/type?lang=\".concat(lang)).then(function (res) {\n      return res.data;\n    })[\"catch\"](function (err) {\n      throw err;\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/api/api.tsx"],"names":["Axios","amazonServer","localServer","instance","create","withCredentials","baseURL","userAPI","login","phone","password","form","FormData","set","post","headers","then","res","data","err","getCategories","lang","get","getAdDataForCreateAncmnt","ctgryID","subCtgryID","getCardData","itemsPerPage","page","type","getAddById","ads_id","getLocations","createAdvrt","getAncmntsTypes"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\n// import Cookies from 'universal-cookie';\r\nimport {LocationsDataTypes} from \"@root/interfaces/Locations\";\r\nimport {CategoryType} from \"@root/interfaces/Categories\";\r\n\r\n\r\n// const cookies = new Cookies();\r\n// const {token} = cookies.get('token') || {token: ''};\r\n\r\nconst amazonServer = 'http://54.205.72.116/api/';\r\nconst localServer = 'http://192.168.1.60/slondo/public/api/';\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: localServer\r\n});\r\n\r\n// const config = {\r\n//     headers: {\r\n//         'Content-Type': 'multipart/form-data',\r\n//         // 'Authorization': `Bearer ${token}`,\r\n//         \"Access-Control-Allow-Origin\": \"*\"\r\n//     }\r\n// };\r\n\r\nexport const userAPI = {\r\n    login: (phone: string, password: string): Promise<unknown> => {\r\n        const form = new FormData();\r\n        form.set('phone', phone);\r\n        form.set('password', password);\r\n        return instance\r\n            .post(`login`, form, {\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            })\r\n            .then((res) => res.data)\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n    getCategories: (lang: string): Promise<CategoryType[]> => {\r\n        return instance.get(`categories/alla?lang=${lang}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            });\r\n    },\r\n    getAdDataForCreateAncmnt: (ctgryID: number, subCtgryID: number, lang: string): Promise<unknown> => {\r\n        return instance.get(`subcategory?parent_id=${ctgryID}&lang=${lang}&child_id=${subCtgryID}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            });\r\n    },\r\n    getCardData: (itemsPerPage: number, page: number, type: string, lang: string): Promise<any> => {\r\n        return instance.get(`ads/all?itemsPerPage=${itemsPerPage}&page=${page}&type=${type}&lang=${lang}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n    getAddById: (ads_id: string | string[], lang: string): Promise<any> => {\r\n        return instance.get(`getAddById?ads_id=${ads_id}&lang=${lang}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n    getLocations: (lang: string): Promise<LocationsDataTypes> => {\r\n        return instance.get(`location?lang=${lang}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            });\r\n    },\r\n    createAdvrt: (data: any): Promise<LocationsDataTypes> => {\r\n        return instance.post(`regular/ads/new`, data)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            });\r\n    },\r\n    getAncmntsTypes: (lang: string): Promise<any> => {\r\n        return instance.get(`ads/type?lang=${lang}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}