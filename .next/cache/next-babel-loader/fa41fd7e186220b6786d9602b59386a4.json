{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Grid, Hidden, Container } from '@material-ui/core';\nimport { useSelector } from \"react-redux\";\nimport { MainLayout } from \"@src/components/MainLayout\";\nimport { AdvrtFormContainer } from './advrt_form/AdvrtFormContainer';\nimport { useStyles } from './useStyles';\nimport { i18n } from \"@root/i18n\";\nimport { createAdvrtDataAction, fetchAdDataForCreate, resetCreateAdvrtDataAction } from \"@src/redux/slices/createAdvrtSlice\";\nimport { CreateAdvrt } from \"@src/components/advertisement/create_advrt/CreateAdvrt\";\nconst initCreateAdState = {\n  isFetch: false,\n  error: null,\n  adType: {\n    id: null,\n    name: 'Выберите тип объявления'\n  },\n  category: {\n    id: null,\n    name: 'Выберите категорию'\n  },\n  data: {\n    id: null,\n    name: '',\n    adsParams: [{\n      currency: []\n    }]\n  }\n};\nexport const CreateAdvrtContainer = () => {\n  const lang = i18n.language;\n  const categoriesList = useSelector(({\n    categories\n  }) => categories.list);\n  const {\n    0: tabValue,\n    1: setTabValue\n  } = useState(0);\n  const {\n    0: createAdvrt,\n    1: setCreateAdvrt\n  } = useState(initCreateAdState);\n  const {\n    0: adTypes,\n    1: setAdTypes\n  } = useState(null);\n  const {\n    0: subCtgry,\n    1: setSubCtgry\n  } = useState({\n    parentID: null,\n    parentName: '',\n    childs: []\n  });\n\n  const handleTab = (_, newValue) => {\n    setTabValue(newValue);\n    tabValue ? setAdTypes(adTypes[0]) : setAdTypes(adTypes[1]);\n  };\n\n  const handleCtgr = (parentID, parentName, list) => () => {\n    if (list.length) {\n      setSubCtgry({\n        parentID,\n        parentName,\n        childs: list\n      });\n    } else {\n      resetCreateAdvrtDataAction();\n      createAdvrtDataAction({\n        adTypes,\n        category: {\n          id: parentID,\n          name: parentName\n        }\n      });\n    }\n  };\n\n  const handleSubCtgr = (ctgryID, subCtgryID) => () => {\n    fetchAdDataForCreate({\n      lang,\n      ctgryID,\n      subCtgryID\n    });\n    createAdvrtDataAction({\n      adTypes,\n      category: {\n        id: subCtgry.parentID,\n        name: subCtgry.parentName\n      }\n    });\n  };\n\n  const classes = useStyles();\n  return __jsx(MainLayout, null, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9\n  }, createAdvrt.category.id ? __jsx(AdvrtFormContainer, {\n    createAdvrt: createAdvrt\n  }) : __jsx(CreateAdvrt, null)), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 3,\n    className: classes.adBanner\n  }, __jsx(\"div\", {\n    className: \"right-banner\"\n  }))))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/CreateAdvrtContainer.tsx"],"names":["React","useState","Grid","Hidden","Container","useSelector","MainLayout","AdvrtFormContainer","useStyles","i18n","createAdvrtDataAction","fetchAdDataForCreate","resetCreateAdvrtDataAction","CreateAdvrt","initCreateAdState","isFetch","error","adType","id","name","category","data","adsParams","currency","CreateAdvrtContainer","lang","language","categoriesList","categories","list","tabValue","setTabValue","createAdvrt","setCreateAdvrt","adTypes","setAdTypes","subCtgry","setSubCtgry","parentID","parentName","childs","handleTab","_","newValue","handleCtgr","length","handleSubCtgr","ctgryID","subCtgryID","classes","adBanner"],"mappings":"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","sourcesContent":["import React, {FC, useState} from 'react';\r\nimport {Grid, Hidden, Container} from '@material-ui/core';\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {MainLayout} from \"@src/components/MainLayout\";\r\nimport {AdvrtFormContainer} from './advrt_form/AdvrtFormContainer';\r\nimport {useStyles} from './useStyles';\r\nimport {i18n} from \"@root/i18n\";\r\nimport {\r\n    createAdvrtDataAction,\r\n    fetchAdDataForCreate,\r\n    resetCreateAdvrtDataAction\r\n} from \"@src/redux/slices/createAdvrtSlice\";\r\nimport {CreateAdvrt} from \"@src/components/advertisement/create_advrt/CreateAdvrt\";\r\n\r\n\r\nconst initCreateAdState = {\r\n    isFetch: false,\r\n    error: null,\r\n    adType: {\r\n        id: null,\r\n        name: 'Выберите тип объявления'\r\n    },\r\n    category: {\r\n        id: null,\r\n        name: 'Выберите категорию'\r\n    },\r\n    data: {\r\n        id: null,\r\n        name: '',\r\n        adsParams: [\r\n            {\r\n                currency: []\r\n            }\r\n        ]\r\n    },\r\n};\r\n\r\nexport const CreateAdvrtContainer: FC<void> = () => {\r\n    const lang = i18n.language;\r\n\r\n    const categoriesList = useSelector(({categories}: RootState) => categories.list);\r\n\r\n    const [tabValue, setTabValue] = useState(0);\r\n\r\n    const [createAdvrt, setCreateAdvrt] = useState(initCreateAdState);\r\n\r\n    const [adTypes, setAdTypes] = useState(null);\r\n\r\n    const [subCtgry, setSubCtgry] = useState({\r\n        parentID: null,\r\n        parentName: '',\r\n        childs: []\r\n    });\r\n\r\n    const handleTab = (_, newValue) => {\r\n        setTabValue(newValue);\r\n        tabValue\r\n            ? setAdTypes(adTypes[0])\r\n            : setAdTypes(adTypes[1])\r\n    };\r\n\r\n    const handleCtgr = (parentID, parentName, list) => () => {\r\n        if (list.length) {\r\n            setSubCtgry({parentID, parentName, childs: list});\r\n        } else {\r\n            (resetCreateAdvrtDataAction());\r\n            (createAdvrtDataAction({\r\n                adTypes,\r\n                category: {\r\n                    id: parentID,\r\n                    name: parentName\r\n                }\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleSubCtgr = (ctgryID, subCtgryID) => () => {\r\n        fetchAdDataForCreate({\r\n            lang,\r\n            ctgryID,\r\n            subCtgryID\r\n        });\r\n        createAdvrtDataAction({\r\n            adTypes,\r\n            category: {\r\n                id: subCtgry.parentID,\r\n                name: subCtgry.parentName\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <MainLayout>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} md={9}>\r\n                        {\r\n                            createAdvrt.category.id\r\n                                ? <AdvrtFormContainer\r\n                                    createAdvrt={createAdvrt}\r\n                                />\r\n                                : <CreateAdvrt/>\r\n                        }\r\n                    </Grid>\r\n                    <Hidden smDown>\r\n                        <Grid item md={3} className={classes.adBanner}>\r\n                            <div className=\"right-banner\"/>\r\n                        </Grid>\r\n                    </Hidden>\r\n                </Grid>\r\n            </Container>\r\n        </MainLayout>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}