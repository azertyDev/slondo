{"ast":null,"code":"import Axios from 'axios';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\nconst {\n  token\n} = cookies.get('token') || {\n  token: ''\n};\nconst instance = Axios.create({\n  withCredentials: true,\n  baseURL: 'http://54.205.72.116/api/'\n});\nconst config = {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n};\nexport const userAPI = {\n  login: (phone, password) => {\n    const form = new FormData();\n    form.set('phone', phone);\n    form.set('password', password);\n    return instance.post(`login`, form, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getCategories: lang => {\n    return instance.get(`categories/main?lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getAdDataForCreate: (ctgryID, subCtgryID, lang) => {\n    return instance.get(`subcategory?parent_id=${ctgryID}&lang=${lang}&child_id=${subCtgryID}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getCardData: (itemsPerPage, page, type) => {\n    return instance.get(`ads/all?itemsPerPage=${itemsPerPage}&page=${page}&type=${type}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getAddById: (ads_id, lang) => {\n    return instance.get(`getAddById?ads_id=${ads_id}&lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getLocations: lang => {\n    return instance.get(`categories/main?lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/api/api.tsx"],"names":["Axios","Cookies","cookies","token","get","instance","create","withCredentials","baseURL","config","headers","Authorization","userAPI","login","phone","password","form","FormData","set","post","then","res","data","catch","err","getCategories","lang","getAdDataForCreate","ctgryID","subCtgryID","getCardData","itemsPerPage","page","type","getAddById","ads_id","getLocations"],"mappings":"AAAA,OAAOA,KAAP,MAAmC,OAAnC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAGA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AACA,MAAM;AAACE,EAAAA;AAAD,IAAUD,OAAO,CAACE,GAAR,CAAY,OAAZ,KAAwB;AAACD,EAAAA,KAAK,EAAE;AAAR,CAAxC;AAEA,MAAME,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAAb,CAAjB;AAKA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AAACC,IAAAA,aAAa,EAAG,UAASR,KAAM;AAAhC;AADE,CAAf;AAIA,OAAO,MAAMS,OAAO,GAAG;AACnBC,EAAAA,KAAK,EAAE,CAACC,KAAD,EAAgBC,QAAhB,KAA6D;AAChE,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,GAAL,CAAS,OAAT,EAAkBJ,KAAlB;AACAE,IAAAA,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBH,QAArB;AACA,WAAOV,QAAQ,CACVc,IADE,CACI,OADJ,EACYH,IADZ,EACkB;AACjBN,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AADQ,KADlB,EAIFU,IAJE,CAIIC,GAAD,IAASA,GAAG,CAACC,IAJhB,EAKFC,KALE,CAKKC,GAAD,IAAS;AACZ,YAAMA,GAAN;AACH,KAPE,CAAP;AAQH,GAbkB;AAcnBC,EAAAA,aAAa,EAAGC,IAAD,IAA0C;AACrD,WAAOrB,QAAQ,CAACD,GAAT,CAAc,wBAAuBsB,IAAK,EAA1C,EACFN,IADE,CACGC,GAAG,IAAIA,GAAG,CAACC,IADd,EAEFC,KAFE,CAEIC,GAAG,IAAI;AACV,YAAMA,GAAN;AACH,KAJE,CAAP;AAKH,GApBkB;AAqBnBG,EAAAA,kBAAkB,EAAE,CAACC,OAAD,EAAkBC,UAAlB,EAAsCH,IAAtC,KAAqE;AACrF,WAAOrB,QAAQ,CAACD,GAAT,CAAc,yBAAwBwB,OAAQ,SAAQF,IAAK,aAAYG,UAAW,EAAlF,EACFT,IADE,CACGC,GAAG,IAAIA,GAAG,CAACC,IADd,EAEFC,KAFE,CAEIC,GAAG,IAAI;AACV,YAAMA,GAAN;AACH,KAJE,CAAP;AAKH,GA3BkB;AA4BnBM,EAAAA,WAAW,EAAE,CAACC,YAAD,EAAuBC,IAAvB,EAAqCC,IAArC,KAAoE;AAC7E,WAAO5B,QAAQ,CAACD,GAAT,CAAc,wBAAuB2B,YAAa,SAAQC,IAAK,SAAQC,IAAK,EAA5E,EACFb,IADE,CACIC,GAAD,IAASA,GAAG,CAACC,IADhB,EAEFC,KAFE,CAEKC,GAAD,IAAS;AACZ,YAAMA,GAAN;AACH,KAJE,CAAP;AAKH,GAlCkB;AAmCnBU,EAAAA,UAAU,EAAE,CAACC,MAAD,EAAST,IAAT,KAAgC;AACxC,WAAOrB,QAAQ,CAACD,GAAT,CAAc,qBAAoB+B,MAAO,SAAQT,IAAK,EAAtD,EACFN,IADE,CACIC,GAAD,IAASA,GAAG,CAACC,IADhB,EAEFC,KAFE,CAEKC,GAAD,IAAS;AACZ,YAAMA,GAAN;AACH,KAJE,CAAP;AAKH,GAzCkB;AA0CnBY,EAAAA,YAAY,EAAGV,IAAD,IAA0C;AACpD,WAAOrB,QAAQ,CAACD,GAAT,CAAc,wBAAuBsB,IAAK,EAA1C,EACFN,IADE,CACGC,GAAG,IAAIA,GAAG,CAACC,IADd,EAEFC,KAFE,CAEIC,GAAG,IAAI;AACV,YAAMA,GAAN;AACH,KAJE,CAAP;AAKH;AAhDkB,CAAhB","sourcesContent":["import Axios, {AxiosInstance} from 'axios';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst cookies = new Cookies();\r\nconst {token} = cookies.get('token') || {token: ''};\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://54.205.72.116/api/',\r\n});\r\n\r\nconst config = {\r\n    headers: {Authorization: `Bearer ${token}`}\r\n};\r\n\r\nexport const userAPI = {\r\n    login: (phone: string, password: string): Promise<AxiosInstance> => {\r\n        const form = new FormData();\r\n        form.set('phone', phone);\r\n        form.set('password', password);\r\n        return instance\r\n            .post(`login`, form, {\r\n                headers: {'Content-Type': 'multipart/form-data'},\r\n            })\r\n            .then((res) => res.data)\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n    getCategories: (lang: string): Promise<AxiosInstance> => {\r\n        return instance.get(`categories/main?lang=${lang}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    },\r\n    getAdDataForCreate: (ctgryID: number, subCtgryID: number, lang: string): Promise<any> => {\r\n        return instance.get(`subcategory?parent_id=${ctgryID}&lang=${lang}&child_id=${subCtgryID}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    },\r\n    getCardData: (itemsPerPage: number, page: number, type: string): Promise<any> => {\r\n        return instance.get(`ads/all?itemsPerPage=${itemsPerPage}&page=${page}&type=${type}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n    getAddById: (ads_id, lang): Promise<any> => {\r\n        return instance.get(`getAddById?ads_id=${ads_id}&lang=${lang}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => {\r\n                throw err;\r\n            })\r\n    },\r\n    getLocations: (lang: string): Promise<AxiosInstance> => {\r\n        return instance.get(`categories/main?lang=${lang}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}