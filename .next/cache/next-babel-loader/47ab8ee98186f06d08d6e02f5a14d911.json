{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport { useSelector } from \"react-redux\";\nimport { i18n } from \"@root/i18n\";\nimport { userAPI } from '@src/api/api';\nimport { MainLayout } from \"@src/components/MainLayout\";\nimport { CreateAdvrt } from \"./CreateAdvrt\";\nimport { dataPrepare } from \"../create_advrt/advrt_form/advrt_params/helpers\";\nimport { useFormik } from \"formik\";\nimport { createAdvrtSchema, isRequired } from \"@root/validation_schemas/createAdvrtSchema\";\nimport { autoSelectKeys, textFieldKeys } from \"@src/components/advertisement/create_advrt/advrt_form/AdvrtFormContainer\";\nvar initCreateAdState = {\n  isFetch: false,\n  error: null,\n  adType: {\n    id: null,\n    name: '',\n    currency: [],\n    expired: []\n  },\n  category: {\n    id: null,\n    name: '',\n    childs: []\n  },\n  subCategory: {\n    id: null,\n    name: '',\n    data: {}\n  }\n};\nvar initFormFields = {\n  isFetch: false,\n  error: null,\n  title: '',\n  safe_deal: false,\n  delivery: false,\n  exchange: false,\n  location: null,\n  files: [],\n  description: '',\n  phone: '',\n  price: '',\n  currency: {\n    id: null,\n    name: ''\n  },\n  avalTime: {\n    isActive: false,\n    start_time: '00:00',\n    end_time: '00:00',\n    week: [{\n      id: 1,\n      name: 'Пн'\n    }, {\n      id: 2,\n      name: 'Вт'\n    }, {\n      id: 3,\n      name: 'Ср'\n    }, {\n      id: 4,\n      name: 'Чт'\n    }, {\n      id: 5,\n      name: 'Пт'\n    }, {\n      id: 6,\n      name: 'Сб'\n    }, {\n      id: 7,\n      name: 'Вс'\n    }]\n  },\n  auction: {\n    duration: {\n      id: null,\n      expiration_at: null\n    },\n    offer_the_price: false,\n    auto_renewal: false,\n    reserve_price: '',\n    price_by_now: {\n      isActive: false,\n      value: ''\n    },\n    display_phone: false\n  },\n  adParams: {\n    safety: [],\n    multimedia: [],\n    assistant: [],\n    exterior: [],\n    car_climate: [],\n    airbags: []\n  }\n};\nexport var CreateAdvrtContainer = function CreateAdvrtContainer() {\n  _s();\n\n  var lang = i18n.language;\n  var categoriesList = useSelector(function (_ref) {\n    var categories = _ref.categories;\n    return categories.list;\n  });\n\n  var _useState = useState(1),\n      tabValue = _useState[0],\n      setTabValue = _useState[1];\n\n  var _useState2 = useState([]),\n      adTypes = _useState2[0],\n      setAdTypes = _useState2[1];\n\n  var _useState3 = useState(initCreateAdState),\n      createAdvrt = _useState3[0],\n      setCreateAdvrt = _useState3[1];\n\n  var adType = createAdvrt.adType,\n      category = createAdvrt.category,\n      subCategory = createAdvrt.subCategory;\n\n  var _useState4 = useState(false),\n      isForm = _useState4[0],\n      setIsForm = _useState4[1];\n\n  var _useState5 = useState(false),\n      isPreview = _useState5[0],\n      setIsPreview = _useState5[1];\n\n  var _useState6 = useState(false),\n      isSuccess = _useState6[0],\n      setIsSuccess = _useState6[1];\n\n  var formik = useFormik({\n    initialValues: initFormFields,\n    validationSchema: createAdvrtSchema,\n    onSubmit: onSubmit\n  });\n  var values = formik.values,\n      setValues = formik.setValues,\n      setErrors = formik.setErrors;\n  var adParams = values.adParams;\n  var adParamsLen = Object.keys(adParams).length;\n\n  var getAdTypes = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _adTypes;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                isFetch: true\n              }));\n              _context.next = 4;\n              return userAPI.getAdTypes(lang);\n\n            case 4:\n              _adTypes = _context.sent;\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                isFetch: false\n              }));\n              setAdTypes(_adTypes);\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                adType: _adTypes[0]\n              }));\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                error: _context.t0\n              }));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function getAdTypes() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleTab = function handleTab(_, newValue) {\n    setTabValue(newValue);\n  };\n\n  var setAdType = function setAdType() {\n    var _adTypes$filter = adTypes.filter(function (type) {\n      return type.id === tabValue;\n    }),\n        _adTypes$filter2 = _slicedToArray(_adTypes$filter, 1),\n        selectedAdType = _adTypes$filter2[0];\n\n    setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n      adType: selectedAdType\n    }));\n  };\n\n  var handleCategory = function handleCategory(category) {\n    return function () {\n      setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n        error: null,\n        category: category\n      }));\n    };\n  };\n\n  var handleSubCategory = function handleSubCategory(id, name) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data, preparedData, message;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              if (!(id !== undefined)) {\n                _context2.next = 11;\n                break;\n              }\n\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                isFetch: true\n              }));\n              _context2.next = 5;\n              return userAPI.getAdDataForCreate(category.id, id, lang);\n\n            case 5:\n              data = _context2.sent;\n              preparedData = dataPrepare(data, adParams);\n              setIsForm(true);\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                isFetch: false,\n                subCategory: {\n                  id: id,\n                  name: name,\n                  data: preparedData\n                }\n              }));\n              _context2.next = 13;\n              break;\n\n            case 11:\n              setIsForm(true);\n              setCreateAdvrt(_objectSpread(_objectSpread({}, initCreateAdState), {}, {\n                adType: createAdvrt.adType,\n                category: createAdvrt.category\n              }));\n\n            case 13:\n              _context2.next = 19;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](0);\n              message = _context2.t0.message;\n              setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n                error: message\n              }));\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 15]]);\n    }));\n  };\n\n  var getFormData = function getFormData(data) {\n    var form = new FormData();\n    var avalTime = data.avalTime,\n        location = data.location,\n        files = data.files,\n        adParams = data.adParams,\n        auction = data.auction;\n    form.set('ads_type_id', adType.id.toString());\n    form.set('parent_categories_id', category.id.toString());\n\n    if (subCategory.id) {\n      form.set('child_categories_id', subCategory.id.toString());\n    }\n\n    form.set('title', data.title);\n    form.set('safe_deal', Number(data.safe_deal).toString());\n    form.set('delivery', Number(data.delivery).toString());\n    form.set('exchange', Number(data.exchange).toString());\n    form.set('phone', data.phone);\n    form.set('description', data.description);\n    form.set('price', data.price);\n    form.set('currency_id', data.currency.id.toString());\n    files.forEach(function (_ref5) {\n      var file = _ref5.file;\n      return form.append('files[]', file, file.name);\n    });\n\n    if (avalTime.isActive) {\n      avalTime.week.forEach(function (day, i) {\n        return form.append(\"week[\".concat(i, \"]\"), day.id.toString());\n      });\n      form.set('start_time', avalTime.start_time.toString());\n      form.set('end_time', avalTime.end_time.toString());\n    }\n\n    for (var key in location) {\n      if (typeof location[key] === 'number') {\n        form.set(key, Number(location[key]).toString());\n      }\n    }\n\n    var _loop = function _loop(_key2) {\n      var value = adParams[_key2];\n\n      if (value) {\n        if (typeof value === 'string') {\n          var validKey = _key2.replace('_value', '');\n\n          if (textFieldKeys.some(function (k) {\n            return k === validKey;\n          })) {\n            _key2 = validKey;\n          }\n\n          form.set(_key2, value);\n        } else if (Array.isArray(value)) {\n          value.forEach(function (value, i) {\n            return form.append(\"\".concat(_key2, \"[\").concat(i, \"]\"), value.id);\n          });\n        } else {\n          if (value.id) {\n            switch (_key2) {\n              case 'models':\n                _key2 = 'model';\n                break;\n\n              case 'colors':\n                _key2 = 'color';\n            }\n\n            form.set(\"\".concat(_key2, \"_id\"), value.id);\n          }\n        }\n      }\n\n      _key = _key2;\n    };\n\n    for (var _key in adParams) {\n      _loop(_key);\n    }\n\n    if (adType.id !== 1) {\n      form.set('duration_id', auction.duration.id.toString());\n      form.set('display_phone', Number(auction.display_phone).toString());\n\n      if (adType.id === 3) {\n        form.set('reserve_price', auction.reserve_price);\n        form.set('auto_renewal', Number(auction.auto_renewal).toString());\n        form.set('offer_the_price', Number(auction.offer_the_price).toString());\n\n        if (auction.price_by_now.isActive) {\n          form.set('price_by_now', auction.price_by_now.value);\n        }\n      }\n    } // for (const key of form.entries()) {\n    //     console.log(key[0] + '-' + key[1]);\n    // }\n\n\n    return form;\n  };\n\n  function onSubmit(_x) {\n    return _onSubmit.apply(this, arguments);\n  }\n\n  function _onSubmit() {\n    _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n\n              if (isPreview) {\n                _context3.next = 5;\n                break;\n              }\n\n              setIsPreview(true);\n              _context3.next = 12;\n              break;\n\n            case 5:\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                isFetch: true\n              }));\n              data = getFormData(values);\n              _context3.next = 9;\n              return userAPI.createAdvrt(data);\n\n            case 9:\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                isFetch: false\n              }));\n              setIsSuccess(true);\n              setIsPreview(false);\n\n            case 12:\n              _context3.next = 17;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](0);\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                error: _context3.t0.message\n              }));\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 14]]);\n    }));\n    return _onSubmit.apply(this, arguments);\n  }\n\n  var setReqValues = function setReqValues() {\n    var reqVals = {};\n    var reqParamsVals = {};\n    var adParamsVals = subCategory.data;\n\n    if (category.id === 11) {\n      reqVals['price'] = '0';\n    }\n\n    if (adType.currency.length !== 0) {\n      reqVals['currency'] = adType.currency.filter(function (cur) {\n        return cur.name === 'sum';\n      })[0];\n    }\n\n    if (adType.id !== 1) {\n      reqVals['auction'] = _objectSpread(_objectSpread({}, values.auction), {}, {\n        duration: adType.expired[0]\n      });\n    }\n\n    Object.keys(adParamsVals).forEach(function (key) {\n      if (isRequired(key) && adParams[key] === undefined) {\n        if (key === 'manufacturer' && subCategory.id == 1) {\n          reqParamsVals['models'] = {\n            id: null,\n            name: 'Не выбрано'\n          };\n        }\n\n        if (Array.isArray(adParamsVals[key])) {\n          reqParamsVals[key] = {\n            id: null,\n            name: 'Не выбрано'\n          };\n        } else {\n          reqParamsVals[key] = adParamsVals[key];\n        }\n      } else if (autoSelectKeys.some(function (k) {\n        return k === key;\n      })) {\n        if (textFieldKeys.some(function (k) {\n          return k === key;\n        })) {\n          reqParamsVals[\"\".concat(key, \"_value\")] = '';\n        }\n\n        reqParamsVals[key] = adParamsVals[key][0];\n      }\n    });\n    setValues(_objectSpread(_objectSpread(_objectSpread({}, initFormFields), reqVals), {}, {\n      adParams: _objectSpread(_objectSpread({}, adParams), reqParamsVals)\n    }));\n  };\n\n  useEffect(function () {\n    getAdTypes();\n  }, []);\n  useEffect(function () {\n    adTypes.length && setAdType();\n  }, [tabValue]);\n  useEffect(function () {\n    setReqValues();\n    setErrors({});\n  }, [subCategory.id, subCategory.name, adParamsLen]);\n  console.log(createAdvrt);\n  console.log(values);\n  return __jsx(MainLayout, null, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, __jsx(CreateAdvrt, {\n    formik: formik,\n    isForm: isForm,\n    setIsForm: setIsForm,\n    isSuccess: isSuccess,\n    setIsSuccess: setIsSuccess,\n    handleTab: handleTab,\n    handleCategory: handleCategory,\n    handleSubCategory: handleSubCategory,\n    adTypes: adTypes,\n    tabValue: tabValue,\n    createAdvrt: createAdvrt,\n    categoriesList: categoriesList\n  })));\n};\n\n_s(CreateAdvrtContainer, \"VGZF2YjnFHE2XDGgeIreIclkFRU=\", false, function () {\n  return [useSelector, useFormik];\n});\n\n_c = CreateAdvrtContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdvrtContainer\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/CreateAdvrtContainer.tsx"],"names":["React","useEffect","useState","Container","useSelector","i18n","userAPI","MainLayout","CreateAdvrt","dataPrepare","useFormik","createAdvrtSchema","isRequired","autoSelectKeys","textFieldKeys","initCreateAdState","isFetch","error","adType","id","name","currency","expired","category","childs","subCategory","data","initFormFields","title","safe_deal","delivery","exchange","location","files","description","phone","price","avalTime","isActive","start_time","end_time","week","auction","duration","expiration_at","offer_the_price","auto_renewal","reserve_price","price_by_now","value","display_phone","adParams","safety","multimedia","assistant","exterior","car_climate","airbags","CreateAdvrtContainer","lang","language","categoriesList","categories","list","tabValue","setTabValue","adTypes","setAdTypes","createAdvrt","setCreateAdvrt","isForm","setIsForm","isPreview","setIsPreview","isSuccess","setIsSuccess","formik","initialValues","validationSchema","onSubmit","values","setValues","setErrors","adParamsLen","Object","keys","length","getAdTypes","handleTab","_","newValue","setAdType","filter","type","selectedAdType","handleCategory","handleSubCategory","undefined","getAdDataForCreate","preparedData","message","getFormData","form","FormData","set","toString","Number","forEach","file","append","day","i","key","validKey","replace","some","k","Array","isArray","setReqValues","reqVals","reqParamsVals","adParamsVals","cur","console","log"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {Container} from '@material-ui/core';\r\nimport {useSelector} from \"react-redux\";\r\nimport {i18n} from \"@root/i18n\";\r\nimport {userAPI} from '@src/api/api';\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {MainLayout} from \"@src/components/MainLayout\";\r\nimport {CreateAdvrt} from \"./CreateAdvrt\";\r\nimport {dataPrepare} from \"../create_advrt/advrt_form/advrt_params/helpers\";\r\nimport {CreateAdFields} from \"@root/interfaces/Advertisement\";\r\nimport {useFormik} from \"formik\";\r\nimport {createAdvrtSchema, isRequired} from \"@root/validation_schemas/createAdvrtSchema\";\r\nimport {autoSelectKeys, textFieldKeys} from \"@src/components/advertisement/create_advrt/advrt_form/AdvrtFormContainer\";\r\n\r\n\r\nconst initCreateAdState = {\r\n    isFetch: false,\r\n    error: null,\r\n    adType: {\r\n        id: null,\r\n        name: '',\r\n        currency: [],\r\n        expired: [],\r\n    },\r\n    category: {\r\n        id: null,\r\n        name: '',\r\n        childs: []\r\n    },\r\n    subCategory: {\r\n        id: null,\r\n        name: '',\r\n        data: {}\r\n    }\r\n};\r\n\r\n\r\nconst initFormFields: CreateAdFields = {\r\n    isFetch: false,\r\n    error: null,\r\n    title: '',\r\n    safe_deal: false,\r\n    delivery: false,\r\n    exchange: false,\r\n    location: null,\r\n    files: [],\r\n    description: '',\r\n    phone: '',\r\n    price: '',\r\n    currency: {\r\n        id: null,\r\n        name: ''\r\n    },\r\n    avalTime: {\r\n        isActive: false,\r\n        start_time: '00:00',\r\n        end_time: '00:00',\r\n        week: [\r\n            {id: 1, name: 'Пн'},\r\n            {id: 2, name: 'Вт'},\r\n            {id: 3, name: 'Ср'},\r\n            {id: 4, name: 'Чт'},\r\n            {id: 5, name: 'Пт'},\r\n            {id: 6, name: 'Сб'},\r\n            {id: 7, name: 'Вс'}\r\n        ],\r\n    },\r\n    auction: {\r\n        duration: {\r\n            id: null,\r\n            expiration_at: null\r\n        },\r\n        offer_the_price: false,\r\n        auto_renewal: false,\r\n        reserve_price: '',\r\n        price_by_now: {\r\n            isActive: false,\r\n            value: ''\r\n        },\r\n        display_phone: false,\r\n    },\r\n    adParams: {\r\n        safety: [],\r\n        multimedia: [],\r\n        assistant: [],\r\n        exterior: [],\r\n        car_climate: [],\r\n        airbags: [],\r\n    }\r\n};\r\n\r\nexport const CreateAdvrtContainer: FC<void> = () => {\r\n    const lang = i18n.language;\r\n\r\n    const categoriesList = useSelector(({categories}: RootState) => categories.list);\r\n\r\n    const [tabValue, setTabValue] = useState(1);\r\n\r\n    const [adTypes, setAdTypes] = useState([]);\r\n\r\n    const [createAdvrt, setCreateAdvrt] = useState(initCreateAdState);\r\n    const {adType, category, subCategory} = createAdvrt;\r\n\r\n    const [isForm, setIsForm] = useState(false);\r\n\r\n    const [isPreview, setIsPreview] = useState(false);\r\n\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        initialValues: initFormFields,\r\n        validationSchema: createAdvrtSchema,\r\n        onSubmit\r\n    });\r\n\r\n    const {values, setValues, setErrors} = formik;\r\n    const {adParams} = values;\r\n    const adParamsLen = Object.keys(adParams).length;\r\n\r\n    const getAdTypes = async () => {\r\n        try {\r\n            setCreateAdvrt({...createAdvrt, isFetch: true});\r\n\r\n            const adTypes = await userAPI.getAdTypes(lang);\r\n\r\n            setCreateAdvrt({...createAdvrt, isFetch: false});\r\n\r\n            setAdTypes(adTypes);\r\n            setCreateAdvrt({\r\n                ...createAdvrt,\r\n                adType: adTypes[0]\r\n            })\r\n        } catch (error) {\r\n            setCreateAdvrt({...createAdvrt, error});\r\n        }\r\n    };\r\n\r\n    const handleTab = (_, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    const setAdType = () => {\r\n        const [selectedAdType] = adTypes.filter(type => type.id === tabValue);\r\n\r\n        setCreateAdvrt({\r\n            ...createAdvrt,\r\n            adType: selectedAdType\r\n        });\r\n    };\r\n\r\n    const handleCategory = (category) => () => {\r\n        setCreateAdvrt({\r\n            ...createAdvrt,\r\n            error: null,\r\n            category\r\n        });\r\n    };\r\n\r\n    const handleSubCategory = (id, name) => async () => {\r\n        try {\r\n            if (id !== undefined) {\r\n                setCreateAdvrt({\r\n                    ...createAdvrt,\r\n                    isFetch: true\r\n                });\r\n\r\n                const data = await userAPI.getAdDataForCreate(category.id, id, lang);\r\n                const preparedData: any = dataPrepare(data, adParams);\r\n\r\n                setIsForm(true);\r\n\r\n                setCreateAdvrt({\r\n                    ...createAdvrt,\r\n                    isFetch: false,\r\n                    subCategory: {id, name, data: preparedData}\r\n                });\r\n            } else {\r\n                setIsForm(true);\r\n                setCreateAdvrt({\r\n                    ...initCreateAdState,\r\n                    adType: createAdvrt.adType,\r\n                    category: createAdvrt.category\r\n                });\r\n            }\r\n        } catch ({message}) {\r\n            setCreateAdvrt({\r\n                ...createAdvrt,\r\n                error: message\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    const getFormData = (data: CreateAdFields) => {\r\n        const form = new FormData();\r\n        const {\r\n            avalTime,\r\n            location,\r\n            files,\r\n            adParams,\r\n            auction\r\n        } = data;\r\n\r\n        form.set('ads_type_id', adType.id.toString());\r\n        form.set('parent_categories_id', category.id.toString());\r\n        if (subCategory.id) {\r\n            form.set('child_categories_id', subCategory.id.toString());\r\n        }\r\n        form.set('title', data.title);\r\n        form.set('safe_deal', Number(data.safe_deal).toString());\r\n        form.set('delivery', Number(data.delivery).toString());\r\n        form.set('exchange', Number(data.exchange).toString());\r\n        form.set('phone', data.phone);\r\n        form.set('description', data.description);\r\n        form.set('price', data.price);\r\n        form.set('currency_id', data.currency.id.toString());\r\n\r\n        files.forEach(({file}: any) => form.append('files[]', file, file.name));\r\n\r\n        if (avalTime.isActive) {\r\n            avalTime.week.forEach((day, i) => (\r\n                form.append(`week[${i}]`, day.id.toString())\r\n            ));\r\n            form.set('start_time', avalTime.start_time.toString());\r\n            form.set('end_time', avalTime.end_time.toString());\r\n        }\r\n\r\n        for (const key in location) {\r\n            if (typeof location[key] === 'number') {\r\n                form.set(key, Number(location[key]).toString());\r\n            }\r\n        }\r\n\r\n        for (let key in adParams) {\r\n            const value = adParams[key];\r\n            if (value) {\r\n                if (typeof value === 'string') {\r\n                    const validKey = key.replace('_value', '');\r\n                    if (textFieldKeys.some(k => k === validKey)) {\r\n                        key = validKey;\r\n                    }\r\n                    form.set(key, value);\r\n                } else if (Array.isArray(value)) {\r\n                    value.forEach((value, i) => (\r\n                        form.append(`${key}[${i}]`, value.id))\r\n                    )\r\n                } else {\r\n                    if (value.id) {\r\n                        switch (key) {\r\n                            case 'models' :\r\n                                key = 'model';\r\n                                break;\r\n                            case 'colors' :\r\n                                key = 'color';\r\n                        }\r\n                        form.set(`${key}_id`, value.id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (adType.id !== 1) {\r\n            form.set('duration_id', auction.duration.id.toString());\r\n            form.set('display_phone', Number(auction.display_phone).toString());\r\n            if (adType.id === 3) {\r\n                form.set('reserve_price', auction.reserve_price);\r\n                form.set('auto_renewal', Number(auction.auto_renewal).toString());\r\n                form.set('offer_the_price', Number(auction.offer_the_price).toString());\r\n                if (auction.price_by_now.isActive) {\r\n                    form.set('price_by_now', auction.price_by_now.value);\r\n                }\r\n            }\r\n        }\r\n\r\n        // for (const key of form.entries()) {\r\n        //     console.log(key[0] + '-' + key[1]);\r\n        // }\r\n\r\n        return form;\r\n    };\r\n\r\n    async function onSubmit(values: CreateAdFields) {\r\n        try {\r\n            if (!isPreview) {\r\n                setIsPreview(true);\r\n            } else {\r\n                setValues({...values, isFetch: true});\r\n\r\n                const data = getFormData(values);\r\n                await userAPI.createAdvrt(data);\r\n\r\n                setValues({...values, isFetch: false});\r\n\r\n                setIsSuccess(true);\r\n                setIsPreview(false);\r\n            }\r\n        } catch (e) {\r\n            setValues({...values, error: e.message});\r\n        }\r\n    }\r\n\r\n    const setReqValues = () => {\r\n        const reqVals = {};\r\n        const reqParamsVals = {};\r\n\r\n        const adParamsVals = subCategory.data;\r\n\r\n        if (category.id === 11) {\r\n            reqVals['price'] = '0';\r\n        }\r\n\r\n        if (adType.currency.length !== 0) {\r\n            reqVals['currency'] = adType.currency.filter(cur => cur.name === 'sum')[0];\r\n        }\r\n\r\n        if (adType.id !== 1) {\r\n            reqVals['auction'] = {\r\n                ...values.auction,\r\n                duration: adType.expired[0]\r\n            };\r\n        }\r\n\r\n        Object.keys(adParamsVals).forEach(key => {\r\n            if (isRequired(key) && adParams[key] === undefined) {\r\n                if (key === 'manufacturer' && subCategory.id == 1) {\r\n                    reqParamsVals['models'] = {id: null, name: 'Не выбрано'};\r\n                }\r\n                if (Array.isArray(adParamsVals[key])) {\r\n                    reqParamsVals[key] = {id: null, name: 'Не выбрано'};\r\n                } else {\r\n                    reqParamsVals[key] = adParamsVals[key];\r\n                }\r\n            } else if (autoSelectKeys.some(k => k === key)) {\r\n                if (textFieldKeys.some(k => k === key)) {\r\n                    reqParamsVals[`${key}_value`] = '';\r\n                }\r\n                reqParamsVals[key] = adParamsVals[key][0];\r\n            }\r\n        });\r\n\r\n        setValues({\r\n            ...initFormFields,\r\n            ...reqVals,\r\n            adParams: {\r\n                ...adParams,\r\n                ...reqParamsVals\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAdTypes();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        adTypes.length && setAdType();\r\n    }, [tabValue]);\r\n\r\n    useEffect(() => {\r\n        setReqValues();\r\n        setErrors({});\r\n    }, [subCategory.id, subCategory.name, adParamsLen]);\r\n\r\n    console.log(createAdvrt)\r\n    console.log(values)\r\n    return (\r\n        <MainLayout>\r\n            <Container maxWidth=\"lg\">\r\n                <CreateAdvrt\r\n                    formik={formik}\r\n                    isForm={isForm}\r\n                    setIsForm={setIsForm}\r\n                    isSuccess={isSuccess}\r\n                    setIsSuccess={setIsSuccess}\r\n                    handleTab={handleTab}\r\n                    handleCategory={handleCategory}\r\n                    handleSubCategory={handleSubCategory}\r\n                    adTypes={adTypes}\r\n                    tabValue={tabValue}\r\n                    createAdvrt={createAdvrt}\r\n                    categoriesList={categoriesList}\r\n                />\r\n            </Container>\r\n        </MainLayout>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}