{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Router } from \"@root/i18n\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAdOrLotCtgryAction } from '@src/redux/slices/createAdOrLotSlice';\nimport { MenuItem, Typography } from \"@material-ui/core\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { CustomFormikMenu } from \"@src/components/elements/custom_formik_menu/CustomFormikMenu\";\nimport { adTypeAndCtgrySchema } from \"@src/validation_schemas/validationSchemas\";\nimport { useStyles } from './useStyles';\nconst initValues = {\n  type: {\n    isLot: null,\n    name: 'Выберите тип'\n  },\n  category: {\n    id: null,\n    name: 'Выберите категорию'\n  }\n};\nexport const CreateAdModalForm = props => {\n  const {\n    handleCloseModal\n  } = props;\n  const dispatch = useDispatch();\n  const categoriesList = useSelector(({\n    categories\n  }) => categories.list);\n  const {\n    0: typeAnchor,\n    1: setTypeAnchor\n  } = useState(null);\n  const {\n    0: estateAnchor,\n    1: setEstateAnchor\n  } = useState(null);\n\n  const handleMenuOpen = anchor => e => {\n    anchor(e.currentTarget);\n  };\n\n  const handleMenuClose = anchor => () => {\n    anchor(null);\n  };\n\n  const handleClickMenuItem = (handleSetValue, values, newValue) => () => {\n    handleSetValue(_objectSpread(_objectSpread({}, values), newValue));\n  };\n\n  const submit = values => {\n    console.log(values);\n    dispatch(setAdOrLotCtgryAction(values));\n    Router.push('/create_advertisement');\n  };\n\n  const classes = useStyles();\n  return __jsx(Formik, {\n    initialValues: initValues,\n    validationSchema: adTypeAndCtgrySchema,\n    onSubmit: submit\n  }, props => {\n    const {\n      errors,\n      touched,\n      values,\n      setValues,\n      handleBlur\n    } = props;\n    return __jsx(Form, {\n      className: classes.root\n    }, __jsx(\"div\", {\n      className: \"menu-btns\"\n    }, __jsx(\"div\", null, __jsx(Typography, null, errors.type && touched.type ? errors.isLot : ''), __jsx(ButtonComponent, {\n      onClick: handleMenuOpen(setTypeAnchor)\n    }, values.isLot), __jsx(CustomFormikMenu, {\n      className: classes.menu,\n      name: values,\n      anchorEl: typeAnchor,\n      open: Boolean(typeAnchor),\n      onClose: handleMenuClose(setTypeAnchor),\n      setValues: setValues\n    }, __jsx(MenuItem, {\n      value: 1,\n      id: \"\\u041E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\",\n      onClick: handleClickMenuItem(setValues, values, {\n        name: 'Объявление',\n        isLot: false\n      }),\n      onBlur: handleBlur\n    }, __jsx(Typography, null, \"\\u041E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\")), __jsx(MenuItem, {\n      value: 2,\n      id: \"\\u0422\\u043E\\u0440\\u0433\",\n      onClick: handleClickMenuItem(setValues, values, {\n        name: 'Торг',\n        isLot: true\n      }),\n      onBlur: handleBlur\n    }, __jsx(Typography, null, \"\\u0422\\u043E\\u0440\\u0433\")))), __jsx(\"div\", null, __jsx(Typography, null, errors.category && touched.category ? errors.category.id : ''), __jsx(ButtonComponent, {\n      onClick: handleMenuOpen(setEstateAnchor)\n    }, values.category.name), __jsx(CustomFormikMenu, {\n      name: values,\n      anchorEl: estateAnchor,\n      open: Boolean(estateAnchor),\n      onClose: handleMenuClose(setEstateAnchor),\n      setValues: setValues\n    }, categoriesList.map(category => {\n      const {\n        id,\n        name\n      } = category;\n      return __jsx(MenuItem, {\n        key: id,\n        id: name,\n        value: id,\n        onBlur: handleBlur,\n        onClick: handleClickMenuItem(setValues, values, {\n          category\n        })\n      }, __jsx(Typography, null, name));\n    })))), __jsx(\"div\", {\n      className: \"form-btns\"\n    }, __jsx(ButtonComponent, {\n      onClick: handleCloseModal\n    }, __jsx(Typography, null, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\")), __jsx(ButtonComponent, {\n      type: \"submit\"\n    }, __jsx(Typography, null, \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C\"))));\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/createAdModalForm/CreateAdModalForm.tsx"],"names":["React","useState","Formik","Form","Router","useDispatch","useSelector","setAdOrLotCtgryAction","MenuItem","Typography","ButtonComponent","CustomFormikMenu","adTypeAndCtgrySchema","useStyles","initValues","type","isLot","name","category","id","CreateAdModalForm","props","handleCloseModal","dispatch","categoriesList","categories","list","typeAnchor","setTypeAnchor","estateAnchor","setEstateAnchor","handleMenuOpen","anchor","e","currentTarget","handleMenuClose","handleClickMenuItem","handleSetValue","values","newValue","submit","console","log","push","classes","errors","touched","setValues","handleBlur","root","menu","Boolean","map"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,QAA3B;AACA,SAAQC,MAAR,QAAqB,YAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,qBAAR,QAAoC,sCAApC;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,mBAAnC;AACA,SAAQC,eAAR,QAA8B,wCAA9B;AACA,SAAQC,gBAAR,QAA+B,8DAA/B;AACA,SAAQC,oBAAR,QAAmC,2CAAnC;AAEA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,IADL;AAEFC,IAAAA,IAAI,EAAE;AAFJ,GADS;AAKfC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,EAAE,EAAE,IADE;AAENF,IAAAA,IAAI,EAAE;AAFA;AALK,CAAnB;AAWA,OAAO,MAAMG,iBAAiB,GAAIC,KAAD,IAAW;AACxC,QAAM;AAACC,IAAAA;AAAD,MAAqBD,KAA3B;AAEA,QAAME,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,cAAc,GAAGlB,WAAW,CAAC,CAAC;AAACmB,IAAAA;AAAD,GAAD,KAA6BA,UAAU,CAACC,IAAzC,CAAlC;AAEA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8B3B,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAAA,OAAC4B,YAAD;AAAA,OAAeC;AAAf,MAAkC7B,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAM8B,cAAc,GAAIC,MAAD,IAAaC,CAAD,IAAO;AACtCD,IAAAA,MAAM,CAACC,CAAC,CAACC,aAAH,CAAN;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAIH,MAAD,IAAY,MAAM;AACtCA,IAAAA,MAAM,CAAC,IAAD,CAAN;AACH,GAFD;;AAIA,QAAMI,mBAAmB,GAAG,CAACC,cAAD,EAAiBC,MAAjB,EAAyBC,QAAzB,KAAsC,MAAM;AACpEF,IAAAA,cAAc,iCAAKC,MAAL,GAAgBC,QAAhB,EAAd;AACH,GAFD;;AAGA,QAAMC,MAAM,GAAIF,MAAD,IAAY;AACvBG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAf,IAAAA,QAAQ,CAAChB,qBAAqB,CAAC+B,MAAD,CAAtB,CAAR;AACAlC,IAAAA,MAAM,CAACuC,IAAP,CAAY,uBAAZ;AACH,GAJD;;AAMA,QAAMC,OAAO,GAAG/B,SAAS,EAAzB;AACA,SACI,MAAC,MAAD;AAAQ,IAAA,aAAa,EAAEC,UAAvB;AAAmC,IAAA,gBAAgB,EAAEF,oBAArD;AAA2E,IAAA,QAAQ,EAAE4B;AAArF,KACMnB,KAAD,IAAW;AACR,UAAM;AACFwB,MAAAA,MADE;AAEFC,MAAAA,OAFE;AAGFR,MAAAA,MAHE;AAIFS,MAAAA,SAJE;AAKFC,MAAAA;AALE,QAMF3B,KANJ;AAOA,WACI,MAAC,IAAD;AAAM,MAAA,SAAS,EAAEuB,OAAO,CAACK;AAAzB,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,mBACI,MAAC,UAAD,QAAaJ,MAAM,CAAC9B,IAAP,IAAe+B,OAAO,CAAC/B,IAAvB,GAA8B8B,MAAM,CAAC7B,KAArC,GAA6C,EAA1D,CADJ,EAEI,MAAC,eAAD;AAAiB,MAAA,OAAO,EAAEe,cAAc,CAACH,aAAD;AAAxC,OACKU,MAAM,CAACtB,KADZ,CAFJ,EAKI,MAAC,gBAAD;AACI,MAAA,SAAS,EAAE4B,OAAO,CAACM,IADvB;AAEI,MAAA,IAAI,EAAEZ,MAFV;AAGI,MAAA,QAAQ,EAAEX,UAHd;AAII,MAAA,IAAI,EAAEwB,OAAO,CAACxB,UAAD,CAJjB;AAKI,MAAA,OAAO,EAAEQ,eAAe,CAACP,aAAD,CAL5B;AAMI,MAAA,SAAS,EAAEmB;AANf,OAQI,MAAC,QAAD;AACI,MAAA,KAAK,EAAE,CADX;AAEI,MAAA,EAAE,EAAC,8DAFP;AAGI,MAAA,OAAO,EAAEX,mBAAmB,CAACW,SAAD,EAAYT,MAAZ,EAAoB;AAC5CrB,QAAAA,IAAI,EAAE,YADsC;AAE5CD,QAAAA,KAAK,EAAE;AAFqC,OAApB,CAHhC;AAOI,MAAA,MAAM,EAAEgC;AAPZ,OASI,MAAC,UAAD,uEATJ,CARJ,EAmBI,MAAC,QAAD;AACI,MAAA,KAAK,EAAE,CADX;AAEI,MAAA,EAAE,EAAC,0BAFP;AAGI,MAAA,OAAO,EAAEZ,mBAAmB,CAACW,SAAD,EAAYT,MAAZ,EAAoB;AAC5CrB,QAAAA,IAAI,EAAE,MADsC;AAE5CD,QAAAA,KAAK,EAAE;AAFqC,OAApB,CAHhC;AAOI,MAAA,MAAM,EAAEgC;AAPZ,OASI,MAAC,UAAD,mCATJ,CAnBJ,CALJ,CADJ,EAsCI,mBACI,MAAC,UAAD,QAAaH,MAAM,CAAC3B,QAAP,IAAmB4B,OAAO,CAAC5B,QAA3B,GAAsC2B,MAAM,CAAC3B,QAAP,CAAgBC,EAAtD,GAA2D,EAAxE,CADJ,EAEI,MAAC,eAAD;AAAiB,MAAA,OAAO,EAAEY,cAAc,CAACD,eAAD;AAAxC,OACKQ,MAAM,CAACpB,QAAP,CAAgBD,IADrB,CAFJ,EAKI,MAAC,gBAAD;AACI,MAAA,IAAI,EAAEqB,MADV;AAEI,MAAA,QAAQ,EAAET,YAFd;AAGI,MAAA,IAAI,EAAEsB,OAAO,CAACtB,YAAD,CAHjB;AAII,MAAA,OAAO,EAAEM,eAAe,CAACL,eAAD,CAJ5B;AAKI,MAAA,SAAS,EAAEiB;AALf,OAQQvB,cAAc,CAAC4B,GAAf,CAAoBlC,QAAD,IAAc;AAC7B,YAAM;AAACC,QAAAA,EAAD;AAAKF,QAAAA;AAAL,UAAaC,QAAnB;AACA,aACI,MAAC,QAAD;AACI,QAAA,GAAG,EAAEC,EADT;AAEI,QAAA,EAAE,EAAEF,IAFR;AAGI,QAAA,KAAK,EAAEE,EAHX;AAII,QAAA,MAAM,EAAE6B,UAJZ;AAKI,QAAA,OAAO,EAAEZ,mBAAmB,CACxBW,SADwB,EAExBT,MAFwB,EAGxB;AAACpB,UAAAA;AAAD,SAHwB;AALhC,SAWI,MAAC,UAAD,QAAaD,IAAb,CAXJ,CADJ;AAeH,KAjBD,CARR,CALJ,CAtCJ,CADJ,EA0EI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,MAAC,eAAD;AAAiB,MAAA,OAAO,EAAEK;AAA1B,OACI,MAAC,UAAD,+CADJ,CADJ,EAII,MAAC,eAAD;AAAiB,MAAA,IAAI,EAAC;AAAtB,OACI,MAAC,UAAD,uEADJ,CAJJ,CA1EJ,CADJ;AAqFH,GA9FL,CADJ;AAkGH,CA7HM","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Formik, Form} from \"formik\";\r\nimport {Router} from \"@root/i18n\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setAdOrLotCtgryAction} from '@src/redux/slices/createAdOrLotSlice';\r\nimport {MenuItem, Typography} from \"@material-ui/core\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport {CustomFormikMenu} from \"@src/components/elements/custom_formik_menu/CustomFormikMenu\";\r\nimport {adTypeAndCtgrySchema} from \"@src/validation_schemas/validationSchemas\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {useStyles} from './useStyles';\r\n\r\nconst initValues = {\r\n    type: {\r\n        isLot: null,\r\n        name: 'Выберите тип'\r\n    },\r\n    category: {\r\n        id: null,\r\n        name: 'Выберите категорию'\r\n    }\r\n};\r\n\r\nexport const CreateAdModalForm = (props) => {\r\n    const {handleCloseModal} = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const categoriesList = useSelector(({categories}: RootState) => categories.list);\r\n\r\n    const [typeAnchor, setTypeAnchor] = useState(null);\r\n    const [estateAnchor, setEstateAnchor] = useState(null);\r\n\r\n    const handleMenuOpen = (anchor) => (e) => {\r\n        anchor(e.currentTarget)\r\n    };\r\n\r\n    const handleMenuClose = (anchor) => () => {\r\n        anchor(null);\r\n    };\r\n\r\n    const handleClickMenuItem = (handleSetValue, values, newValue) => () => {\r\n        handleSetValue({...values, ...newValue});\r\n    };\r\n    const submit = (values) => {\r\n        console.log(values);\r\n        dispatch(setAdOrLotCtgryAction(values));\r\n        Router.push('/create_advertisement');\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Formik initialValues={initValues} validationSchema={adTypeAndCtgrySchema} onSubmit={submit}>\r\n            {(props) => {\r\n                const {\r\n                    errors,\r\n                    touched,\r\n                    values,\r\n                    setValues,\r\n                    handleBlur,\r\n                } = props;\r\n                return (\r\n                    <Form className={classes.root}>\r\n                        <div className='menu-btns'>\r\n                            <div>\r\n                                <Typography>{errors.type && touched.type ? errors.isLot : ''}</Typography>\r\n                                <ButtonComponent onClick={handleMenuOpen(setTypeAnchor)}>\r\n                                    {values.isLot}\r\n                                </ButtonComponent>\r\n                                <CustomFormikMenu\r\n                                    className={classes.menu}\r\n                                    name={values}\r\n                                    anchorEl={typeAnchor}\r\n                                    open={Boolean(typeAnchor)}\r\n                                    onClose={handleMenuClose(setTypeAnchor)}\r\n                                    setValues={setValues}\r\n                                >\r\n                                    <MenuItem\r\n                                        value={1}\r\n                                        id='Объявление'\r\n                                        onClick={handleClickMenuItem(setValues, values, {\r\n                                            name: 'Объявление',\r\n                                            isLot: false\r\n                                        })}\r\n                                        onBlur={handleBlur}\r\n                                    >\r\n                                        <Typography>Объявление</Typography>\r\n                                    </MenuItem>\r\n                                    <MenuItem\r\n                                        value={2}\r\n                                        id='Торг'\r\n                                        onClick={handleClickMenuItem(setValues, values, {\r\n                                            name: 'Торг',\r\n                                            isLot: true\r\n                                        })}\r\n                                        onBlur={handleBlur}\r\n                                    >\r\n                                        <Typography>Торг</Typography>\r\n                                    </MenuItem>\r\n                                </CustomFormikMenu>\r\n                            </div>\r\n                            <div>\r\n                                <Typography>{errors.category && touched.category ? errors.category.id : ''}</Typography>\r\n                                <ButtonComponent onClick={handleMenuOpen(setEstateAnchor)}>\r\n                                    {values.category.name}\r\n                                </ButtonComponent>\r\n                                <CustomFormikMenu\r\n                                    name={values}\r\n                                    anchorEl={estateAnchor}\r\n                                    open={Boolean(estateAnchor)}\r\n                                    onClose={handleMenuClose(setEstateAnchor)}\r\n                                    setValues={setValues}\r\n                                >\r\n                                    {\r\n                                        categoriesList.map((category) => {\r\n                                            const {id, name} = category\r\n                                            return (\r\n                                                <MenuItem\r\n                                                    key={id}\r\n                                                    id={name}\r\n                                                    value={id}\r\n                                                    onBlur={handleBlur}\r\n                                                    onClick={handleClickMenuItem(\r\n                                                        setValues,\r\n                                                        values,\r\n                                                        {category}\r\n                                                    )}\r\n                                                >\r\n                                                    <Typography>{name}</Typography>\r\n                                                </MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </CustomFormikMenu>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-btns'>\r\n                            <ButtonComponent onClick={handleCloseModal}>\r\n                                <Typography>Отмена</Typography>\r\n                            </ButtonComponent>\r\n                            <ButtonComponent type='submit'>\r\n                                <Typography>Продолжить</Typography>\r\n                            </ButtonComponent>\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}