{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport { TextField, FormControl } from '@material-ui/core'; // styles\n\nimport { useStyles } from './useStyles';\n\nfunction TextMaskCustom(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: [/[1-9]/] // placeholderChar={'+(998) ___ __ __'}\n    ,\n    showMask: true\n  }));\n}\n\nexport const FormattedInput = props => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    textmask: ''\n  });\n\n  const handleChange = event => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(FormControl, {\n    fullWidth: true\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    value: values.textmask,\n    onChange: handleChange,\n    name: \"textmask\",\n    id: \"formatted-text-mask-input\",\n    inputComponent: TextMaskCustom\n  })));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/maskedInput/MaskedInput.tsx"],"names":["React","MaskedInput","TextField","FormControl","useStyles","TextMaskCustom","props","inputRef","other","ref","inputElement","FormattedInput","classes","values","setValues","useState","textmask","handleChange","event","target","name","value","root"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,mBAAvC,C,CAEA;;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAyBD,KAA/B;AAAA,QAAqBE,KAArB,4BAA+BF,KAA/B;;AAEA,SACI,MAAC,WAAD,eACQE,KADR;AAEI,IAAA,GAAG,EAAGC,GAAD,IAAS;AACVF,MAAAA,QAAQ,CAACE,GAAG,GAAGA,GAAG,CAACC,YAAP,GAAsB,IAA1B,CAAR;AACH,KAJL;AAKI,IAAA,IAAI,EAAE,CAAC,OAAD,CALV,CAMI;AANJ;AAOI,IAAA,QAAQ;AAPZ,KADJ;AAWH;;AAED,OAAO,MAAMC,cAAc,GAAIL,KAAD,IAAW;AACrC,QAAMM,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBd,KAAK,CAACe,QAAN,CAAe;AACvCC,IAAAA,QAAQ,EAAE;AAD6B,GAAf,CAA5B;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BJ,IAAAA,SAAS,iCACFD,MADE;AAEL,OAACK,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF7B,OAAT;AAIH,GALD;;AAOA,SACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACU;AAAxB,KACI,MAAC,WAAD;AAAa,IAAA,SAAS;AAAtB,KACI,MAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAET,MAAM,CAACG,QAFlB;AAGI,IAAA,QAAQ,EAAEC,YAHd;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,EAAE,EAAC,2BALP;AAMI,IAAA,cAAc,EAAEZ;AANpB,IADJ,CADJ,CADJ;AAcH,CA3BM","sourcesContent":["import React from 'react'\r\nimport MaskedInput from 'react-text-mask'\r\nimport { TextField, FormControl } from '@material-ui/core'\r\n\r\n// styles\r\nimport { useStyles } from './useStyles'\r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null)\r\n            }}\r\n            mask={[/[1-9]/]}\r\n            // placeholderChar={'+(998) ___ __ __'}\r\n            showMask\r\n        />\r\n    )\r\n}\r\n\r\nexport const FormattedInput = (props) => {\r\n    const classes = useStyles()\r\n    const [values, setValues] = React.useState({\r\n        textmask: '',\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        setValues({\r\n            ...values,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FormControl fullWidth>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    value={values.textmask}\r\n                    onChange={handleChange}\r\n                    name=\"textmask\"\r\n                    id=\"formatted-text-mask-input\"\r\n                    inputComponent={TextMaskCustom}\r\n                />\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}