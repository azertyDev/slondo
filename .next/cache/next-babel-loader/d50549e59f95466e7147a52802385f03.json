{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nexport var CustomMenu = function CustomMenu(props) {\n  _s();\n\n  var items = props.items,\n      onClick = props.onClick,\n      onBlur = props.onBlur;\n\n  var _useState = useState(null),\n      anchor = _useState[0],\n      setAnchor = _useState[1];\n\n  var handleMenuOpen = function handleMenuOpen(e) {\n    setAnchor(e.currentTarget);\n  };\n\n  var handleMenuClose = function handleMenuClose() {\n    setAnchor(null);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ButtonComponent, {\n    style: {\n      backgroundColor: '#fafafa',\n      border: '1px solid #4e4e4e',\n      color: '#4e4e4e'\n    },\n    onClick: handleMenuOpen\n  }, props.valueName), __jsx(Menu, {\n    anchorEl: anchor,\n    open: Boolean(anchor),\n    onClose: handleMenuClose\n  }, items.map(function (item) {\n    return __jsx(MenuItem, {\n      key: item.id,\n      id: item.id,\n      onBlur: onBlur,\n      onClick: onClick(item, setAnchor)\n    }, __jsx(Typography, null, item.name));\n  })));\n};\n\n_s(CustomMenu, \"wxYvbWVl4wPDiI7jlInCOrjrm3Y=\");\n\n_c = CustomMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomMenu\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/custom_menu/CustomMenu.tsx"],"names":["React","useState","Menu","MenuItem","Typography","ButtonComponent","CustomMenu","props","items","onClick","onBlur","anchor","setAnchor","handleMenuOpen","e","currentTarget","handleMenuClose","backgroundColor","border","color","valueName","Boolean","map","item","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,IAAR,EAAcC,QAAd,EAAwBC,UAAxB,QAAyC,mBAAzC;AAEA,SAAQC,eAAR,QAA8B,wCAA9B;AAGA,OAAO,IAAMC,UAA+B,GAAG,SAAlCA,UAAkC,CAACC,KAAD,EAAW;AAAA;;AAAA,MAC/CC,KAD+C,GACrBD,KADqB,CAC/CC,KAD+C;AAAA,MACxCC,OADwC,GACrBF,KADqB,CACxCE,OADwC;AAAA,MAC/BC,MAD+B,GACrBH,KADqB,CAC/BG,MAD+B;;AAAA,kBAG1BT,QAAQ,CAAC,IAAD,CAHkB;AAAA,MAG/CU,MAH+C;AAAA,MAGvCC,SAHuC;;AAKtD,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAO;AAC1BF,IAAAA,SAAS,CAACE,CAAC,CAACC,aAAH,CAAT;AACH,GAFD;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAFD;;AAIA,SACI,4BACI,MAAC,eAAD;AACI,IAAA,KAAK,EAAE;AACHK,MAAAA,eAAe,EAAE,SADd;AAEHC,MAAAA,MAAM,EAAE,mBAFL;AAGHC,MAAAA,KAAK,EAAE;AAHJ,KADX;AAMI,IAAA,OAAO,EAAEN;AANb,KAQKN,KAAK,CAACa,SARX,CADJ,EAWI,MAAC,IAAD;AACI,IAAA,QAAQ,EAAET,MADd;AAEI,IAAA,IAAI,EAAEU,OAAO,CAACV,MAAD,CAFjB;AAGI,IAAA,OAAO,EAAEK;AAHb,KAMQR,KAAK,CAACc,GAAN,CAAU,UAAAC,IAAI;AAAA,WACV,MAAC,QAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,MAAA,EAAE,EAAED,IAAI,CAACC,EAFb;AAGI,MAAA,MAAM,EAAEd,MAHZ;AAII,MAAA,OAAO,EAAED,OAAO,CAACc,IAAD,EAAOX,SAAP;AAJpB,OAMI,MAAC,UAAD,QAAaW,IAAI,CAACE,IAAlB,CANJ,CADU;AAAA,GAAd,CANR,CAXJ,CADJ;AAgCH,CA7CM;;GAAMnB,U;;KAAAA,U","sourcesContent":["import React, {FC, useState} from \"react\";\r\nimport {Menu, MenuItem, Typography} from \"@material-ui/core\";\r\nimport {CustomMenuProps} from \"@root/interfaces/CustomMenuProps\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\n\r\n\r\nexport const CustomMenu: FC<CustomMenuProps> = (props) => {\r\n    const {items, onClick, onBlur} = props;\r\n\r\n    const [anchor, setAnchor] = useState(null);\r\n\r\n    const handleMenuOpen = (e) => {\r\n        setAnchor(e.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchor(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ButtonComponent\r\n                style={{\r\n                    backgroundColor: '#fafafa',\r\n                    border: '1px solid #4e4e4e',\r\n                    color: '#4e4e4e',\r\n                }}\r\n                onClick={handleMenuOpen}\r\n            >\r\n                {props.valueName}\r\n            </ButtonComponent>\r\n            <Menu\r\n                anchorEl={anchor}\r\n                open={Boolean(anchor)}\r\n                onClose={handleMenuClose}\r\n            >\r\n                {\r\n                    items.map(item => (\r\n                        <MenuItem\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            onBlur={onBlur}\r\n                            onClick={onClick(item, setAnchor)}\r\n                        >\r\n                            <Typography>{item.name}</Typography>\r\n                        </MenuItem>\r\n                    ))\r\n                }\r\n            </Menu>\r\n        </>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}