{"ast":null,"code":"import createSagaMiddleware from 'redux-saga';\nvar sagaMiddleware = createSagaMiddleware(); // const enhancer = composeWithDevTools(\n//     applyMiddleware(sagaMiddleware),\n// );\n// create a makeStore function\n\nvar makeStore = function makeStore() {\n  // const store = createStore(rootReducer, enhancer);\n  // sagaMiddleware.run(rootSaga);\n  return store;\n}; // export an assembled wrapper\n\n\nexport default makeStore;","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/store.ts"],"names":["createSagaMiddleware","sagaMiddleware","makeStore","store"],"mappings":"AACA,OAAOA,oBAAP,MAAiC,YAAjC;AAMA,IAAMC,cAAc,GAAGD,oBAAoB,EAA3C,C,CAEA;AACA;AACA;AAEA;;AACA,IAAME,SAAoB,GAAG,SAAvBA,SAAuB,GAAM;AAC/B;AACA;AAEA,SAAOC,KAAP;AACH,CALD,C,CAOA;;;AACA,eAAeD,SAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {MakeStore} from 'next-redux-wrapper'\r\nimport {rootReducer} from \"./reducers/rootReducer\"\r\nimport rootSaga from './sagas/rootSaga'\r\nimport {configureStore} from '@reduxjs/toolkit'\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// const enhancer = composeWithDevTools(\r\n//     applyMiddleware(sagaMiddleware),\r\n// );\r\n\r\n// create a makeStore function\r\nconst makeStore: MakeStore = () => {\r\n    // const store = createStore(rootReducer, enhancer);\r\n    // sagaMiddleware.run(rootSaga);\r\n    \r\n    return store\r\n};\r\n\r\n// export an assembled wrapper\r\nexport default makeStore;"]},"metadata":{},"sourceType":"module"}