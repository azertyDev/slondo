{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { userApi } from '../../api/api';\nvar prefix = '[Slider]';\nexport var mainSliderActionsTypes = {\n  SEARCH_REQUEST: \"\".concat(prefix, \" Search Request\"),\n  SEARCH_SUCCESS: \"\".concat(prefix, \" Search Success\"),\n  SEARCH_ERROR: \"\".concat(prefix, \" Search Error\")\n};\nexport var searchRequest = function searchRequest() {\n  return {\n    type: mainSliderActionsTypes.SEARCH_REQUEST\n  };\n};\nexport var searchSuccess = function searchSuccess(results) {\n  return {\n    type: mainSliderActionsTypes.SEARCH_SUCCESS,\n    results: results\n  };\n};\nexport var searchError = function searchError(errors) {\n  return {\n    type: mainSliderActionsTypes.SEARCH_ERROR,\n    errors: errors\n  };\n};\nexport var fetchMainSliderImgs = function fetchMainSliderImgs() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var imgs;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(searchRequest());\n              _context.prev = 1;\n              _context.next = 4;\n              return userApi.getMainSliderImgs();\n\n            case 4:\n              imgs = _context.sent;\n              return _context.abrupt(\"return\", dispatch(searchSuccess(imgs)));\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", dispatch(searchError([_context.t0])));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/actions/mainSliderActions.ts"],"names":["userApi","prefix","mainSliderActionsTypes","SEARCH_REQUEST","SEARCH_SUCCESS","SEARCH_ERROR","searchRequest","type","searchSuccess","results","searchError","errors","fetchMainSliderImgs","dispatch","getMainSliderImgs","imgs"],"mappings":";;AAAA,SAAQA,OAAR,QAAsB,eAAtB;AAEA,IAAMC,MAAM,GAAG,UAAf;AAEA,OAAO,IAAMC,sBAAsB,GAAG;AAClCC,EAAAA,cAAc,YAAKF,MAAL,oBADoB;AAElCG,EAAAA,cAAc,YAAKH,MAAL,oBAFoB;AAGlCI,EAAAA,YAAY,YAAKJ,MAAL;AAHsB,CAA/B;AAMP,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAO;AAACC,IAAAA,IAAI,EAAEL,sBAAsB,CAACC;AAA9B,GAAP;AAAA,CAAtB;AACP,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,OAAO;AAAA,SAAK;AAACF,IAAAA,IAAI,EAAEL,sBAAsB,CAACE,cAA9B;AAA8CK,IAAAA,OAAO,EAAPA;AAA9C,GAAL;AAAA,CAA7B;AACP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,MAAM;AAAA,SAAK;AAACJ,IAAAA,IAAI,EAAEL,sBAAsB,CAACG,YAA9B;AAA4CM,IAAAA,MAAM,EAANA;AAA5C,GAAL;AAAA,CAA1B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACrC;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACHA,cAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AADG;AAAA;AAAA,qBAGoBN,OAAO,CAACc,iBAAR,EAHpB;;AAAA;AAGOC,cAAAA,IAHP;AAAA,+CAIQF,QAAQ,CAACL,aAAa,CAACO,IAAD,CAAd,CAJhB;;AAAA;AAAA;AAAA;AAAA,+CAMQF,QAAQ,CAACH,WAAW,CAAC,aAAD,CAAZ,CANhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AASH,CAVM","sourcesContent":["import {userApi} from '../../api/api'\r\n\r\nconst prefix = '[Slider]';\r\n\r\nexport const mainSliderActionsTypes = {\r\n    SEARCH_REQUEST: `${prefix} Search Request`,\r\n    SEARCH_SUCCESS: `${prefix} Search Success`,\r\n    SEARCH_ERROR: `${prefix} Search Error`\r\n};\r\n\r\nexport const searchRequest = () => ({type: mainSliderActionsTypes.SEARCH_REQUEST});\r\nexport const searchSuccess = results => ({type: mainSliderActionsTypes.SEARCH_SUCCESS, results});\r\nexport const searchError = errors => ({type: mainSliderActionsTypes.SEARCH_ERROR, errors});\r\n\r\nexport const fetchMainSliderImgs = () => {\r\n    return async (dispatch) => {\r\n        dispatch(searchRequest());\r\n        try {\r\n            const imgs = await userApi.getMainSliderImgs();\r\n            return dispatch(searchSuccess(imgs));\r\n        } catch (e) {\r\n            return dispatch(searchError([e]));\r\n        }\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}