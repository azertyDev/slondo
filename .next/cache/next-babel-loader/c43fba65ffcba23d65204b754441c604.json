{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from 'react-beautiful-dnd';\nimport { useStyles } from './useStyles';\nresetServerContext();\nexport var PreviewPhotos = function PreviewPhotos(props) {\n  _s();\n\n  var images = props.images,\n      setImages = props.setImages;\n\n  var handleOnDragEnd = function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    var items = Array.from(images);\n\n    var _items$splice = items.splice(result.source.index, 1),\n        _items$splice2 = _slicedToArray(_items$splice, 1),\n        reorderedItem = _items$splice2[0];\n\n    items.splice(result.destination.index, 0, reorderedItem);\n    setImages(items);\n  };\n\n  var handleUploadFile = function handleUploadFile(e) {\n    if (e.target.files && e.target.files[0]) {\n      setImages([{\n        id: JSON.stringify(Date.now()),\n        file: e.target.files[0],\n        img: URL.createObjectURL(e.target.files[0])\n      }].concat(_toConsumableArray(images)));\n      URL.revokeObjectURL(e.target.files[0]);\n    }\n  };\n\n  console.log(images);\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: handleUploadFile,\n    accept: \"image/x-png,image/jpeg\"\n  }), __jsx(DragDropContext, {\n    onDragEnd: handleOnDragEnd\n  }, __jsx(Droppable, {\n    droppableId: \"images\",\n    direction: \"horizontal\"\n  }, function (provided) {\n    return __jsx(\"div\", _extends({\n      className: \"images-wrapper\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef\n    }), images.map(function (_ref, index) {\n      var id = _ref.id,\n          file = _ref.file,\n          img = _ref.img;\n      return __jsx(Draggable, {\n        key: id,\n        draggableId: id,\n        index: index\n      }, function (provided) {\n        return __jsx(\"div\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps), __jsx(\"img\", {\n          src: img,\n          style: {\n            width: '120px',\n            height: '90px',\n            objectFit: 'cover'\n          },\n          alt: file.name\n        }));\n      });\n    }), provided.placeholder);\n  })));\n};\n\n_s(PreviewPhotos, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PreviewPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreviewPhotos\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/preview_photos/PreviewPhotos.tsx"],"names":["React","DragDropContext","Droppable","Draggable","resetServerContext","useStyles","PreviewPhotos","props","images","setImages","handleOnDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","handleUploadFile","e","target","files","id","JSON","stringify","Date","now","file","img","URL","createObjectURL","revokeObjectURL","console","log","classes","root","provided","droppableProps","innerRef","map","draggableProps","dragHandleProps","width","height","objectFit","name","placeholder"],"mappings":"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","sourcesContent":["import React, {Dispatch, FC} from 'react';\r\nimport {DragDropContext, Droppable, Draggable, resetServerContext} from 'react-beautiful-dnd';\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nresetServerContext();\r\n\r\nexport const PreviewPhotos: FC<{ images: [], setImages: Dispatch<any> }> = (props) => {\r\n    const {images, setImages} = props;\r\n\r\n    const handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n\r\n        const items = Array.from(images);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        setImages(items);\r\n    };\r\n\r\n    const handleUploadFile = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            setImages([{\r\n                id: JSON.stringify(Date.now()),\r\n                file: e.target.files[0],\r\n                img: URL.createObjectURL(e.target.files[0])\r\n            },\r\n                ...images\r\n            ]);\r\n            URL.revokeObjectURL(e.target.files[0])\r\n        }\r\n    };\r\n    console.log(images)\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <input type='file' onChange={handleUploadFile} accept=\"image/x-png,image/jpeg\"/>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId=\"images\" direction=\"horizontal\">\r\n                    {(provided) => (\r\n                        <div className=\"images-wrapper\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {images.map(({id, file, img}: any, index) => {\r\n                                return (\r\n                                    <Draggable key={id} draggableId={id} index={index}>\r\n                                        {(provided) => (\r\n                                            <div\r\n                                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                                <img\r\n                                                    src={img}\r\n                                                    style={{width: '120px', height: '90px', objectFit: 'cover'}}\r\n                                                    alt={file.name}\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                );\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}