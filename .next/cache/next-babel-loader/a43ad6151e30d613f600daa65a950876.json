{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { CustomSlider } from \"@src/components/elements/custom_slider/CustomSlider\";\nimport { settings } from './sliderSettings';\nimport { Link } from \"@root/i18n\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setErrorMsgAction } from '@root/src/redux/slices/errorSlice';\nimport { useStyles } from './useStyles';\nexport const CategoriesSlider = ({\n  t\n}) => {\n  const {\n    isFetch,\n    error,\n    list\n  } = useSelector(store => store.categories);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    !!error && dispatch(setErrorMsgAction(error));\n  }, [error]);\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    className: \"title\",\n    variant: \"h2\"\n  }, t('popularCategories')), __jsx(\"div\", {\n    className: \"category-slider\"\n  }, __jsx(CustomSlider, settings, error ? __jsx(Typography, {\n    className: \"error-text\"\n  }, error) : list.map(category => isFetch ? __jsx(\"div\", {\n    className: \"category\",\n    key: category.id\n  }, __jsx(Skeleton, {\n    variant: \"circle\",\n    width: 100,\n    height: 100\n  }), __jsx(Skeleton, {\n    variant: \"text\",\n    width: 100,\n    height: 16\n  })) : __jsx(Link, {\n    href: \"#\",\n    key: category.id\n  }, __jsx(\"a\", {\n    title: category.name\n  }, __jsx(\"div\", {\n    className: \"category\"\n  }, __jsx(\"div\", {\n    className: \"bg-layer\"\n  }, __jsx(\"div\", {\n    className: \"medium\"\n  }, __jsx(\"img\", {\n    src: category.image.url.default,\n    alt: category.name\n  }))), __jsx(\"span\", {\n    className: \"category-name\"\n  }, category.name))))))));\n};","map":null,"metadata":{},"sourceType":"module"}