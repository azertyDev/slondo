{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userAPI } from \"@src/api/api\";\nimport Cookies from \"universal-cookie\";\nvar cookies = new Cookies();\nvar initialState = {\n  isFetch: false,\n  isAuth: false,\n  error: null,\n  isAuthModalOpen: false\n}; // Async thunk\n\nexport var fetchToken = createAsyncThunk('authReg/fetchTokenByLogin', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n    var phone, password, rejectWithValue, token;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            phone = _ref.phone, password = _ref.password;\n            rejectWithValue = _ref2.rejectWithValue;\n            _context.prev = 2;\n            _context.next = 5;\n            return userAPI.login(phone, password);\n\n          case 5:\n            token = _context.sent;\n            cookies.set('token', token, {\n              maxAge: 2 * 3600\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", rejectWithValue(_context.t0.message));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 9]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}()); // Slice\n\nvar authRegSlice = createSlice({\n  name: 'authReg',\n  initialState: initialState,\n  reducers: {\n    setIsAuthAction: function setIsAuthAction(state, action) {\n      state.isAuth = action.payload;\n    },\n    setIsAuthModalOpen: function setIsAuthModalOpen(state, action) {\n      state.isAuthModalOpen = action.payload;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchToken.pending, function (state) {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchToken.fulfilled, function (state) {\n      state.isFetch = false;\n      state.error = null;\n      state.isAuth = true;\n    });\n    builder.addCase(fetchToken.rejected, function (state, action) {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nvar _authRegSlice$actions = authRegSlice.actions,\n    setIsAuthAction = _authRegSlice$actions.setIsAuthAction,\n    setIsAuthModalOpen = _authRegSlice$actions.setIsAuthModalOpen;\nexport { setIsAuthAction, setIsAuthModalOpen };\nexport var authReducer = authRegSlice.reducer;","map":null,"metadata":{},"sourceType":"module"}