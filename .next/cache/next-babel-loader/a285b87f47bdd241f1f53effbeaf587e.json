{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { useQuery } from \"@apollo/client\";\nimport { text } from '../src/components/home/queries';\n\nvar Index = function Index() {\n  _s();\n\n  var _useQuery = useQuery(text),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  console.log(data);\n  return __jsx(\"div\", null, __jsx(Typography, null, \"qwe\"));\n};\n\n_s(Index, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/pages/index.tsx"],"names":["React","Typography","useQuery","text","Index","loading","error","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AAEA,SAAQC,IAAR,QAAmB,gCAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,kBACeF,QAAQ,CAACC,IAAD,CADvB;AAAA,MACTE,OADS,aACTA,OADS;AAAA,MACAC,KADA,aACAA,KADA;AAAA,MACOC,IADP,aACOA,IADP;;AAEhBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACI,mBACI,MAAC,UAAD,cADJ,CADJ;AAKH,CARD;;GAAMH,K;UAC6BF,Q;;;KAD7BE,K;;AAwBN,eAAeA,KAAf","sourcesContent":["import React from \"react\"\nimport {GetStaticProps} from 'next'\nimport {Typography} from \"@material-ui/core\"\nimport {useQuery} from \"@apollo/client\"\nimport {initializeApollo} from '../apollo/client'\nimport {text} from '../src/components/home/queries'\n\nconst Index = () => {\n    const {loading, error, data} = useQuery(text);\n    console.log(data)\n    return (\n        <div>\n            <Typography>qwe</Typography>\n        </div>\n    )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n    const apolloClient = initializeApollo()\n    \n    await apolloClient.query({\n        query: text,\n    })\n    \n    return {\n        props: {\n            initialApolloState: apolloClient.cache.extract(),\n        },\n    }\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}