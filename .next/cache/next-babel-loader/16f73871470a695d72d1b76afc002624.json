{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Grid, Tabs, Typography, IconButton } from '@material-ui/core';\nimport { Link } from '../../../i18n';\nimport { Formik, Form, Field } from 'formik';\nimport { BonusIcon, SafeBuyingIcon, AdvertisementIcon, TorgIcon, RatingIcon, CloseIcon } from '../elements/icons';\nimport { CustomTab } from \"../elements/custom_tab/CustomTab\";\nimport { ButtonComponent } from \"../elements/button/Button\";\nimport { CustomField } from \"../elements/custom_field/CustomField\";\nimport { CustomTabPanel } from \"../elements/custom_tab_panel/CustomTabPanel\";\nimport { requiredValidate, phoneValidate } from '../validates'; // Styles\n\nimport { useStyles } from './useStyles';\nexport var AuthRegPage = function AuthRegPage(props) {\n  _s();\n\n  var t = props.t,\n      language = props.language,\n      handleCloseModal = props.handleCloseModal;\n  var inputsVals = {\n    phone: '',\n    password: ''\n  };\n\n  var _useState = useState(0),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var onSubmit = function onSubmit(values, actions) {\n    actions.resetForm();\n  };\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    className: \"info-block\"\n  }, __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"img\", {\n    src: BonusIcon,\n    alt: \"bonus-icon\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\",\n    color: \"initial\"\n  }, t('auth_reg:bonus'))), __jsx(\"div\", null, __jsx(\"img\", {\n    src: SafeBuyingIcon,\n    alt: \"safeAuction-icon\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\",\n    color: \"initial\"\n  }, t('auth_reg:safeBuying'))), __jsx(\"div\", null, __jsx(\"img\", {\n    src: AdvertisementIcon,\n    alt: \"advertisement-icon\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\",\n    color: \"initial\"\n  }, t('auth_reg:createAd'))), __jsx(\"div\", null, __jsx(\"img\", {\n    src: TorgIcon,\n    alt: \"torg-icon\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\",\n    color: \"initial\"\n  }, t('auth_reg:createAuction'))), __jsx(\"div\", null, __jsx(\"img\", {\n    src: RatingIcon,\n    alt: \"rating-icon\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\",\n    color: \"initial\"\n  }, t('auth_reg:rating'))))), __jsx(Grid, {\n    item: true,\n    sm: 7,\n    xs: 12,\n    className: \"auth-reg-block\"\n  }, __jsx(\"div\", {\n    className: \"close-btn-wrapper\"\n  }, __jsx(IconButton, {\n    onClick: handleCloseModal\n  }, __jsx(\"img\", {\n    src: CloseIcon,\n    alt: \"close\"\n  }))), __jsx(\"div\", {\n    className: \"form-block\"\n  }, __jsx(\"div\", {\n    className: \"welcome-block\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"initial\"\n  }, t('auth_reg:welcome')), __jsx(Typography, {\n    variant: \"subtitle2\",\n    color: \"initial\"\n  }, t('auth_reg:authSite'))), __jsx(\"div\", {\n    className: \"tabs-container\"\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    className: \"tabs\"\n  }, __jsx(CustomTab, {\n    label: __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, t('auth_reg:signInTitle')),\n    id: 0\n  }), __jsx(CustomTab, {\n    label: __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, t('auth_reg:signUpTitle')),\n    id: 1\n  })), __jsx(\"div\", {\n    className: \"tab-panels\"\n  }, __jsx(CustomTabPanel, {\n    value: value,\n    index: 0,\n    className: \"sign-panel\"\n  }, __jsx(Formik, {\n    initialValues: inputsVals,\n    onSubmit: onSubmit\n  }, function (_ref) {\n    var errors = _ref.errors,\n        touched = _ref.touched;\n    return __jsx(Form, null, __jsx(\"div\", null, __jsx(Typography, {\n      className: classes.errorTxt,\n      variant: \"subtitle2\"\n    }, errors.phone && touched.phone ? errors.phone : ''), __jsx(Field, {\n      name: \"phone\",\n      type: \"phone\",\n      placeholder: t('auth_reg:enterPhone'),\n      validate: phoneValidate,\n      component: CustomField,\n      className: errors.phone && touched.phone ? classes.errorInput : ''\n    })), __jsx(\"div\", null, __jsx(Typography, {\n      className: classes.errorTxt,\n      variant: \"subtitle2\"\n    }, errors.password && touched.password ? errors.password : ''), __jsx(Field, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: t('auth_reg:enterPassword'),\n      validate: requiredValidate,\n      component: CustomField,\n      className: errors.password && touched.password ? classes.errorInput : ''\n    })), __jsx(\"div\", {\n      className: \"forget-password\"\n    }, __jsx(\"a\", {\n      href: \"#\"\n    }, __jsx(\"span\", null, t('auth_reg:forgetPassword')))), __jsx(\"div\", {\n      className: classes.modalBtns\n    }, __jsx(ButtonComponent, {\n      className: \"signin-btn\",\n      type: \"submit\"\n    }, t('auth_reg:signIn'))));\n  })), __jsx(CustomTabPanel, {\n    value: value,\n    index: 1,\n    className: \"reg-panel\"\n  }, __jsx(Formik, {\n    initialValues: inputsVals,\n    onSubmit: onSubmit\n  }, function (_ref2) {\n    var errors = _ref2.errors,\n        touched = _ref2.touched;\n    return __jsx(Form, null, __jsx(\"div\", null, __jsx(\"div\", null, __jsx(Typography, {\n      className: classes.errorTxt,\n      variant: \"subtitle2\"\n    }, errors.phone && touched.phone ? errors.phone : '')), __jsx(\"div\", null, __jsx(Field, {\n      name: \"phone\",\n      type: \"phone\",\n      placeholder: t('auth_reg:enterPhone'),\n      validate: phoneValidate,\n      component: CustomField,\n      className: errors.phone && touched.phone ? classes.errorInput : ''\n    }))), __jsx(\"div\", {\n      className: classes.modalBtns\n    }, __jsx(ButtonComponent, {\n      className: \"reg-btn\",\n      type: \"submit\"\n    }, t('auth_reg:signUp'))));\n  }), __jsx(\"div\", {\n    className: classes.agreement\n  }, __jsx(Typography, {\n    className: \"reg-agreement\",\n    variant: \"body2\"\n  }, \"\".concat(t('auth_reg:agreement.firstPart'), \" \"), __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, \"\".concat(t('auth_reg:agreement.secondPart'), \" \"))), \"\".concat(t('auth_reg:agreement.thirdPart'), \" \"), __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, \"\".concat(t('auth_reg:agreement.fourthPart')))), language === 'uz' && \" \".concat(t('auth_reg:agreement.fifthPart')))))))))));\n};\n\n_s(AuthRegPage, \"amYE+i0RSNXWcaZXPkaqPcPCmRg=\", false, function () {\n  return [useStyles];\n});\n\n_c = AuthRegPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRegPage\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/auth_reg/AuthRegPage.tsx"],"names":["React","useState","Grid","Tabs","Typography","IconButton","Link","Formik","Form","Field","BonusIcon","SafeBuyingIcon","AdvertisementIcon","TorgIcon","RatingIcon","CloseIcon","CustomTab","ButtonComponent","CustomField","CustomTabPanel","requiredValidate","phoneValidate","useStyles","AuthRegPage","props","t","language","handleCloseModal","inputsVals","phone","password","value","setValue","onSubmit","values","actions","resetForm","handleChange","event","newValue","classes","root","errors","touched","errorTxt","errorInput","modalBtns","agreement"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {Grid, Tabs, Typography, Hidden, IconButton} from '@material-ui/core'\r\nimport {Link} from '../../../i18n'\r\nimport {Formik, Form, Field} from 'formik'\r\nimport {\r\n    BonusIcon,\r\n    SafeBuyingIcon,\r\n    AdvertisementIcon,\r\n    TorgIcon,\r\n    RatingIcon,\r\n    CloseIcon\r\n} from '../elements/icons'\r\nimport {CustomTab} from \"../elements/custom_tab/CustomTab\"\r\nimport {ButtonComponent} from \"../elements/button/Button\"\r\nimport {CustomField} from \"../elements/custom_field/CustomField\"\r\nimport {CustomTabPanel} from \"../elements/custom_tab_panel/CustomTabPanel\"\r\nimport {requiredValidate, phoneValidate} from '../validates'\r\n\r\n// Styles\r\nimport {useStyles} from './useStyles'\r\n\r\ninterface ILoginValues {\r\n    phone: string,\r\n    password: string\r\n}\r\n\r\nexport const AuthRegPage = (props) => {\r\n    const {t, language, handleCloseModal} = props;\r\n\r\n    const inputsVals: ILoginValues = {phone: '', password: ''};\r\n    const [value, setValue] = useState(0);\r\n\r\n    const onSubmit = (values, actions) => {\r\n        actions.resetForm();\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container>\r\n                <Grid item xs={5} className='info-block'>\r\n                    <div>\r\n                        <div>\r\n                            <img src={BonusIcon} alt=\"bonus-icon\"/>\r\n                            <Typography variant=\"subtitle2\" color=\"initial\">\r\n                                {t('auth_reg:bonus')}\r\n                            </Typography>\r\n                        </div>\r\n                        <div>\r\n                            <img\r\n                                src={SafeBuyingIcon}\r\n                                alt=\"safeAuction-icon\"\r\n                            />\r\n                            <Typography variant=\"subtitle2\" color=\"initial\">\r\n                                {t('auth_reg:safeBuying')}\r\n                            </Typography>\r\n                        </div>\r\n                        <div>\r\n                            <img\r\n                                src={AdvertisementIcon}\r\n                                alt=\"advertisement-icon\"\r\n                            />\r\n                            <Typography variant=\"subtitle2\" color=\"initial\">\r\n                                {t('auth_reg:createAd')}\r\n                            </Typography>\r\n                        </div>\r\n                        <div>\r\n                            <img src={TorgIcon} alt=\"torg-icon\"/>\r\n                            <Typography variant=\"subtitle2\" color=\"initial\">\r\n                                {t('auth_reg:createAuction')}\r\n                            </Typography>\r\n                        </div>\r\n                        <div>\r\n                            <img src={RatingIcon} alt=\"rating-icon\"/>\r\n                            <Typography variant=\"subtitle2\" color=\"initial\">\r\n                                {t('auth_reg:rating')}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item sm={7} xs={12} className='auth-reg-block'>\r\n                    <div className='close-btn-wrapper'>\r\n                        <IconButton onClick={handleCloseModal}>\r\n                            <img src={CloseIcon} alt=\"close\"/>\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className='form-block'>\r\n                        <div className='welcome-block'>\r\n                            <Typography variant=\"h6\" color=\"initial\">\r\n                                {t('auth_reg:welcome')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle2\" color=\"initial\">\r\n                                {t('auth_reg:authSite')}\r\n                            </Typography>\r\n                        </div>\r\n                        <div className='tabs-container'>\r\n                            <Tabs\r\n                                value={value}\r\n                                onChange={handleChange}\r\n                                indicatorColor=\"primary\"\r\n                                className='tabs'\r\n                            >\r\n                                <CustomTab\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            {t('auth_reg:signInTitle')}\r\n                                        </Typography>\r\n                                    }\r\n                                    id={0}\r\n                                />\r\n                                <CustomTab\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            {t('auth_reg:signUpTitle')}\r\n                                        </Typography>\r\n                                    }\r\n                                    id={1}\r\n                                />\r\n                            </Tabs>\r\n                            <div className='tab-panels'>\r\n                                <CustomTabPanel\r\n                                    value={value}\r\n                                    index={0}\r\n                                    className='sign-panel'\r\n                                >\r\n                                    <Formik initialValues={inputsVals} onSubmit={onSubmit}>\r\n                                        {({errors, touched}) => {\r\n                                            return (\r\n                                                <Form>\r\n                                                    <div>\r\n                                                        <Typography\r\n                                                            className={classes.errorTxt}\r\n                                                            variant=\"subtitle2\"\r\n                                                        >\r\n                                                            {errors.phone && touched.phone ? errors.phone : ''}\r\n                                                        </Typography>\r\n                                                        <Field\r\n                                                            name='phone'\r\n                                                            type='phone'\r\n                                                            placeholder={t('auth_reg:enterPhone')}\r\n                                                            validate={phoneValidate}\r\n                                                            component={CustomField}\r\n                                                            className={errors.phone && touched.phone ? classes.errorInput : ''}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <Typography\r\n                                                            className={classes.errorTxt}\r\n                                                            variant=\"subtitle2\"\r\n                                                        >\r\n                                                            {errors.password && touched.password ? errors.password : ''}\r\n                                                        </Typography>\r\n                                                        <Field\r\n                                                            name='password'\r\n                                                            type=\"password\"\r\n                                                            placeholder={t('auth_reg:enterPassword')}\r\n                                                            validate={requiredValidate}\r\n                                                            component={CustomField}\r\n                                                            className={errors.password && touched.password ? classes.errorInput : ''}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='forget-password'>\r\n                                                        <a href=\"#\">\r\n                                                        <span>\r\n                                                            {t('auth_reg:forgetPassword')}\r\n                                                        </span>\r\n                                                        </a>\r\n                                                    </div>\r\n                                                    <div className={classes.modalBtns}>\r\n                                                        <ButtonComponent className='signin-btn' type='submit'>\r\n                                                            {t('auth_reg:signIn')}\r\n                                                        </ButtonComponent>\r\n                                                    </div>\r\n                                                </Form>\r\n                                            )\r\n                                        }}\r\n                                    </Formik>\r\n                                </CustomTabPanel>\r\n                                <CustomTabPanel value={value} index={1} className='reg-panel'>\r\n                                    <Formik initialValues={inputsVals} onSubmit={onSubmit}>\r\n                                        {({errors, touched}) => (\r\n                                            <Form>\r\n                                                <div>\r\n                                                    <div>\r\n                                                        <Typography\r\n                                                            className={classes.errorTxt}\r\n                                                            variant=\"subtitle2\"\r\n                                                        >\r\n                                                            {errors.phone && touched.phone ? errors.phone : ''}\r\n                                                        </Typography>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <Field\r\n                                                            name='phone'\r\n                                                            type='phone'\r\n                                                            placeholder={t('auth_reg:enterPhone')}\r\n                                                            validate={phoneValidate}\r\n                                                            component={CustomField}\r\n                                                            className={errors.phone && touched.phone ? classes.errorInput : ''}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className={classes.modalBtns}>\r\n                                                    <ButtonComponent className='reg-btn' type='submit'>\r\n                                                        {t('auth_reg:signUp')}\r\n                                                    </ButtonComponent>\r\n                                                </div>\r\n                                            </Form>\r\n                                        )}\r\n                                    </Formik>\r\n                                    <div className={classes.agreement}>\r\n                                        <Typography className='reg-agreement' variant='body2'>\r\n                                            {`${t('auth_reg:agreement.firstPart')} `}\r\n                                            <Link href='#'>\r\n                                                <a>{`${t('auth_reg:agreement.secondPart')} `}</a>\r\n                                            </Link>\r\n                                            {`${t('auth_reg:agreement.thirdPart')} `}\r\n                                            <Link href='#'>\r\n                                                <a>{`${t('auth_reg:agreement.fourthPart')}`}</a>\r\n                                            </Link>\r\n                                            {language === 'uz' && ` ${t('auth_reg:agreement.fifthPart')}`}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </CustomTabPanel>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}