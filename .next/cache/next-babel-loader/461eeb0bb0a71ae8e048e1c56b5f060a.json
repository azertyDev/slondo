{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { ITEMS_PER_PAGE } from '@src/constants';\nimport { userAPI } from '@src/api/api';\nimport { i18n } from '@root/i18n';\nimport { AncmntsSlider } from './AncmntsSlider';\nconst initCard = {\n  id: null,\n  title: '',\n  safe_deal: null,\n  price: null,\n  currency: {\n    id: null,\n    name: ''\n  },\n  created_at: '',\n  region: {\n    id: null,\n    name: ''\n  },\n  city: {\n    id: null,\n    name: ''\n  },\n  district: {\n    id: null,\n    name: ''\n  },\n  images: [{\n    url: {\n      default: ''\n    }\n  }],\n  delivery: null,\n  exchange: null,\n  ads_type: {\n    id: null,\n    name: '',\n    mark: ''\n  }\n};\nconst initCards = [];\n\nfor (let i = 1; i <= 16; i++) {\n  initCards.push(initCard);\n}\n\nconst initialCardData = {\n  isFetch: false,\n  error: null,\n  data: {\n    cards: initCards,\n    total: null\n  }\n};\nexport const AncmntsSliderContainer = props => {\n  const {\n    t\n  } = props;\n  const lang = i18n.language;\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: cardData,\n    1: setCardData\n  } = useState(initialCardData);\n  const type = 'lot';\n\n  const setFetchedCardData = async () => {\n    try {\n      setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n        isFetch: true\n      }));\n      const newData = await userAPI.getCardData(ITEMS_PER_PAGE, currentPage, type, lang);\n      setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n        isFetch: false,\n        data: {\n          cards: newData.data,\n          total: newData.total\n        }\n      }));\n    } catch (e) {\n      setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n        error: e.message\n      }));\n    }\n  };\n\n  useEffect(() => {\n    setFetchedCardData();\n  }, [currentPage]);\n  return __jsx(AncmntsSlider, {\n    t: t,\n    title: 'Телефоны и планшеты',\n    list: cardData.data.cards\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/main/ancmnts_slider/AncmntsSliderContainer.tsx"],"names":["React","useEffect","useState","ITEMS_PER_PAGE","userAPI","i18n","AncmntsSlider","initCard","id","title","safe_deal","price","currency","name","created_at","region","city","district","images","url","default","delivery","exchange","ads_type","mark","initCards","i","push","initialCardData","isFetch","error","data","cards","total","AncmntsSliderContainer","props","t","lang","language","currentPage","setCurrentPage","cardData","setCardData","type","setFetchedCardData","newData","getCardData","e","message"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {WithT} from 'i18next';\r\nimport {ITEMS_PER_PAGE} from '@src/constants';\r\nimport {userAPI} from '@src/api/api';\r\nimport {i18n} from '@root/i18n';\r\nimport {CardData, InnerCardData} from '@root/interfaces/CardData';\r\nimport {AncmntsSlider} from './AncmntsSlider';\r\n\r\n\r\nconst initCard: InnerCardData = {\r\n    id: null,\r\n    title: '',\r\n    safe_deal: null,\r\n    price: null,\r\n    currency: {\r\n        id: null,\r\n        name: '',\r\n    },\r\n    created_at: '',\r\n    region: {\r\n        id: null,\r\n        name: '',\r\n    },\r\n    city: {\r\n        id: null,\r\n        name: '',\r\n    },\r\n    district: {\r\n        id: null,\r\n        name: '',\r\n    },\r\n    images: [\r\n        {\r\n            url: {\r\n                default: '',\r\n            },\r\n        },\r\n    ],\r\n    delivery: null,\r\n    exchange: null,\r\n    ads_type: {\r\n        id: null,\r\n        name: '',\r\n        mark: '',\r\n    },\r\n};\r\n\r\nconst initCards: InnerCardData[] = [];\r\n\r\nfor (let i = 1; i <= 16; i++) {\r\n    initCards.push(initCard);\r\n}\r\n\r\nconst initialCardData: CardData = {\r\n    isFetch: false,\r\n    error: null,\r\n    data: {\r\n        cards: initCards,\r\n        total: null,\r\n    },\r\n};\r\n\r\nexport const AncmntsSliderContainer: FC<WithT> = (props) => {\r\n    const {t} = props;\r\n    const lang = i18n.language;\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [cardData, setCardData] = useState(initialCardData);\r\n\r\n    const type = 'lot';\r\n\r\n    const setFetchedCardData = async () => {\r\n        try {\r\n            setCardData({\r\n                ...cardData,\r\n                isFetch: true,\r\n            });\r\n\r\n            const newData = await userAPI.getCardData(\r\n                ITEMS_PER_PAGE,\r\n                currentPage,\r\n                type,\r\n                lang\r\n            );\r\n\r\n            setCardData({\r\n                ...cardData,\r\n                isFetch: false,\r\n                data: {\r\n                    cards: newData.data,\r\n                    total: newData.total,\r\n                },\r\n            });\r\n        } catch (e) {\r\n            setCardData({\r\n                ...cardData,\r\n                error: e.message,\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setFetchedCardData();\r\n    }, [currentPage]);\r\n\r\n    return (\r\n        <AncmntsSlider\r\n            t={t}\r\n            title={'Телефоны и планшеты'}\r\n            list={cardData.data.cards}\r\n        />\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}