{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { setErrorMsgAction } from \"@src/redux/slices/errorSlice\";\nexport const stateHelper = async ({\n  state,\n  setState,\n  fetchedData,\n  dispatch\n}) => {\n  try {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      isFetch: true\n    }));\n    const ancmnts = await fetchedData;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      ancmnts,\n      isFetch: false\n    }));\n  } catch (e) {\n    dispatch(setErrorMsgAction(e.message));\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      isFetch: false\n    }));\n  }\n};\nexport const categoryDataNormalization = categoryList => categoryList.map(category => {\n  const {\n    id,\n    name,\n    icons,\n    images\n  } = category;\n  const childs = !!category.childs.length ? category.childs.map(child => _objectSpread(_objectSpread({}, child), {}, {\n    parent: category\n  })) : [{\n    id,\n    name,\n    icons,\n    images,\n    parent: category\n  }];\n  return _objectSpread(_objectSpread({}, category), {}, {\n    childs\n  });\n});\nexport const categorySearchHelper = (text, categoryList) => {\n  const searchRegExp = RegExp(text, 'i');\n  return categoryList.reduce((list, category) => {\n    category.childs.forEach(sub_ctgr => {\n      if (searchRegExp.test(sub_ctgr.name)) {\n        list.push(sub_ctgr);\n      }\n    });\n    return list;\n  }, []);\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/helpers.ts"],"names":["setErrorMsgAction","stateHelper","state","setState","fetchedData","dispatch","isFetch","ancmnts","e","message","categoryDataNormalization","categoryList","map","category","id","name","icons","images","childs","length","child","parent","categorySearchHelper","text","searchRegExp","RegExp","reduce","list","forEach","sub_ctgr","test","push"],"mappings":";;;;;;AAAA,SAAQA,iBAAR,QAAgC,8BAAhC;AAcA,OAAO,MAAMC,WAAW,GAAG,OAAO;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,WAAlB;AAA+BC,EAAAA;AAA/B,CAAP,KAAgF;AACvG,MAAI;AACAF,IAAAA,QAAQ,iCAAKD,KAAL;AAAYI,MAAAA,OAAO,EAAE;AAArB,OAAR;AAEA,UAAMC,OAAO,GAAG,MAAMH,WAAtB;AAEAD,IAAAA,QAAQ,iCAAKD,KAAL;AAAYK,MAAAA,OAAZ;AAAqBD,MAAAA,OAAO,EAAE;AAA9B,OAAR;AACH,GAND,CAME,OAAOE,CAAP,EAAU;AACRH,IAAAA,QAAQ,CAACL,iBAAiB,CAACQ,CAAC,CAACC,OAAH,CAAlB,CAAR;AACAN,IAAAA,QAAQ,iCAAKD,KAAL;AAAYI,MAAAA,OAAO,EAAE;AAArB,OAAR;AACH;AACJ,CAXM;AAaP,OAAO,MAAMI,yBAAyB,GAAIC,YAAD,IACrCA,YAAY,CAACC,GAAb,CAAiBC,QAAQ,IAAI;AACzB,QAAM;AAACC,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA4BJ,QAAlC;AAEA,QAAMK,MAAM,GAAG,CAAC,CAACL,QAAQ,CAACK,MAAT,CAAgBC,MAAlB,GACTN,QAAQ,CAACK,MAAT,CAAgBN,GAAhB,CAAoBQ,KAAK,oCACnBA,KADmB;AACZC,IAAAA,MAAM,EAAER;AADI,IAAzB,CADS,GAIT,CAAC;AAACC,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,MAAlB;AAA0BI,IAAAA,MAAM,EAAER;AAAlC,GAAD,CAJN;AAMA,yCAAWA,QAAX;AAAqBK,IAAAA;AAArB;AACH,CAVD,CADG;AAcP,OAAO,MAAMI,oBAAoB,GAAG,CAACC,IAAD,EAAeZ,YAAf,KAA4D;AAC5F,QAAMa,YAAY,GAAGC,MAAM,CAACF,IAAD,EAAO,GAAP,CAA3B;AAEA,SAAOZ,YAAY,CACde,MADE,CACK,CAACC,IAAD,EAAOd,QAAP,KAAoB;AACxBA,IAAAA,QAAQ,CAACK,MAAT,CAAgBU,OAAhB,CAAwBC,QAAQ,IAAI;AAChC,UAAIL,YAAY,CAACM,IAAb,CAAkBD,QAAQ,CAACd,IAA3B,CAAJ,EAAsC;AAClCY,QAAAA,IAAI,CAACI,IAAL,CAAUF,QAAV;AACH;AACJ,KAJD;AAKA,WAAOF,IAAP;AACH,GARE,EAQA,EARA,CAAP;AASH,CAZM","sourcesContent":["import {setErrorMsgAction} from \"@src/redux/slices/errorSlice\";\r\nimport {CategoryType} from \"@root/interfaces/Categories\";\r\nimport {Dispatch, SetStateAction} from \"react\";\r\nimport {IdNameType} from \"@root/interfaces/Announcement\";\r\n\r\ninterface StateHelper {\r\n    state: any,\r\n    setState: Dispatch<SetStateAction<any>>,\r\n    fetchedData: Promise<any>,\r\n    dispatch: Dispatch<any>\r\n}\r\n\r\ntype SearchType = (IdNameType & { parent: any, icons: [], image: { url: string } })[];\r\n\r\nexport const stateHelper = async ({state, setState, fetchedData, dispatch}: StateHelper): Promise<void> => {\r\n    try {\r\n        setState({...state, isFetch: true});\r\n\r\n        const ancmnts = await fetchedData;\r\n\r\n        setState({...state, ancmnts, isFetch: false});\r\n    } catch (e) {\r\n        dispatch(setErrorMsgAction(e.message));\r\n        setState({...state, isFetch: false});\r\n    }\r\n};\r\n\r\nexport const categoryDataNormalization = (categoryList: CategoryType[]): CategoryType[] => (\r\n    categoryList.map(category => {\r\n        const {id, name, icons, images} = category;\r\n\r\n        const childs = !!category.childs.length\r\n            ? category.childs.map(child => (\r\n                {...child, parent: category}\r\n            ))\r\n            : [{id, name, icons, images, parent: category}];\r\n\r\n        return {...category, childs};\r\n    })\r\n);\r\n\r\nexport const categorySearchHelper = (text: string, categoryList: CategoryType[]): SearchType => {\r\n    const searchRegExp = RegExp(text, 'i');\r\n\r\n    return categoryList\r\n        .reduce((list, category) => {\r\n            category.childs.forEach(sub_ctgr => {\r\n                if (searchRegExp.test(sub_ctgr.name)) {\r\n                    list.push(sub_ctgr);\r\n                }\r\n            })\r\n            return list;\r\n        }, []);\r\n};"]},"metadata":{},"sourceType":"module"}