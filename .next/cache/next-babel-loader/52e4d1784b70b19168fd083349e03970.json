{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Router } from \"@root/i18n\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAdvrtCtgryAction } from '@src/redux/slices/createAdvrtSlice';\nimport { Typography } from \"@material-ui/core\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { adTypeAndCtgrySchema } from \"@src/validation_schemas/validationSchemas\";\nimport { CustomMenu } from \"@src/components/elements/custom_menu/CustomMenu\";\nimport { useStyles } from './useStyles';\nexport const adTypes = [{\n  id: 1,\n  name: 'Объявление'\n}, {\n  id: 2,\n  name: 'Торг'\n}, {\n  id: 3,\n  name: 'Продвинутый торг'\n}];\nconst initValues = {\n  adType: {\n    id: null,\n    name: 'Выберите тип'\n  },\n  adCategory: {\n    id: null,\n    name: 'Выберите категорию'\n  }\n};\nexport const CreateAdModalForm = props => {\n  const {\n    handleCloseModal\n  } = props;\n  const dispatch = useDispatch();\n  const categoriesList = useSelector(({\n    categories\n  }) => categories.list);\n  const {\n    0: typeAnchor,\n    1: setTypeAnchor\n  } = useState(null);\n  const {\n    0: categoryAnchor,\n    1: setCategoryAnchor\n  } = useState(null);\n\n  const handleMenuOpen = setAnchor => e => {\n    setAnchor(e.currentTarget);\n  };\n\n  const handleMenuClose = setAnchor => () => {\n    setAnchor(null);\n  };\n\n  const submit = values => {\n    dispatch(setAdvrtCtgryAction(values));\n    Router.push('/create_advertisement');\n    handleCloseModal();\n  };\n\n  const classes = useStyles();\n  return __jsx(Formik, {\n    initialValues: initValues,\n    validationSchema: adTypeAndCtgrySchema,\n    onSubmit: submit\n  }, ({\n    errors,\n    touched,\n    values,\n    setValues,\n    handleBlur\n  }) => {\n    const handleClickMenuItem = newValue => () => {\n      setValues(_objectSpread(_objectSpread({}, values), newValue));\n    };\n\n    console.log(values);\n    return __jsx(Form, {\n      className: classes.root\n    }, __jsx(\"div\", {\n      className: \"menu-btns\"\n    }, __jsx(\"div\", null, __jsx(Typography, null, errors.adType && touched.adType ? errors.adType.id : ''), __jsx(ButtonComponent, {\n      onClick: handleMenuOpen(setTypeAnchor)\n    }, values.adType.name), __jsx(CustomMenu, {\n      items: adTypes,\n      anchorEl: typeAnchor,\n      open: Boolean(typeAnchor),\n      onBlur: handleBlur,\n      onClose: handleMenuClose(setTypeAnchor),\n      onClick: handleClickMenuItem\n    })), __jsx(\"div\", null, __jsx(Typography, null, errors.adCategory && touched.adCategory ? errors.adCategory.id : ''), __jsx(ButtonComponent, {\n      onClick: handleMenuOpen(setCategoryAnchor)\n    }, values.adCategory.name), __jsx(CustomMenu, {\n      items: categoriesList,\n      anchorEl: categoryAnchor,\n      open: Boolean(categoryAnchor),\n      onBlur: handleBlur,\n      onClose: handleMenuClose(setCategoryAnchor),\n      onClick: handleClickMenuItem\n    }))), __jsx(\"div\", {\n      className: \"form-btns\"\n    }, __jsx(ButtonComponent, {\n      onClick: handleCloseModal\n    }, __jsx(Typography, null, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\")), __jsx(ButtonComponent, {\n      type: \"submit\"\n    }, __jsx(Typography, null, \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C\"))));\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/createAdModalForm/CreateAdModalForm.tsx"],"names":["React","useState","Formik","Form","Router","useDispatch","useSelector","setAdvrtCtgryAction","Typography","ButtonComponent","adTypeAndCtgrySchema","CustomMenu","useStyles","adTypes","id","name","initValues","adType","adCategory","CreateAdModalForm","props","handleCloseModal","dispatch","categoriesList","categories","list","typeAnchor","setTypeAnchor","categoryAnchor","setCategoryAnchor","handleMenuOpen","setAnchor","e","currentTarget","handleMenuClose","submit","values","push","classes","errors","touched","setValues","handleBlur","handleClickMenuItem","newValue","console","log","root","Boolean"],"mappings":"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","sourcesContent":["import React, {FC, useState} from \"react\";\r\nimport {Formik, Form, FormikProps} from \"formik\";\r\nimport {Router} from \"@root/i18n\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setAdvrtCtgryAction} from '@src/redux/slices/createAdvrtSlice';\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport {adTypeAndCtgrySchema} from \"@src/validation_schemas/validationSchemas\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {CustomMenu} from \"@src/components/elements/custom_menu/CustomMenu\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const adTypes = [\r\n    {id: 1, name: 'Объявление'},\r\n    {id: 2, name: 'Торг'},\r\n    {id: 3, name: 'Продвинутый торг'},\r\n];\r\n\r\nconst initValues = {\r\n    adType: {\r\n        id: null,\r\n        name: 'Выберите тип'\r\n    },\r\n    adCategory: {\r\n        id: null,\r\n        name: 'Выберите категорию'\r\n    }\r\n};\r\n\r\nexport const CreateAdModalForm: FC<any> = (props) => {\r\n    const {handleCloseModal} = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const categoriesList = useSelector(({categories}: RootState) => categories.list);\r\n\r\n    const [typeAnchor, setTypeAnchor] = useState(null);\r\n    const [categoryAnchor, setCategoryAnchor] = useState(null);\r\n\r\n    const handleMenuOpen = (setAnchor) => (e) => {\r\n        setAnchor(e.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = (setAnchor) => () => {\r\n        setAnchor(null);\r\n    };\r\n\r\n    const submit = (values) => {\r\n        dispatch(setAdvrtCtgryAction(values));\r\n        Router.push('/create_advertisement');\r\n        handleCloseModal();\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Formik initialValues={initValues} validationSchema={adTypeAndCtgrySchema} onSubmit={submit}>\r\n            {\r\n                ({\r\n                     errors,\r\n                     touched,\r\n                     values,\r\n                     setValues,\r\n                     handleBlur\r\n                 }: FormikProps<any> & { errors: any }) => {\r\n\r\n                    const handleClickMenuItem = (newValue) => () => {\r\n                        setValues({...values, ...newValue});\r\n                    };\r\n                    console.log(values)\r\n                    return (\r\n                        <Form className={classes.root}>\r\n                            <div className='menu-btns'>\r\n                                <div>\r\n                                    <Typography>{errors.adType && touched.adType ? errors.adType.id : ''}</Typography>\r\n                                    <ButtonComponent onClick={handleMenuOpen(setTypeAnchor)}>\r\n                                        {values.adType.name}\r\n                                    </ButtonComponent>\r\n                                    <CustomMenu\r\n                                        items={adTypes}\r\n                                        anchorEl={typeAnchor}\r\n                                        open={Boolean(typeAnchor)}\r\n                                        onBlur={handleBlur}\r\n                                        onClose={handleMenuClose(setTypeAnchor)}\r\n                                        onClick={handleClickMenuItem}\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <Typography>{errors.adCategory && touched.adCategory ? errors.adCategory.id : ''}</Typography>\r\n                                    <ButtonComponent onClick={handleMenuOpen(setCategoryAnchor)}>\r\n                                        {values.adCategory.name}\r\n                                    </ButtonComponent>\r\n                                    <CustomMenu\r\n                                        items={categoriesList}\r\n                                        anchorEl={categoryAnchor}\r\n                                        open={Boolean(categoryAnchor)}\r\n                                        onBlur={handleBlur}\r\n                                        onClose={handleMenuClose(setCategoryAnchor)}\r\n                                        onClick={handleClickMenuItem}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='form-btns'>\r\n                                <ButtonComponent onClick={handleCloseModal}>\r\n                                    <Typography>Отмена</Typography>\r\n                                </ButtonComponent>\r\n                                <ButtonComponent type='submit'>\r\n                                    <Typography>Продолжить</Typography>\r\n                                </ButtonComponent>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}