{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useEffect } from 'react';\nimport { CustomSlider } from '../../../elements/custom_slider/CustomSlider';\nimport { useStyles } from './useStyles';\nexport var SyncSliders = function SyncSliders(props) {\n  _s();\n\n  var imgs = props.imgs,\n      setInitialSlide = props.setInitialSlide,\n      _props$isModalOpen = props.isModalOpen,\n      isModalOpen = _props$isModalOpen === void 0 ? false : _props$isModalOpen,\n      _props$handleOpenModa = props.handleOpenModal,\n      handleOpenModal = _props$handleOpenModa === void 0 ? null : _props$handleOpenModa;\n\n  var _useState = useState({\n    nav1: null,\n    nav2: null\n  }),\n      slidersNav = _useState[0],\n      setSlidersNav = _useState[1];\n\n  var slider1 = useRef();\n  var slider2 = useRef();\n\n  var handleAfterChange = function handleAfterChange(_, newIndex) {\n    setInitialSlide(newIndex);\n  };\n\n  useEffect(function () {\n    setSlidersNav({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, []);\n  var classes = useStyles(isModalOpen);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: classes.firstSlider\n  }, __jsx(CustomSlider, {\n    ref: slider1,\n    asNavFor: slidersNav.nav2,\n    centerMode: imgs.length === 1,\n    variableWidth: true,\n    focusOnSelect: true,\n    beforeChange: handleAfterChange\n  }, imgs.map(function (img, i) {\n    return __jsx(\"img\", {\n      key: i,\n      alt: img.alt,\n      src: img.url[\"default\"],\n      onClick: handleOpenModal\n    });\n  }))), __jsx(\"div\", {\n    className: classes.secondSlider\n  }, __jsx(CustomSlider, {\n    ref: slider2,\n    asNavFor: slidersNav.nav1,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    arrows: false,\n    focusOnSelect: true\n  }, imgs.map(function (_ref, i) {\n    var url = _ref.url,\n        alt = _ref.alt;\n    return __jsx(\"img\", {\n      key: i,\n      alt: alt,\n      src: url[\"default\"]\n    });\n  }))));\n};\n\n_s(SyncSliders, \"LKpQkc+JRJV91MCZASpQnHETC2s=\", false, function () {\n  return [useStyles];\n});\n\n_c = SyncSliders;\n\nvar _c;\n\n$RefreshReg$(_c, \"SyncSliders\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/show_advertisement/sync_sliders/SyncSliders.tsx"],"names":["React","useRef","useState","useEffect","CustomSlider","useStyles","SyncSliders","props","imgs","setInitialSlide","isModalOpen","handleOpenModal","nav1","nav2","slidersNav","setSlidersNav","slider1","slider2","handleAfterChange","_","newIndex","current","classes","root","firstSlider","length","map","img","i","alt","url","secondSlider"],"mappings":";;;AAAA,OAAOA,KAAP,IAKIC,MALJ,EAMIC,QANJ,EAOIC,SAPJ,QAQO,OARP;AASA,SAAQC,YAAR,QAA2B,8CAA3B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAaA,OAAO,IAAMC,WAAiC,GAAG,SAApCA,WAAoC,CAACC,KAAD,EAAW;AAAA;;AAAA,MAEpDC,IAFoD,GAMpDD,KANoD,CAEpDC,IAFoD;AAAA,MAGpDC,eAHoD,GAMpDF,KANoD,CAGpDE,eAHoD;AAAA,2BAMpDF,KANoD,CAIpDG,WAJoD;AAAA,MAIpDA,WAJoD,mCAItC,KAJsC;AAAA,8BAMpDH,KANoD,CAKpDI,eALoD;AAAA,MAKpDA,eALoD,sCAKlC,IALkC;;AAAA,kBAQpBT,QAAQ,CAAC;AAACU,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAD,CARY;AAAA,MAQjDC,UARiD;AAAA,MAQrCC,aARqC;;AASxD,MAAMC,OAAkC,GAAGf,MAAM,EAAjD;AACA,MAAMgB,OAAkC,GAAGhB,MAAM,EAAjD;;AAEA,MAAMiB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAIC,QAAJ,EAAiB;AACvCX,IAAAA,eAAe,CAACW,QAAD,CAAf;AACH,GAFD;;AAIAjB,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,aAAa,CAAC;AACVH,MAAAA,IAAI,EAAEI,OAAO,CAACK,OADJ;AAEVR,MAAAA,IAAI,EAAEI,OAAO,CAACI;AAFJ,KAAD,CAAb;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,MAAMC,OAAO,GAAGjB,SAAS,CAACK,WAAD,CAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACC;AAAxB,KACI;AAAK,IAAA,SAAS,EAAED,OAAO,CAACE;AAAxB,KACI,MAAC,YAAD;AACI,IAAA,GAAG,EAAER,OADT;AAEI,IAAA,QAAQ,EAAEF,UAAU,CAACD,IAFzB;AAGI,IAAA,UAAU,EAAEL,IAAI,CAACiB,MAAL,KAAgB,CAHhC;AAII,IAAA,aAAa,EAAE,IAJnB;AAKI,IAAA,aAAa,EAAE,IALnB;AAMI,IAAA,YAAY,EAAEP;AANlB,KAQKV,IAAI,CAACkB,GAAL,CAAS,UAACC,GAAD,EAAMC,CAAN;AAAA,WACN;AACI,MAAA,GAAG,EAAEA,CADT;AAEI,MAAA,GAAG,EAAED,GAAG,CAACE,GAFb;AAGI,MAAA,GAAG,EAAEF,GAAG,CAACG,GAAJ,WAHT;AAII,MAAA,OAAO,EAAEnB;AAJb,MADM;AAAA,GAAT,CARL,CADJ,CADJ,EAoBI;AAAK,IAAA,SAAS,EAAEW,OAAO,CAACS;AAAxB,KACI,MAAC,YAAD;AACI,IAAA,GAAG,EAAEd,OADT;AAEI,IAAA,QAAQ,EAAEH,UAAU,CAACF,IAFzB;AAGI,IAAA,YAAY,EAAE,CAHlB;AAII,IAAA,cAAc,EAAE,CAJpB;AAKI,IAAA,MAAM,EAAE,KALZ;AAMI,IAAA,aAAa,EAAE;AANnB,KAQKJ,IAAI,CAACkB,GAAL,CAAS,gBAAaE,CAAb;AAAA,QAAEE,GAAF,QAAEA,GAAF;AAAA,QAAOD,GAAP,QAAOA,GAAP;AAAA,WACN;AACI,MAAA,GAAG,EAAED,CADT;AAEI,MAAA,GAAG,EAAEC,GAFT;AAGI,MAAA,GAAG,EAAEC,GAAG;AAHZ,MADM;AAAA,GAAT,CARL,CADJ,CApBJ,CADJ;AAyCH,CAjEM;;GAAMxB,W;UAuBOD,S;;;KAvBPC,W","sourcesContent":["import React, {\r\n    FC,\r\n    Dispatch,\r\n    SetStateAction,\r\n    MutableRefObject,\r\n    useRef,\r\n    useState,\r\n    useEffect,\r\n} from 'react';\r\nimport {CustomSlider} from '../../../elements/custom_slider/CustomSlider';\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\ntype SyncSlidersProps = {\r\n    isModalOpen?: boolean;\r\n    handleOpenModal?: () => void;\r\n    setInitialSlide: Dispatch<SetStateAction<number>>;\r\n    imgs: {\r\n        alt: string;\r\n        url: { default: string }\r\n    }[];\r\n};\r\n\r\nexport const SyncSliders: FC<SyncSlidersProps> = (props) => {\r\n    const {\r\n        imgs,\r\n        setInitialSlide,\r\n        isModalOpen = false,\r\n        handleOpenModal = null,\r\n    } = props;\r\n\r\n    const [slidersNav, setSlidersNav] = useState({nav1: null, nav2: null});\r\n    const slider1: MutableRefObject<unknown> = useRef();\r\n    const slider2: MutableRefObject<unknown> = useRef();\r\n\r\n    const handleAfterChange = (_, newIndex) => {\r\n        setInitialSlide(newIndex);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setSlidersNav({\r\n            nav1: slider1.current,\r\n            nav2: slider2.current,\r\n        });\r\n    }, []);\r\n\r\n    const classes = useStyles(isModalOpen);\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.firstSlider}>\r\n                <CustomSlider\r\n                    ref={slider1}\r\n                    asNavFor={slidersNav.nav2}\r\n                    centerMode={imgs.length === 1}\r\n                    variableWidth={true}\r\n                    focusOnSelect={true}\r\n                    beforeChange={handleAfterChange}\r\n                >\r\n                    {imgs.map((img, i) => (\r\n                        <img\r\n                            key={i}\r\n                            alt={img.alt}\r\n                            src={img.url.default}\r\n                            onClick={handleOpenModal}\r\n                        />\r\n                    ))}\r\n                </CustomSlider>\r\n            </div>\r\n            <div className={classes.secondSlider}>\r\n                <CustomSlider\r\n                    ref={slider2}\r\n                    asNavFor={slidersNav.nav1}\r\n                    slidesToShow={4}\r\n                    slidesToScroll={1}\r\n                    arrows={false}\r\n                    focusOnSelect={true}\r\n                >\r\n                    {imgs.map(({url, alt}, i) => (\r\n                        <img\r\n                            key={i}\r\n                            alt={alt}\r\n                            src={url.default}\r\n                        />\r\n                    ))}\r\n                </CustomSlider>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}