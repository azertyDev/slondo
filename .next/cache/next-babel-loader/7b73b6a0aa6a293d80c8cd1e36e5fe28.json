{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Grid } from \"@material-ui/core\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport React from \"react\";\nexport const CustomDroppable = props => {\n  const {\n    droppableId,\n    files,\n    isPreview,\n    removeFile\n  } = props;\n  return __jsx(Droppable, {\n    isCombineEnabled: true,\n    droppableId: droppableId,\n    direction: \"horizontal\"\n  }, provided => __jsx(Grid, _extends({\n    container: true,\n    className: \"images-wrapper\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef\n  }), files.map(({\n    url,\n    file\n  }, index) => {\n    const isUrl = typeof url === 'string';\n    return __jsx(Draggable, {\n      key: index,\n      index: index,\n      draggableId: index.toString(),\n      isDragDisabled: isPreview || !isUrl,\n      disableInteractiveElementBlocking: true\n    }, provided => __jsx(Grid, _extends({\n      item: true,\n      xs: 4,\n      md: 3,\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps), isUrl ? __jsx(React.Fragment, null, __jsx(\"img\", {\n      src: url,\n      style: {\n        width: '160px',\n        height: '120px',\n        objectFit: 'cover'\n      },\n      alt: file.name\n    }), __jsx(ButtonComponent, {\n      disabled: isPreview,\n      onClick: removeFile(url)\n    }, \"X\")) : url));\n  }), provided.placeholder));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/preview_photos/CustomDroppable.tsx"],"names":["Grid","Draggable","Droppable","ButtonComponent","React","CustomDroppable","props","droppableId","files","isPreview","removeFile","provided","droppableProps","innerRef","map","url","file","index","isUrl","toString","draggableProps","dragHandleProps","width","height","objectFit","name","placeholder"],"mappings":";;;;AAAA,SAAQA,IAAR,QAAmB,mBAAnB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,qBAAnC;AACA,SAAQC,eAAR,QAA8B,wCAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACtC,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,SAArB;AAAgCC,IAAAA;AAAhC,MAA8CJ,KAApD;AAEA,SACI,MAAC,SAAD;AACI,IAAA,gBAAgB,EAAE,IADtB;AAEI,IAAA,WAAW,EAAEC,WAFjB;AAGI,IAAA,SAAS,EAAC;AAHd,KAKKI,QAAQ,IACL,MAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,SAAS,EAAC;AAFd,KAGQA,QAAQ,CAACC,cAHjB;AAII,IAAA,GAAG,EAAED,QAAQ,CAACE;AAJlB,MAMKL,KAAK,CAACM,GAAN,CAAU,CAAC;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAD,EAAcC,KAAd,KAAwB;AAC3B,UAAMC,KAAK,GAAG,OAAOH,GAAP,KAAe,QAA7B;AAEA,WACI,MAAC,SAAD;AACI,MAAA,GAAG,EAAEE,KADT;AAEI,MAAA,KAAK,EAAEA,KAFX;AAGI,MAAA,WAAW,EAAEA,KAAK,CAACE,QAAN,EAHjB;AAII,MAAA,cAAc,EAAEV,SAAS,IAAI,CAACS,KAJlC;AAKI,MAAA,iCAAiC,EAAE;AALvC,OAOKP,QAAQ,IACL,MAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,EAAE,EAAE,CAHR;AAII,MAAA,GAAG,EAAEA,QAAQ,CAACE;AAJlB,OAKQF,QAAQ,CAACS,cALjB,EAMQT,QAAQ,CAACU,eANjB,GASQH,KAAK,GACC,4BACE;AACI,MAAA,GAAG,EAAEH,GADT;AAEI,MAAA,KAAK,EAAE;AACHO,QAAAA,KAAK,EAAE,OADJ;AAEHC,QAAAA,MAAM,EAAE,OAFL;AAGHC,QAAAA,SAAS,EAAE;AAHR,OAFX;AAOI,MAAA,GAAG,EAAER,IAAI,CAACS;AAPd,MADF,EAUE,MAAC,eAAD;AACI,MAAA,QAAQ,EAAEhB,SADd;AAEI,MAAA,OAAO,EAAEC,UAAU,CAACK,GAAD;AAFvB,WAVF,CADD,GAgBCA,GAzBd,CARR,CADJ;AAwCH,GA3CJ,CANL,EAmDKJ,QAAQ,CAACe,WAnDd,CANR,CADJ;AA+DH,CAlEM","sourcesContent":["import {Grid} from \"@material-ui/core\";\r\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const CustomDroppable = (props) => {\r\n    const {droppableId, files, isPreview, removeFile} = props;\r\n\r\n    return (\r\n        <Droppable\r\n            isCombineEnabled={true}\r\n            droppableId={droppableId}\r\n            direction=\"horizontal\"\r\n        >\r\n            {provided => (\r\n                <Grid\r\n                    container\r\n                    className=\"images-wrapper\"\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                >\r\n                    {files.map(({url, file}, index) => {\r\n                            const isUrl = typeof url === 'string';\r\n\r\n                            return (\r\n                                <Draggable\r\n                                    key={index}\r\n                                    index={index}\r\n                                    draggableId={index.toString()}\r\n                                    isDragDisabled={isPreview || !isUrl}\r\n                                    disableInteractiveElementBlocking={true}\r\n                                >\r\n                                    {provided => (\r\n                                        <Grid\r\n                                            item\r\n                                            xs={4}\r\n                                            md={3}\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                        >\r\n                                            {\r\n                                                isUrl\r\n                                                    ? <>\r\n                                                        <img\r\n                                                            src={url}\r\n                                                            style={{\r\n                                                                width: '160px',\r\n                                                                height: '120px',\r\n                                                                objectFit: 'cover'\r\n                                                            }}\r\n                                                            alt={file.name}\r\n                                                        />\r\n                                                        <ButtonComponent\r\n                                                            disabled={isPreview}\r\n                                                            onClick={removeFile(url)}\r\n                                                        >X</ButtonComponent>\r\n                                                    </>\r\n                                                    : url\r\n                                            }\r\n                                        </Grid>\r\n                                    )}\r\n                                </Draggable>\r\n                            )\r\n                        }\r\n                    )}\r\n                    {provided.placeholder}\r\n                </Grid>\r\n            )}\r\n        </Droppable>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}