{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { CustomSlider } from \"@src/components/elements/custom_slider/CustomSlider\";\nimport { settings } from './sliderSettings';\nimport { useSelector } from 'react-redux';\nimport { Link } from \"@root/i18n\";\nimport { useStyles } from './useStyles';\nexport var CategoriesSlider = function CategoriesSlider(props) {\n  _s();\n\n  var t = props.t;\n\n  var _useSelector = useSelector(function (_ref) {\n    var categories = _ref.categories;\n    return categories;\n  }),\n      isFetch = _useSelector.isFetch,\n      error = _useSelector.error,\n      list = _useSelector.list;\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    variant: \"h4\"\n  }, t('popularCategories')), __jsx(\"div\", {\n    className: \"category-slider\"\n  }, __jsx(CustomSlider, settings, isFetch ? __jsx(Typography, {\n    style: {\n      color: 'red'\n    }\n  }, \"...Loading\") : error ? __jsx(Typography, null, error) : list.map(function (category) {\n    return __jsx(Link, {\n      href: \"#\",\n      key: category.id\n    }, __jsx(\"a\", null, __jsx(\"img\", {\n      src: category.images.url,\n      alt: \"category\"\n    }), __jsx(Typography, null, category.name)));\n  }))));\n};\n\n_s(CategoriesSlider, \"6jMY70RUFIWjmc2QFAYDUQRQcRQ=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = CategoriesSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesSlider\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/header/sliders/categoriesSlider/CategoriesSlider.tsx"],"names":["React","Typography","CustomSlider","settings","useSelector","Link","useStyles","CategoriesSlider","props","t","categories","isFetch","error","list","classes","root","color","map","category","id","images","url","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,YAAR,QAA2B,qDAA3B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAAQC,IAAR,QAAmB,YAAnB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAAA;;AAAA,MAChCC,CADgC,GAC3BD,KAD2B,CAChCC,CADgC;;AAAA,qBAGRL,WAAW,CAAC;AAAA,QAAEM,UAAF,QAAEA,UAAF;AAAA,WAA6BA,UAA7B;AAAA,GAAD,CAHH;AAAA,MAGhCC,OAHgC,gBAGhCA,OAHgC;AAAA,MAGvBC,KAHuB,gBAGvBA,KAHuB;AAAA,MAGhBC,IAHgB,gBAGhBA,IAHgB;;AAKvC,MAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAEQ,OAAO,CAACC;AAAxB,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KAA0BN,CAAC,CAAC,mBAAD,CAA3B,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,YAAD,EAAkBN,QAAlB,EAEQQ,OAAO,GAEC,MAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAE;AAAR;AAAnB,kBAFD,GAKCJ,KAAK,GAEG,MAAC,UAAD,QAAaA,KAAb,CAFH,GAIEC,IAAI,CAACI,GAAL,CAAS,UAAAC,QAAQ;AAAA,WACZ,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAe,MAAA,GAAG,EAAEA,QAAQ,CAACC;AAA7B,OACI,iBACI;AAAK,MAAA,GAAG,EAAED,QAAQ,CAACE,MAAT,CAAgBC,GAA1B;AAA+B,MAAA,GAAG,EAAC;AAAnC,MADJ,EAEI,MAAC,UAAD,QAAaH,QAAQ,CAACI,IAAtB,CAFJ,CADJ,CADY;AAAA,GAAjB,CAXvB,CADJ,CAFJ,CADJ;AA8BH,CApCM;;GAAMf,gB;UAGsBH,W,EAEfE,S;;;KALPC,gB","sourcesContent":["import React from 'react'\r\nimport {Typography} from '@material-ui/core'\r\nimport {CustomSlider} from \"@src/components/elements/custom_slider/CustomSlider\"\r\nimport {settings} from './sliderSettings'\r\nimport {useSelector} from 'react-redux'\r\nimport {RootState} from \"@src/redux/rootReducer\"\r\nimport {Link} from \"@root/i18n\"\r\nimport {useStyles} from './useStyles'\r\n\r\n\r\nexport const CategoriesSlider = (props) => {\r\n    const {t} = props;\r\n\r\n    const {isFetch, error, list} = useSelector(({categories}: RootState) => categories);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h4\">{t('popularCategories')}</Typography>\r\n            <div className='category-slider'>\r\n                <CustomSlider {...settings}>\r\n                    {\r\n                        isFetch\r\n                            ? (\r\n                                <Typography style={{color: 'red'}}>...Loading</Typography>\r\n                            )\r\n                            : (\r\n                                error\r\n                                    ? (\r\n                                        <Typography>{error}</Typography>\r\n                                    )\r\n                                    : (list.map(category => (\r\n                                            <Link href=\"#\" key={category.id}>\r\n                                                <a>\r\n                                                    <img src={category.images.url} alt='category'/>\r\n                                                    <Typography>{category.name}</Typography>\r\n                                                </a>\r\n                                            </Link>\r\n                                        ))\r\n                                    )\r\n                            )\r\n                    }\r\n                </CustomSlider>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}