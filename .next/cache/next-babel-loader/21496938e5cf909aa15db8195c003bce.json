{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { FormikProvider, useFormik } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { AncmntAuctionForm } from './AncmntAuctionForm';\nimport { setErrorMsgAction } from \"@src/redux/slices/errorSlice\";\nimport { createAdvrtSchema } from \"@root/validation_schemas/createAdvrtSchema\";\nimport { TOTAL_FILES_LIMIT } from \"@src/constants\";\nimport { initUrl } from \"@src/components/announcement_auction/create_ancmnt_auction/CreateAncmntAuctionContainer\";\nexport const autoSelectKeys = ['condition', 'area'];\nexport const textFieldKeys = ['area'];\nconst numberRegEx = /^[0-9]*$/;\nexport const AncmntAuctionFormContainer = props => {\n  const {\n    locations\n  } = useSelector(store => store);\n  const {\n    isPreview,\n    handleNextStep\n  } = props; // const {\n  //     values,\n  //     setValues,\n  //     errors,\n  //     touched,\n  //     setTouched,\n  //     handleBlur,\n  //     handleSubmit,\n  // } = props.formik;\n  // let {adParams} = values;\n\n  const initPhotos = Array.from({\n    length: TOTAL_FILES_LIMIT\n  }).map(() => initUrl);\n  const initFormFields = {\n    isFetch: false,\n    title: '',\n    safe_deal: false,\n    delivery: false,\n    exchange: false,\n    location: null,\n    files: initPhotos,\n    description: '',\n    phone: '',\n    price: '',\n    currency: {\n      id: null,\n      name: ''\n    },\n    avalTime: {\n      isActive: false,\n      start_time: '00:00',\n      end_time: '00:00',\n      week: [{\n        id: 1,\n        name: 'Пн'\n      }, {\n        id: 2,\n        name: 'Вт'\n      }, {\n        id: 3,\n        name: 'Ср'\n      }, {\n        id: 4,\n        name: 'Чт'\n      }, {\n        id: 5,\n        name: 'Пт'\n      }, {\n        id: 6,\n        name: 'Сб'\n      }, {\n        id: 7,\n        name: 'Вс'\n      }]\n    },\n    auction: {\n      duration: {\n        id: null,\n        expiration_at: null\n      },\n      offer_the_price: false,\n      auto_renewal: false,\n      reserve_price: '',\n      price_by_now: {\n        isActive: false,\n        value: ''\n      },\n      display_phone: false\n    },\n    adParams: {\n      safety: [],\n      multimedia: [],\n      assistant: [],\n      exterior: [],\n      car_climate: [],\n      airbags: []\n    }\n  };\n\n  async function onSubmit(values) {\n    try {\n      if (!isPreview) {\n        handleNextStep();\n        setStatuses(_objectSpread(_objectSpread({}, statuses), {}, {\n          isPreview: true\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          isFetch: true\n        }));\n        const data = getFormData(values); // await userAPI.createAdvrt(data);\n\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          isFetch: false\n        }));\n        handleResetStep();\n        setStatuses(_objectSpread(_objectSpread({}, statuses), {}, {\n          isSuccess: true,\n          isPreview: false\n        }));\n      }\n    } catch (e) {\n      dispatch(setErrorMsgAction(e.message));\n      setCreateAncmnt(_objectSpread(_objectSpread({}, createAncmnt), {}, {\n        isFetch: false\n      }));\n    }\n  }\n\n  const formik = useFormik({\n    initialValues: initFormFields,\n    validationSchema: createAdvrtSchema,\n    onSubmit\n  });\n  const {\n    values,\n    setValues,\n    setErrors,\n    setTouched\n  } = formik;\n  const {\n    adParams\n  } = values;\n\n  const handleCheckboxChange = valName => ({\n    target\n  }) => {\n    const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price'].some(fieldName => fieldName === valName);\n\n    if (isAuctionField) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          [valName]: target.checked\n        })\n      }));\n    } else if (valName === 'price_by_now') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          price_by_now: {\n            isActive: target.checked,\n            value: values.auction.price_by_now.value\n          }\n        })\n      }));\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        [valName]: target.checked\n      }));\n    }\n  };\n\n  const handleParamsCheckbox = (valueName, value) => () => {\n    if (adParams[valueName]) {\n      if (adParams[valueName].some(val => val.id === value.id)) {\n        adParams[valueName].map((val, index) => {\n          if (val.id === value.id) {\n            adParams[valueName].splice(index, 1);\n          }\n        });\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n          [valueName]: [...adParams[valueName], value]\n        });\n      }\n    } else {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: [value]\n      });\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      adParams\n    }));\n  };\n\n  const handleMenuItem = valueName => (newValue, setAnchor) => () => {\n    setAnchor(null);\n\n    if (valueName === 'currency') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        [valueName]: newValue\n      }));\n    } else if (valueName === 'duration') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          [valueName]: newValue\n        })\n      }));\n    } else {\n      // Reset sub props in values\n      Object.keys(newValue).map(key => {\n        if (adParams[key]) {\n          adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n            [key]: {\n              id: null,\n              name: 'Не выбрано'\n            }\n          });\n        }\n\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          adParams: _objectSpread(_objectSpread({}, adParams), {}, {\n            [valueName]: newValue\n          })\n        }));\n      });\n    }\n  };\n\n  const handleListItem = (valueName, value) => () => {\n    if (adParams[valueName] && adParams[valueName].id === value.id) {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: {\n          id: null,\n          name: 'Не выбрано'\n        }\n      });\n    } else {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: value\n      });\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      adParams\n    }));\n  };\n\n  const handleInput = valueName => ({\n    target\n  }) => {\n    if (numberRegEx.test(target.value)) {\n      if (valueName === 'price') {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          [valueName]: target.value\n        }));\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n          [valueName]: target.value\n        });\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          adParams\n        }));\n      }\n    }\n  };\n\n  const handleAuctionInput = valName => ({\n    target\n  }) => {\n    if (numberRegEx.test(target.value)) {\n      if (valName === 'price_by_now') {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n            [valName]: {\n              isActive: true,\n              value: target.value\n            }\n          })\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n            [valName]: target.value\n          })\n        }));\n      }\n    }\n  };\n\n  const handleSwitch = (_, value) => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n        isActive: value\n      })\n    }));\n  };\n\n  const handleWeekDay = value => () => {\n    if (values.avalTime.week.some(val => val.id === value.id)) {\n      values.avalTime.week.map((val, index) => {\n        if (val.id === value.id) {\n          values.avalTime.week.splice(index, 1);\n        }\n      });\n      setValues(_objectSpread({}, values));\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n          week: [...values.avalTime.week, value]\n        })\n      }));\n    }\n  };\n\n  const handleTime = ({\n    target\n  }) => {\n    let {\n      value\n    } = target;\n    const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\n    const isValid = regEx.test(value);\n\n    if (isValid) {\n      value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n          [target.name]: value\n        })\n      }));\n    }\n  };\n\n  useEffect(() => {\n    window && window.scrollTo(0, 0);\n  }, []);\n  return __jsx(FormikProvider, {\n    value: props.formik\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(AncmntAuctionForm, _extends({}, props, {\n    errors: errors,\n    touched: touched,\n    setTouched: setTouched,\n    values: values,\n    setValues: setValues,\n    locations: locations,\n    handleBlur: handleBlur,\n    handleTime: handleTime,\n    handleInput: handleInput,\n    handleSwitch: handleSwitch,\n    handleWeekDay: handleWeekDay,\n    handleListItem: handleListItem,\n    handleMenuItem: handleMenuItem,\n    handleAuctionInput: handleAuctionInput,\n    handleParamsCheckbox: handleParamsCheckbox,\n    handleCheckboxChange: handleCheckboxChange\n  }))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/announcement_auction/create_ancmnt_auction/ancmnt_auction_form/AncmntAuctionFormContainer.tsx"],"names":["React","useEffect","FormikProvider","useFormik","useSelector","AncmntAuctionForm","setErrorMsgAction","createAdvrtSchema","TOTAL_FILES_LIMIT","initUrl","autoSelectKeys","textFieldKeys","numberRegEx","AncmntAuctionFormContainer","props","locations","store","isPreview","handleNextStep","initPhotos","Array","from","length","map","initFormFields","isFetch","title","safe_deal","delivery","exchange","location","files","description","phone","price","currency","id","name","avalTime","isActive","start_time","end_time","week","auction","duration","expiration_at","offer_the_price","auto_renewal","reserve_price","price_by_now","value","display_phone","adParams","safety","multimedia","assistant","exterior","car_climate","airbags","onSubmit","values","setStatuses","statuses","setValues","data","getFormData","handleResetStep","isSuccess","e","dispatch","message","setCreateAncmnt","createAncmnt","formik","initialValues","validationSchema","setErrors","setTouched","handleCheckboxChange","valName","target","isAuctionField","some","fieldName","checked","handleParamsCheckbox","valueName","val","index","splice","handleMenuItem","newValue","setAnchor","Object","keys","key","handleListItem","handleInput","test","handleAuctionInput","handleSwitch","_","handleWeekDay","handleTime","regEx","isValid","replace","m","window","scrollTo","handleSubmit","errors","touched","handleBlur"],"mappings":"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","sourcesContent":["import React, {FC, useEffect} from 'react';\r\nimport {FormikProvider, useFormik} from \"formik\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AncmntAuctionForm} from './AncmntAuctionForm';\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {CreateAncmntFields, FileType} from \"@root/interfaces/Announcement\";\r\nimport {setErrorMsgAction} from \"@src/redux/slices/errorSlice\";\r\nimport {createAdvrtSchema} from \"@root/validation_schemas/createAdvrtSchema\";\r\nimport {TOTAL_FILES_LIMIT} from \"@src/constants\";\r\nimport {initUrl} from \"@src/components/announcement_auction/create_ancmnt_auction/CreateAncmntAuctionContainer\";\r\n\r\n\r\nexport const autoSelectKeys = ['condition', 'area'];\r\nexport const textFieldKeys = ['area'];\r\n\r\nconst numberRegEx = /^[0-9]*$/;\r\n\r\nexport const AncmntAuctionFormContainer: FC<any> = (props) => {\r\n    const {locations} = useSelector((store: RootState) => store);\r\n\r\n    const {\r\n        isPreview,\r\n        handleNextStep,\r\n    } = props;\r\n\r\n    // const {\r\n    //     values,\r\n    //     setValues,\r\n    //     errors,\r\n    //     touched,\r\n    //     setTouched,\r\n    //     handleBlur,\r\n    //     handleSubmit,\r\n    // } = props.formik;\r\n\r\n    // let {adParams} = values;\r\n\r\n    const initPhotos: FileType[] = Array.from({\r\n        length: TOTAL_FILES_LIMIT\r\n    }).map(() => initUrl);\r\n\r\n    const initFormFields: CreateAncmntFields = {\r\n        isFetch: false,\r\n        title: '',\r\n        safe_deal: false,\r\n        delivery: false,\r\n        exchange: false,\r\n        location: null,\r\n        files: initPhotos,\r\n        description: '',\r\n        phone: '',\r\n        price: '',\r\n        currency: {\r\n            id: null,\r\n            name: ''\r\n        },\r\n        avalTime: {\r\n            isActive: false,\r\n            start_time: '00:00',\r\n            end_time: '00:00',\r\n            week: [\r\n                {id: 1, name: 'Пн'},\r\n                {id: 2, name: 'Вт'},\r\n                {id: 3, name: 'Ср'},\r\n                {id: 4, name: 'Чт'},\r\n                {id: 5, name: 'Пт'},\r\n                {id: 6, name: 'Сб'},\r\n                {id: 7, name: 'Вс'}\r\n            ],\r\n        },\r\n        auction: {\r\n            duration: {\r\n                id: null,\r\n                expiration_at: null\r\n            },\r\n            offer_the_price: false,\r\n            auto_renewal: false,\r\n            reserve_price: '',\r\n            price_by_now: {\r\n                isActive: false,\r\n                value: ''\r\n            },\r\n            display_phone: false,\r\n        },\r\n        adParams: {\r\n            safety: [],\r\n            multimedia: [],\r\n            assistant: [],\r\n            exterior: [],\r\n            car_climate: [],\r\n            airbags: [],\r\n        }\r\n    };\r\n\r\n    async function onSubmit(values: CreateAncmntFields) {\r\n        try {\r\n            if (!isPreview) {\r\n                handleNextStep();\r\n                setStatuses({...statuses, isPreview: true});\r\n            } else {\r\n                setValues({...values, isFetch: true});\r\n\r\n                const data = getFormData(values);\r\n                // await userAPI.createAdvrt(data);\r\n\r\n                setValues({...values, isFetch: false});\r\n\r\n                handleResetStep();\r\n                setStatuses({...statuses, isSuccess: true, isPreview: false});\r\n            }\r\n        } catch (e) {\r\n            dispatch(setErrorMsgAction(e.message));\r\n            setCreateAncmnt({...createAncmnt, isFetch: false});\r\n        }\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initFormFields,\r\n        validationSchema: createAdvrtSchema,\r\n        onSubmit\r\n    });\r\n\r\n    const {values, setValues, setErrors, setTouched} = formik;\r\n    const {adParams} = values;\r\n\r\n    const handleCheckboxChange = (valName) => ({target}) => {\r\n        const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price']\r\n            .some(fieldName => fieldName === valName);\r\n\r\n        if (isAuctionField) {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valName]: target.checked\r\n                }\r\n            });\r\n        } else if (valName === 'price_by_now') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    price_by_now: {\r\n                        isActive: target.checked,\r\n                        value: values.auction.price_by_now.value\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            setValues({...values, [valName]: target.checked});\r\n        }\r\n    };\r\n\r\n    const handleParamsCheckbox = (valueName, value) => () => {\r\n        if (adParams[valueName]) {\r\n            if (adParams[valueName].some(val => val.id === value.id)) {\r\n                adParams[valueName].map((val, index) => {\r\n                    if (val.id === value.id) {\r\n                        adParams[valueName].splice(index, 1);\r\n                    }\r\n                });\r\n            } else {\r\n                adParams = {\r\n                    ...adParams,\r\n                    [valueName]: [...adParams[valueName], value]\r\n                };\r\n            }\r\n        } else {\r\n            adParams = {...adParams, [valueName]: [value]};\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n        setAnchor(null);\r\n\r\n        if (valueName === 'currency') {\r\n            setValues({\r\n                ...values,\r\n                [valueName]: newValue\r\n            });\r\n        } else if (valueName === 'duration') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valueName]: newValue\r\n                }\r\n            });\r\n        } else {\r\n            // Reset sub props in values\r\n            Object.keys(newValue).map(key => {\r\n                if (adParams[key]) {\r\n                    adParams = {\r\n                        ...adParams,\r\n                        [key]: {id: null, name: 'Не выбрано'}\r\n                    };\r\n                }\r\n                setValues({\r\n                    ...values,\r\n                    adParams: {\r\n                        ...adParams,\r\n                        [valueName]: newValue\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleListItem = (valueName, value) => () => {\r\n        if (adParams[valueName] && adParams[valueName].id === value.id) {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: {id: null, name: 'Не выбрано'}\r\n            };\r\n        } else {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: value\r\n            };\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleInput = (valueName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valueName === 'price') {\r\n                setValues({...values, [valueName]: target.value})\r\n            } else {\r\n                adParams = {...adParams, [valueName]: target.value};\r\n                setValues({...values, adParams})\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleAuctionInput = (valName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valName === 'price_by_now') {\r\n                setValues({\r\n                    ...values,\r\n                    auction: {\r\n                        ...values.auction,\r\n                        [valName]: {\r\n                            isActive: true,\r\n                            value: target.value\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    auction: {\r\n                        ...values.auction,\r\n                        [valName]: target.value\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSwitch = (_, value) => {\r\n        setValues({\r\n            ...values,\r\n            avalTime: {\r\n                ...values.avalTime,\r\n                isActive: value\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleWeekDay = (value) => () => {\r\n        if (values.avalTime.week.some(val => val.id === value.id)) {\r\n            values.avalTime.week.map((val, index) => {\r\n                if (val.id === value.id) {\r\n                    values.avalTime.week.splice(index, 1)\r\n                }\r\n            });\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    week: [\r\n                        ...values.avalTime.week,\r\n                        value\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTime = ({target}) => {\r\n        let {value} = target;\r\n        const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\r\n        const isValid = regEx.test(value);\r\n\r\n        if (isValid) {\r\n            value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    [target.name]: value\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window && window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    return (\r\n        <FormikProvider value={props.formik}>\r\n            <form onSubmit={handleSubmit}>\r\n                <AncmntAuctionForm\r\n                    {...props}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    setTouched={setTouched}\r\n                    values={values}\r\n                    setValues={setValues}\r\n                    locations={locations}\r\n                    handleBlur={handleBlur}\r\n                    handleTime={handleTime}\r\n                    handleInput={handleInput}\r\n                    handleSwitch={handleSwitch}\r\n                    handleWeekDay={handleWeekDay}\r\n                    handleListItem={handleListItem}\r\n                    handleMenuItem={handleMenuItem}\r\n                    handleAuctionInput={handleAuctionInput}\r\n                    handleParamsCheckbox={handleParamsCheckbox}\r\n                    handleCheckboxChange={handleCheckboxChange}\r\n                />\r\n            </form>\r\n        </FormikProvider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}