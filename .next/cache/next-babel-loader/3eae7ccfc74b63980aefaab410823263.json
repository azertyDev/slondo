{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { CardItem } from '@src/components/elements/card/Card';\nexport const GridView = props => {\n  const {\n    isFetch,\n    list,\n    t\n  } = props;\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, list.map((item, index) => {\n    return __jsx(Grid, {\n      key: index,\n      xs: 6,\n      sm: 4,\n      lg: 3,\n      item: true\n    }, __jsx(CardItem, _extends({\n      t: t\n    }, item, {\n      isFetch: isFetch\n    })));\n  }));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/card_view/grid_view/GridView.tsx"],"names":["React","Grid","CardItem","GridView","props","isFetch","list","t","map","item","index"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,SAAQC,QAAR,QAAuB,oCAAvB;AAIA,OAAO,MAAMC,QAA4B,GAAIC,KAAD,IAAW;AACnD,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAAqBH,KAA3B;AACA,SACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE;AAAzB,KACKE,IAAI,CAACE,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,WACI,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAgC,MAAA,EAAE,EAAE,CAApC;AAAuC,MAAA,IAAI;AAA3C,OACI,MAAC,QAAD;AACI,MAAA,CAAC,EAAEH;AADP,OAEQE,IAFR;AAGI,MAAA,OAAO,EAAEJ;AAHb,OADJ,CADJ;AASH,GAVA,CADL,CADJ;AAeH,CAjBM","sourcesContent":["import React, {FC} from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport {CardItem} from '@src/components/elements/card/Card';\r\nimport {ViewPropsTypes} from \"@src/components/elements/card_view/CardView\";\r\n\r\n\r\nexport const GridView: FC<ViewPropsTypes> = (props) => {\r\n    const {isFetch, list, t} = props;\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {list.map((item, index) => {\r\n                return (\r\n                    <Grid key={index} xs={6} sm={4} lg={3} item>\r\n                        <CardItem\r\n                            t={t}\r\n                            {...item}\r\n                            isFetch={isFetch}\r\n                        />\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </Grid>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}