{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Grid, Tabs, Tab, Typography } from \"@material-ui/core\";\nimport { CustomTabPanel } from \"@src/components/elements/custom_tab_panel/CustomTabPanel\";\nimport { CabinetMenuWrapper } from \"@src/components/cabinet/CabinetMenuWrapper\";\nimport { useStyles } from './useStyles';\nexport const TabsContent = ({\n  tabsData,\n  headerTitle,\n  title,\n  t\n}) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(CabinetMenuWrapper, {\n    headerTitle: headerTitle,\n    title: title,\n    t: t\n  }, __jsx(Grid, {\n    item: true,\n    xs: 9,\n    className: classes.cabinetTabs\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    variant: \"fullWidth\"\n  }, __jsx(Tab, {\n    label: __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, `${tabsData[0].title} (${tabsData[0].count})`),\n    value: 0\n  }), __jsx(Tab, {\n    label: __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, `${tabsData[1].title} (${tabsData[1].count})`),\n    value: 1\n  }))), __jsx(CustomTabPanel, {\n    value: value,\n    index: 0\n  }, tabsData[0].component), __jsx(CustomTabPanel, {\n    value: value,\n    index: 1\n  }, tabsData[1].component)));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/cabinet/cabinet_pages/TabsContent.tsx"],"names":["React","useState","Grid","Tabs","Tab","Typography","CustomTabPanel","CabinetMenuWrapper","useStyles","TabsContent","tabsData","headerTitle","title","t","value","setValue","handleChange","event","newValue","classes","root","cabinetTabs","count","component"],"mappings":";AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA0C,mBAA1C;AACA,SAAQC,cAAR,QAA6B,0DAA7B;AACA,SAA8BC,kBAA9B,QAAuD,4CAAvD;AAEA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAO,MAAMC,WAAoE,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA;AAA/B,CAAD,KAAuC;AACvH,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMe,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtCH,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAEW,OAAO,CAACC;AAAxB,KACI,MAAC,kBAAD;AAAoB,IAAA,WAAW,EAAET,WAAjC;AAA8C,IAAA,KAAK,EAAEC,KAArD;AAA4D,IAAA,CAAC,EAAEC;AAA/D,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,SAAS,EAAEM,OAAO,CAACE;AAArC,KACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAEP,KADX;AAEI,IAAA,QAAQ,EAAEE,YAFd;AAGI,IAAA,cAAc,EAAC,SAHnB;AAII,IAAA,OAAO,EAAC;AAJZ,KAMI,MAAC,GAAD;AACI,IAAA,KAAK,EACD,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC;AAApB,OACM,GAAEN,QAAQ,CAAC,CAAD,CAAR,CAAYE,KAAM,KAAIF,QAAQ,CAAC,CAAD,CAAR,CAAYY,KAAM,GADhD,CAFR;AAMI,IAAA,KAAK,EAAE;AANX,IANJ,EAcI,MAAC,GAAD;AACI,IAAA,KAAK,EACD,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC;AAApB,OACM,GAAEZ,QAAQ,CAAC,CAAD,CAAR,CAAYE,KAAM,KAAIF,QAAQ,CAAC,CAAD,CAAR,CAAYY,KAAM,GADhD,CAFR;AAMI,IAAA,KAAK,EAAE;AANX,IAdJ,CADJ,CADJ,EA0BI,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAER,KAAvB;AAA8B,IAAA,KAAK,EAAE;AAArC,KACKJ,QAAQ,CAAC,CAAD,CAAR,CAAYa,SADjB,CA1BJ,EA6BI,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAET,KAAvB;AAA8B,IAAA,KAAK,EAAE;AAArC,KACKJ,QAAQ,CAAC,CAAD,CAAR,CAAYa,SADjB,CA7BJ,CADJ,CADJ;AAqCH,CA7CM","sourcesContent":["import React, {FC, useState} from 'react';\r\nimport {Grid, Tabs, Tab, Typography} from \"@material-ui/core\";\r\nimport {CustomTabPanel} from \"@src/components/elements/custom_tab_panel/CustomTabPanel\";\r\nimport {CabinetMenuPropsType, CabinetMenuWrapper} from \"@src/components/cabinet/CabinetMenuWrapper\";\r\nimport {TabsDataType} from \"@src/components/cabinet/cabinet_pages/archive/ArchiveContainer\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const TabsContent: FC<CabinetMenuPropsType & { tabsData: TabsDataType[] }> = ({tabsData, headerTitle, title, t}) => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <CabinetMenuWrapper headerTitle={headerTitle} title={title} t={t}>\r\n                <Grid item xs={9} className={classes.cabinetTabs}>\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                    >\r\n                        <Tab\r\n                            label={\r\n                                <Typography variant=\"subtitle1\">\r\n                                    {`${tabsData[0].title} (${tabsData[0].count})`}\r\n                                </Typography>\r\n                            }\r\n                            value={0}\r\n                        />\r\n                        <Tab\r\n                            label={\r\n                                <Typography variant=\"subtitle1\">\r\n                                    {`${tabsData[1].title} (${tabsData[1].count})`}\r\n                                </Typography>\r\n                            }\r\n                            value={1}\r\n                        />\r\n                    </Tabs>\r\n                </Grid>\r\n                <CustomTabPanel value={value} index={0}>\r\n                    {tabsData[0].component}\r\n                </CustomTabPanel>\r\n                <CustomTabPanel value={value} index={1}>\r\n                    {tabsData[1].component}\r\n                </CustomTabPanel>\r\n            </CabinetMenuWrapper>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}