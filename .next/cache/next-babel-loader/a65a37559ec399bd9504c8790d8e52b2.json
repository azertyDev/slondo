{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { object, number, string, array, mixed, lazy } from \"yup\";\nexport var requiredFields = {\n  year: true,\n  mileage: true,\n  body: true,\n  manufacturer: true,\n  model: true,\n  colors: true,\n  car_engine_type: true,\n  transmission: true\n};\nvar requiredMsg = 'Обязательный параметр!';\nvar lazyAdParams = lazy(function (value) {\n  return object(Object.entries(value).reduce(function (a, _ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n        key = _ref2[0];\n\n    if (requiredFields[key]) {\n      a[key] = object({\n        id: number().nullable().required(requiredMsg)\n      });\n      return a;\n    }\n  }, {}));\n});\nexport var createAdvrtSchema = object().shape({\n  adType: object({\n    id: number().nullable().required(requiredMsg)\n  }),\n  category: object({\n    id: number().nullable().required(requiredMsg)\n  }),\n  title: string().required(requiredMsg),\n  price: string().required(requiredMsg),\n  currency: lazy(function (value) {\n    if (value) {\n      return string().required(requiredMsg);\n    }\n\n    return mixed().notRequired();\n  }),\n  location: object({\n    city_id: number().required(requiredMsg)\n  }).nullable().required(requiredMsg),\n  files: array().required(requiredMsg),\n  description: string().required(requiredMsg),\n  phone: string().required(requiredMsg),\n  adParams: lazyAdParams\n});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/validation_schemas/createAdvrtSchema.ts"],"names":["object","number","string","array","mixed","lazy","requiredFields","year","mileage","body","manufacturer","model","colors","car_engine_type","transmission","requiredMsg","lazyAdParams","value","Object","entries","reduce","a","key","id","nullable","required","createAdvrtSchema","shape","adType","category","title","price","currency","notRequired","location","city_id","files","description","phone","adParams"],"mappings":";AAAA,SAAQA,MAAR,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,KAAvC,EAA8CC,IAA9C,QAAyD,KAAzD;AAGA,OAAO,IAAMC,cAAc,GAAG;AAC1BC,EAAAA,IAAI,EAAE,IADoB;AAE1BC,EAAAA,OAAO,EAAE,IAFiB;AAG1BC,EAAAA,IAAI,EAAE,IAHoB;AAI1BC,EAAAA,YAAY,EAAE,IAJY;AAK1BC,EAAAA,KAAK,EAAE,IALmB;AAM1BC,EAAAA,MAAM,EAAE,IANkB;AAO1BC,EAAAA,eAAe,EAAE,IAPS;AAQ1BC,EAAAA,YAAY,EAAE;AARY,CAAvB;AAWP,IAAMC,WAAW,GAAG,wBAApB;AAEA,IAAMC,YAAY,GAAGX,IAAI,CAAC,UAACY,KAAD;AAAA,SAAWjB,MAAM,CACvCkB,MAAM,CAACC,OAAP,CAAeF,KAAf,EACKG,MADL,CAEQ,UAACC,CAAD,QAAc;AAAA;AAAA,QAATC,GAAS;;AACV,QAAIhB,cAAc,CAACgB,GAAD,CAAlB,EAAyB;AACrBD,MAAAA,CAAC,CAACC,GAAD,CAAD,GAAStB,MAAM,CAAC;AACZuB,QAAAA,EAAE,EAAEtB,MAAM,GAAGuB,QAAT,GAAoBC,QAApB,CAA6BV,WAA7B;AADQ,OAAD,CAAf;AAGA,aAAOM,CAAP;AACH;AACJ,GATT,EASW,EATX,CADuC,CAAjB;AAAA,CAAD,CAAzB;AAcA,OAAO,IAAMK,iBAAiB,GAAG1B,MAAM,GAAG2B,KAAT,CAAe;AAC5CC,EAAAA,MAAM,EAAE5B,MAAM,CAAC;AACXuB,IAAAA,EAAE,EAAEtB,MAAM,GAAGuB,QAAT,GAAoBC,QAApB,CAA6BV,WAA7B;AADO,GAAD,CAD8B;AAI5Cc,EAAAA,QAAQ,EAAE7B,MAAM,CAAC;AACbuB,IAAAA,EAAE,EAAEtB,MAAM,GAAGuB,QAAT,GAAoBC,QAApB,CAA6BV,WAA7B;AADS,GAAD,CAJ4B;AAO5Ce,EAAAA,KAAK,EAAE5B,MAAM,GAAGuB,QAAT,CAAkBV,WAAlB,CAPqC;AAQ5CgB,EAAAA,KAAK,EAAE7B,MAAM,GAAGuB,QAAT,CAAkBV,WAAlB,CARqC;AAS5CiB,EAAAA,QAAQ,EAAE3B,IAAI,CAAC,UAAAY,KAAK,EAAI;AACpB,QAAIA,KAAJ,EAAW;AACP,aAAOf,MAAM,GAAGuB,QAAT,CAAkBV,WAAlB,CAAP;AACH;;AACD,WAAOX,KAAK,GAAG6B,WAAR,EAAP;AACH,GALa,CAT8B;AAe5CC,EAAAA,QAAQ,EAAElC,MAAM,CAAC;AACbmC,IAAAA,OAAO,EAAElC,MAAM,GAAGwB,QAAT,CAAkBV,WAAlB;AADI,GAAD,CAAN,CAEPS,QAFO,GAEIC,QAFJ,CAEaV,WAFb,CAfkC;AAkB5CqB,EAAAA,KAAK,EAAEjC,KAAK,GAAGsB,QAAR,CAAiBV,WAAjB,CAlBqC;AAmB5CsB,EAAAA,WAAW,EAAEnC,MAAM,GAAGuB,QAAT,CAAkBV,WAAlB,CAnB+B;AAoB5CuB,EAAAA,KAAK,EAAEpC,MAAM,GAAGuB,QAAT,CAAkBV,WAAlB,CApBqC;AAqB5CwB,EAAAA,QAAQ,EAAEvB;AArBkC,CAAf,CAA1B","sourcesContent":["import {object, number, string, array, mixed, lazy} from \"yup\";\r\n\r\n\r\nexport const requiredFields = {\r\n    year: true,\r\n    mileage: true,\r\n    body: true,\r\n    manufacturer: true,\r\n    model: true,\r\n    colors: true,\r\n    car_engine_type: true,\r\n    transmission: true,\r\n};\r\n\r\nconst requiredMsg = 'Обязательный параметр!';\r\n\r\nconst lazyAdParams = lazy((value) => object(\r\n    Object.entries(value)\r\n        .reduce(\r\n            (a, [key]) => {\r\n                if (requiredFields[key]) {\r\n                    a[key] = object({\r\n                        id: number().nullable().required(requiredMsg)\r\n                    });\r\n                    return a;\r\n                }\r\n            }, {}\r\n        )\r\n));\r\n\r\nexport const createAdvrtSchema = object().shape({\r\n    adType: object({\r\n        id: number().nullable().required(requiredMsg)\r\n    }),\r\n    category: object({\r\n        id: number().nullable().required(requiredMsg)\r\n    }),\r\n    title: string().required(requiredMsg),\r\n    price: string().required(requiredMsg),\r\n    currency: lazy(value => {\r\n        if (value) {\r\n            return string().required(requiredMsg);\r\n        }\r\n        return mixed().notRequired();\r\n    }),\r\n    location: object({\r\n        city_id: number().required(requiredMsg),\r\n    }).nullable().required(requiredMsg),\r\n    files: array().required(requiredMsg),\r\n    description: string().required(requiredMsg),\r\n    phone: string().required(requiredMsg),\r\n    adParams: lazyAdParams\r\n});"]},"metadata":{},"sourceType":"module"}