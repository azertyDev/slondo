{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { FETCH_SELF_DATA_BEGIN, FETCH_SELF_DATA_FAILURE, FETCH_SELF_DATA_SUCCESS } from '../actions/selfDataActions';\nvar initialState = {\n  isFetch: false,\n  data: {\n    id: null,\n    name: '',\n    email: '',\n    phone: '',\n    email_verified_at: '',\n    created_at: '',\n    updated_at: ''\n  },\n  error: null\n};\nexport var selfDataReducer = function selfDataReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload.selfData);\n\n    case FETCH_SELF_DATA_BEGIN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFetch: true,\n        error: null\n      });\n\n    case FETCH_SELF_DATA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFetch: false\n      }, action.payload);\n\n    case FETCH_SELF_DATA_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFetch: false,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/reducers/selfDataReducer.ts"],"names":["HYDRATE","FETCH_SELF_DATA_BEGIN","FETCH_SELF_DATA_FAILURE","FETCH_SELF_DATA_SUCCESS","initialState","isFetch","data","id","name","email","phone","email_verified_at","created_at","updated_at","error","selfDataReducer","state","action","type","payload","selfData"],"mappings":";;;;;;AACA,SAAQA,OAAR,QAAsB,oBAAtB;AACA,SAAQC,qBAAR,EAA+BC,uBAA/B,EAAwDC,uBAAxD,QAAsF,4BAAtF;AAgBA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAE,IADF;AAEFC,IAAAA,IAAI,EAAE,EAFJ;AAGFC,IAAAA,KAAK,EAAE,EAHL;AAIFC,IAAAA,KAAK,EAAE,EAJL;AAKFC,IAAAA,iBAAiB,EAAE,EALjB;AAMFC,IAAAA,UAAU,EAAE,EANV;AAOFC,IAAAA,UAAU,EAAE;AAPV,GAFW;AAWjBC,EAAAA,KAAK,EAAE;AAXU,CAArB;AAcA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAA2E;AAAA,MAA1EC,KAA0E,uEAAnDZ,YAAmD;AAAA,MAArCa,MAAqC;;AACtG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,OAAL;AACI,6CACOgB,KADP,GAEOC,MAAM,CAACE,OAAP,CAAeC,QAFtB;;AAIJ,SAAKnB,qBAAL;AACI,6CACOe,KADP;AAEIX,QAAAA,OAAO,EAAE,IAFb;AAGIS,QAAAA,KAAK,EAAE;AAHX;;AAKJ,SAAKX,uBAAL;AACI,6CACOa,KADP;AAEIX,QAAAA,OAAO,EAAE;AAFb,SAGOY,MAAM,CAACE,OAHd;;AAKJ,SAAKjB,uBAAL;AACI,6CACOc,KADP;AAEIX,QAAAA,OAAO,EAAE,KAFb;AAGIS,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAHlB;;AAKJ;AACI,aAAOH,KAAP;AAzBR;AA2BH,CA5BM","sourcesContent":["import {AnyAction} from \"redux\"\r\nimport {HYDRATE} from \"next-redux-wrapper\"\r\nimport {FETCH_SELF_DATA_BEGIN, FETCH_SELF_DATA_FAILURE, FETCH_SELF_DATA_SUCCESS} from '../actions/selfDataActions'\r\n\r\ntype SelfDataTypes = {\r\n    isFetch: boolean,\r\n    data: {\r\n        id: number,\r\n        name: string,\r\n        email: string,\r\n        phone: string,\r\n        email_verified_at: string,\r\n        created_at: string,\r\n        updated_at: string\r\n    },\r\n    error: any\r\n};\r\n\r\nconst initialState = {\r\n    isFetch: false,\r\n    data: {\r\n        id: null,\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        email_verified_at: '',\r\n        created_at: '',\r\n        updated_at: ''\r\n    },\r\n    error: null\r\n};\r\n\r\nexport const selfDataReducer = (state: SelfDataTypes = initialState, action: AnyAction): SelfDataTypes => {\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            return {\r\n                ...state,\r\n                ...action.payload.selfData\r\n            }\r\n        case FETCH_SELF_DATA_BEGIN:\r\n            return {\r\n                ...state,\r\n                isFetch: true,\r\n                error: null\r\n            }\r\n        case FETCH_SELF_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetch: false,\r\n                ...action.payload\r\n            }\r\n        case FETCH_SELF_DATA_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFetch: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}