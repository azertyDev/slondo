{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Grid, Paper, Switch, TextField, Typography } from '@material-ui/core';\nimport { Help } from '@material-ui/icons';\nimport { CustomFormikField } from \"@src/components/elements/custom_formik_field/CustomFormikField\";\nimport { CustomCheckbox } from \"@src/components/elements/custom_checkbox/CustomCheckbox\";\nimport { PreviewPhotos } from \"@src/components/advertisement/create_advrt/preview_photos/PreviewPhotos\";\nimport { CustomMenu } from \"@src/components/elements/custom_menu/CustomMenu\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { LocationAutocomplete } from \"@src/components/elements/location_autocomplete/LocationAutocomplete\";\nimport { CustomFormikTextarea } from \"@src/components/elements/custom_formik_textarea/CustomFormikTextarea\";\nimport { SuccessAdvrt } from \"@src/components/advertisement/create_advrt/advrt_form/success_advrt/SuccessAdvrt\";\nimport { AdvrtParamsContainer } from \"@src/components/advertisement/create_advrt/advrt_form/advrt_params/AdvrtParamsContainer\";\nimport { useStyles } from './useStyles';\nexport const AdvrtForm = props => {\n  var _values$price;\n\n  const {\n    locations,\n    isSuccess,\n    isPreview,\n    createAdvrt,\n    values,\n    setValues,\n    touched,\n    errors,\n    handleTime,\n    handleBlur,\n    handleSwitch,\n    handleWeekDay,\n    handleMenuItem,\n    handleListItem,\n    handleInput,\n    handleCreateNew,\n    handleAuctionInput,\n    handleParamsCheckbox,\n    handleCheckboxChange\n  } = props;\n  const {\n    adType,\n    category,\n    subCategory\n  } = createAdvrt;\n  const isAuction = adType.id !== 1;\n  const isAdvanceAuction = adType.id === 3;\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, isSuccess ? __jsx(SuccessAdvrt, {\n    handleCreateNew: handleCreateNew\n  }) : __jsx(React.Fragment, null, __jsx(Typography, {\n    variant: \"h4\",\n    className: classes.title\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 - \", __jsx(\"span\", null, category.name)), __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    spacing: 2\n  }, __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true\n  }, __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, __jsx(\"strong\", null, \"\\u0422\\u0438\\u043F - \", `${adType.name}`)))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, __jsx(React.Fragment, null, __jsx(\"strong\", null, \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F - \", `${category.name} `), subCategory.name && __jsx(\"strong\", null, \"- \", subCategory.name))))), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, __jsx(\"strong\", null, \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\", !isPreview && __jsx(\"span\", {\n    className: \"error-text\"\n  }, \"*\")), errors.title && touched.title && __jsx(\"span\", {\n    className: \"error-text\"\n  }, \" \", errors.title)), isPreview ? __jsx(Typography, null, values.title) : __jsx(React.Fragment, null, __jsx(CustomFormikField, {\n    className: errors.title && touched.title ? 'error-border' : '',\n    name: \"title\",\n    placeholder: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0440: Samsung S9 black 64 Gb\",\n    value: values.title\n  })))), subCategory.id && __jsx(Grid, {\n    item: true,\n    container: true,\n    className: classes.parameters,\n    direction: \"column\"\n  }, __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"h5\"\n  }, __jsx(\"strong\", null, \"\\u041F\\u0430\\u0440\\u0430\\u043C\\u0435\\u0442\\u0440\\u044B\"))), __jsx(AdvrtParamsContainer, {\n    isPreview: isPreview,\n    values: values,\n    createAdvrt: createAdvrt,\n    onBlur: handleBlur,\n    errors: errors,\n    touched: touched,\n    handleMenuItem: handleMenuItem,\n    handleListItem: handleListItem,\n    handleInput: handleInput,\n    handleParamsCheckbox: handleParamsCheckbox\n  })), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    spacing: 2\n  }, isAuction && __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"h5\"\n  }, __jsx(\"strong\", null, \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u0430\\u0443\\u043A\\u0446\\u0438\\u043E\\u043D\\u0430\"))), category.id !== 11 && __jsx(React.Fragment, null, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, __jsx(\"strong\", null, isAuction ? 'Стартовая цена в сумах' : 'Цена', !isPreview && __jsx(\"span\", {\n    className: \"error-text\"\n  }, \"*\")), errors.price && touched.price && __jsx(\"span\", {\n    className: \"error-text\"\n  }, \" \", errors.price)), isPreview ? __jsx(Typography, null, `${values.price} ${values.currency.name}.`) : __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: isAuction ? 12 : 9\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    value: (_values$price = values.price) !== null && _values$price !== void 0 ? _values$price : '',\n    className: errors.price && touched.price ? 'error-border' : '',\n    onChange: handleInput('price')\n  })), !isAuction && __jsx(Grid, {\n    item: true,\n    xs: 3\n  }, __jsx(CustomMenu, {\n    name: \"currency\",\n    valueName: values.currency ? values.currency.name : 'Не выбрано',\n    items: adType.currency,\n    onClick: handleMenuItem('currency'),\n    onBlur: handleBlur\n  }))))), isAuction && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, __jsx(\"strong\", null, \"\\u0414\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432 \\u0432 \\u0447\\u0430\\u0441\\u0430\\u0445\"), errors.auction && errors.auction.duration && touched.duration && __jsx(\"span\", {\n    className: \"error-text\"\n  }, \" \", errors.auction.duration.id)), isPreview ? __jsx(Typography, null, `${values.auction.duration.expiration_at}`) : __jsx(CustomMenu, {\n    name: \"duration\",\n    getValByName: \"expiration_at\",\n    valueName: values.auction.duration.expiration_at ? values.auction.duration.expiration_at : 'Не выбрано',\n    items: adType.expired,\n    onClick: handleMenuItem('duration'),\n    onBlur: handleBlur\n  }))), isAdvanceAuction && __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    item: true,\n    xs: 6\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, __jsx(\"strong\", null, \"\\u0420\\u0435\\u0437\\u0435\\u0440\\u0432\\u043D\\u0430\\u044F \\u0446\\u0435\\u043D\\u0430 \\u0432 \\u0441\\u0443\\u043C\\u0430\\u0445\")), isPreview ? __jsx(Typography, null, values.auction.reserve_price) : __jsx(TextField, {\n    variant: \"outlined\",\n    value: values.auction.reserve_price,\n    onChange: handleAuctionInput('reserve_price')\n  })), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    direction: \"column\"\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    item: true,\n    xs: 6\n  }, __jsx(CustomCheckbox, {\n    disabled: isPreview,\n    checked: values.auction.price_by_now.isActive,\n    onChange: handleCheckboxChange('price_by_now')\n  }), __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, \"\\u041A\\u0443\\u043F\\u0438\\u0442\\u044C \\u0441\\u0435\\u0439\\u0447\\u0430\\u0441\")), values.auction.price_by_now.isActive && __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    item: true,\n    xs: 6\n  }, isPreview ? __jsx(Typography, null, values.auction.price_by_now.value) : __jsx(TextField, {\n    variant: \"outlined\",\n    value: values.auction.price_by_now.value,\n    onChange: handleAuctionInput('price_by_now')\n  }), \"\\xA0\", __jsx(Typography, null, \"\\u0441\\u0443\\u043C.\"))), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    item: true,\n    xs: 6\n  }, __jsx(CustomCheckbox, {\n    disabled: isPreview,\n    checked: values.auction.auto_renewal,\n    onChange: handleCheckboxChange('auto_renewal')\n  }), __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u043F\\u0440\\u043E\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435\"))), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    item: true,\n    xs: 6\n  }, __jsx(CustomCheckbox, {\n    disabled: isPreview,\n    checked: values.auction.offer_the_price,\n    onChange: handleCheckboxChange('offer_the_price')\n  }), __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, \"\\u041F\\u0440\\u0435\\u0434\\u043B\\u043E\\u0436\\u0438\\u0442\\u044C \\u0446\\u0435\\u043D\\u0443\")))))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    color: \"initial\"\n  }, __jsx(\"strong\", null, \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430 \\u0438 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430\"))), category.id !== 11 && __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    alignItems: \"center\",\n    justify: \"space-between\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, \"\\u0411\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u044B\\u0439 \\u0442\\u043E\\u0440\\u0433\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    className: classes.paymentAndDelivery\n  }, __jsx(CustomCheckbox, {\n    disabled: isPreview,\n    checked: values.safe_deal,\n    onChange: handleCheckboxChange('safe_deal')\n  }), __jsx(Help, {\n    className: \"question-mark\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435: \\u0412\\u044B \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u043B\\u0438 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0443 \\xAB\\u0411\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u044B\\u0439 \\u0442\\u043E\\u0440\\u0433\\xBB. \\u0412\\u0430\\u0448\\u0430 \\u0441\\u0434\\u0435\\u043B\\u043A\\u0430 \\u0437\\u0430\\u0449\\u0438\\u0449\\u0435\\u043D\\u0430. \\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C \\u0443\\u0441\\u043B\\u0443\\u0433\\u0438 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 n%.\", ' ', __jsx(\"a\", {\n    href: \"#\"\n  }, __jsx(\"span\", {\n    className: \"safe-auction-rules\"\n  }, \"\\u041E\\u0437\\u043D\\u0430\\u043A\\u043E\\u043C\\u0438\\u0442\\u044C\\u0441\\u044F \\u0441 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u0430\\u043C\\u0438 \\xAB\\u0411\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u044B\\u0439 \\u0442\\u043E\\u0440\\u0433\\xBB\"))))), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    alignItems: \"center\",\n    justify: \"space-between\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, \"\\u0415\\u0441\\u0442\\u044C \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    className: classes.paymentAndDelivery\n  }, __jsx(CustomCheckbox, {\n    disabled: isPreview,\n    checked: values.delivery,\n    onChange: handleCheckboxChange('delivery')\n  }), __jsx(Help, {\n    className: \"question-mark\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435: \\u0412\\u044B \\u0431\\u0443\\u0434\\u0435\\u0442\\u0435 \\u0432\\u044B\\u0434\\u0435\\u043B\\u0435\\u043D\\u044B \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u044B\\u043C \\u0441\\u0442\\u0438\\u043A\\u0435\\u0440\\u043E\\u043C \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430. \\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430 \\u043E\\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u043B\\u044F\\u0435\\u0442\\u0441\\u044F \\u0437\\u0430 \\u0412\\u0430\\u0448 \\u0441\\u0447\\u0435\\u0442. \\u0412 \\u0441\\u043B\\u0443\\u0447\\u0430\\u0435 \\u043D\\u0435\\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438, \\u0412\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0431\\u044B\\u0442\\u044C \\u0437\\u0430\\u0431\\u043B\\u043E\\u043A\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B.\", __jsx(\"a\", {\n    href: \"#\"\n  }, __jsx(\"span\", {\n    className: \"safe-auction-rules\"\n  }, \"\\u041E\\u0437\\u043D\\u0430\\u043A\\u043E\\u043C\\u0438\\u0442\\u044C\\u0441\\u044F \\u0441 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u0430\\u043C\\u0438 \\xAB\\u0415\\u0441\\u0442\\u044C \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430\\xBB\"))))), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: \"space-between\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, \"\\u0412\\u043E\\u0437\\u043C\\u043E\\u0436\\u0435\\u043D \\u043E\\u0431\\u043C\\u0435\\u043D\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    className: classes.paymentAndDelivery\n  }, __jsx(CustomCheckbox, {\n    disabled: isPreview,\n    checked: values.exchange,\n    onChange: handleCheckboxChange('exchange')\n  }), __jsx(Help, {\n    className: \"question-mark\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435: \\u0412\\u044B \\u043F\\u0440\\u0438\\u043D\\u0438\\u043C\\u0430\\u0435\\u0442\\u0435 \\u043F\\u0440\\u0435\\u0434\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u044F \\u043E\\u0442 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0445 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439 \\u043D\\u0430 \\u043E\\u0431\\u043C\\u0435\\u043D. \\u0412\\u044B \\u0431\\u0443\\u0434\\u0435\\u0442\\u0435 \\u0432\\u044B\\u0434\\u0435\\u043B\\u0435\\u043D\\u044B \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u044B\\u043C \", __jsx(\"br\", null), \"\\u0441\\u0442\\u0438\\u043A\\u0435\\u0440\\u043E\\u043C \\xAB\\u0412\\u043E\\u0437\\u043C\\u043E\\u0436\\u0435\\u043D \\u043E\\u0431\\u043C\\u0435\\u043D\\xBB\"))), __jsx(Grid, {\n    container: true,\n    item: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    xs: 12,\n    spacing: 1,\n    className: classes.advertisementName\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, __jsx(\"strong\", null, \"\\u041C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\", !isPreview && __jsx(\"span\", {\n    className: \"error-text\"\n  }, \"*\")), errors.location && touched.location && __jsx(\"span\", {\n    className: \"error-text\"\n  }, \" \", errors.location)), isPreview ? __jsx(Typography, null, values.location.district ? `${values.location.district}, ${values.location.city}, ` : `${values.location.city}, `, `${values.location.region}.`) : __jsx(LocationAutocomplete, {\n    name: \"location\",\n    placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434 \\u0438\\u043B\\u0438 \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D\",\n    values: values,\n    setValues: setValues,\n    list: locations.data,\n    onBlur: handleBlur,\n    className: errors.location && touched.location ? 'error-border' : ''\n  }))), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 2,\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: \"space-between\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, __jsx(\"strong\", null, \"\\u0424\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0438\", !isPreview && __jsx(\"span\", {\n    className: \"error-text\"\n  }, \"*\")), errors.files && touched.files && __jsx(\"span\", {\n    className: \"error-text\"\n  }, \" \", errors.files)), __jsx(PreviewPhotos, {\n    values: values,\n    setValues: setValues,\n    isPreview: isPreview\n  }))), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: \"space-between\",\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, __jsx(\"strong\", null, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\", !isPreview && __jsx(\"span\", {\n    className: \"error-text\"\n  }, \"*\")), errors.description && touched.description && __jsx(\"span\", {\n    className: \"error-text\"\n  }, \" \", errors.description)), isPreview ? __jsx(Typography, null, values.description) : __jsx(CustomFormikTextarea, {\n    name: \"description\",\n    onBlur: handleBlur,\n    className: `\n                                                    ${classes.description} \n                                                    ${errors.description && touched.description ? 'error-border' : ''}\n                                                `,\n    rowsMin: 15,\n    value: values.description\n  }))), __jsx(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    spacing: 1\n  }, __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    sm: 6,\n    spacing: 2,\n    direction: \"column\",\n    justify: \"center\"\n  }, adType.id !== 1 && __jsx(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\"\n  }, __jsx(CustomCheckbox, {\n    disabled: isPreview,\n    checked: values.auction.display_phone,\n    onChange: handleCheckboxChange('display_phone')\n  }), __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, \"\\u041E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0430\\u0442\\u044C \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\")), __jsx(Grid, {\n    item: true\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, __jsx(\"strong\", null, \"\\u0412\\u0430\\u0448 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\")), isPreview ? __jsx(Typography, null, \"+998909998877\") : __jsx(CustomFormikField, {\n    disabled: true,\n    type: \"tel\",\n    name: \"phone\",\n    value: \"+998909998877\"\n  })), (isPreview && values.phone || !isPreview) && __jsx(Grid, {\n    item: true\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, __jsx(\"strong\", null, \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\")), isPreview ? __jsx(Typography, null, values.phone) : __jsx(CustomFormikField, {\n    type: \"tel\",\n    name: \"phone\",\n    placeholder: \"+998 (__) ___ __ __\",\n    value: values.phone\n  }))), !isAuction && __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    xs: 12,\n    sm: 6\n  }, __jsx(Grid, {\n    item: true,\n    xs: 10,\n    className: classes.week\n  }, !isPreview && __jsx(\"div\", {\n    className: \"switcher\"\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, __jsx(\"strong\", null, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0437\\u0432\\u043E\\u043D\\u043A\\u043E\\u0432\")), __jsx(Switch, {\n    color: \"primary\",\n    checked: values.avalTime.isActive,\n    onChange: handleSwitch\n  })), (isPreview && values.avalTime.isActive || !isPreview) && __jsx(React.Fragment, null, __jsx(Paper, {\n    className: \"scheduler\"\n  }, __jsx(\"div\", {\n    className: \"week-days\"\n  }, [{\n    id: 1,\n    name: 'Пн'\n  }, {\n    id: 2,\n    name: 'Вт'\n  }, {\n    id: 3,\n    name: 'Ср'\n  }, {\n    id: 4,\n    name: 'Чт'\n  }, {\n    id: 5,\n    name: 'Пт'\n  }, {\n    id: 6,\n    name: 'Сб'\n  }, {\n    id: 7,\n    name: 'Вс'\n  }].map(day => {\n    return __jsx(CustomCheckbox, {\n      disabled: !values.avalTime.isActive || isPreview,\n      key: day.id,\n      checked: values.avalTime.isActive && values.avalTime.week.some(({\n        id\n      }) => id === day.id),\n      checkedIcon: __jsx(Typography, {\n        className: \"selected-day\"\n      }, day.name),\n      icon: __jsx(Typography, null, day.name),\n      onChange: handleWeekDay(day)\n    });\n  })), __jsx(\"div\", {\n    className: \"available-time\"\n  }, __jsx(\"div\", null, __jsx(Typography, null, \"\\u0421\"), __jsx(TextField, {\n    variant: \"outlined\",\n    name: \"start_time\",\n    onChange: handleTime,\n    onBlur: handleBlur,\n    value: values.avalTime.start_time,\n    disabled: !values.avalTime.isActive || isPreview\n  })), __jsx(\"div\", null, __jsx(Typography, null, \"\\u0414\\u043E\"), __jsx(TextField, {\n    variant: \"outlined\",\n    name: \"end_time\",\n    onChange: handleTime,\n    onBlur: handleBlur,\n    value: values.avalTime.end_time,\n    disabled: !values.avalTime.isActive || isPreview\n  })))), !isPreview && __jsx(\"a\", {\n    href: \"#\",\n    className: \"settings\"\n  }, \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\")))))), __jsx(\"div\", {\n    className: classes.nextButtonBlock\n  }, __jsx(ButtonComponent, {\n    disabled: values.isFetch,\n    className: classes.nextButton,\n    onClick: props.handleBackBtn\n  }, __jsx(Typography, null, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")), __jsx(ButtonComponent, {\n    disabled: values.isFetch,\n    type: \"submit\",\n    className: classes.nextButton\n  }, __jsx(Typography, null, isPreview ? 'Создать' : 'Далее')))));\n};","map":null,"metadata":{},"sourceType":"module"}