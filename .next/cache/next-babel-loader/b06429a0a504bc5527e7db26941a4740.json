{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { AncmntAutoForm } from \"./AncmntAutoForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormikProvider, useFormik } from \"formik\";\nimport { createAdvrtSchema, isRequired } from \"@root/validation_schemas/createAdvrtSchema\";\nimport { setErrorMsgAction } from \"@src/redux/slices/errorSlice\";\nimport { autoSelectKeys, formData, initFormFields, textFieldKeys } from \"../AncmntFormContainer\";\nimport { numberRegEx } from \"@src/helpers\";\nexport const AncmntAutoFormContainer = props => {\n  const {\n    activeStep,\n    ancmntType,\n    handleNextStep,\n    createAncmnt\n  } = props;\n  const {\n    category,\n    subCategory\n  } = createAncmnt;\n  const {\n    locations\n  } = useSelector(store => store);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: initFormFields,\n    validationSchema: createAdvrtSchema,\n    onSubmit\n  });\n  const {\n    values,\n    setValues,\n    errors,\n    touched,\n    setTouched,\n    handleBlur,\n    handleSubmit\n  } = formik;\n  let {\n    adParams\n  } = values;\n\n  async function onSubmit(values) {\n    try {\n      if (activeStep !== 3) {\n        handleNextStep();\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          isFetch: true\n        }));\n        const data = formData(values, ancmntType, subCategory); // await userAPI.createAdvrt(data);\n\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          isFetch: false\n        }));\n        handleNextStep();\n      }\n    } catch (e) {\n      dispatch(setErrorMsgAction(e.message));\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        isFetch: false\n      }));\n    }\n  }\n\n  const handleCheckboxChange = valName => ({\n    target\n  }) => {\n    const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price'].some(fieldName => fieldName === valName);\n\n    if (isAuctionField) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          [valName]: target.checked\n        })\n      }));\n    } else if (valName === 'price_by_now') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          price_by_now: {\n            isActive: target.checked,\n            value: values.auction.price_by_now.value\n          }\n        })\n      }));\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        [valName]: target.checked\n      }));\n    }\n  };\n\n  const handleParamsCheckbox = (valueName, value) => () => {\n    if (adParams[valueName]) {\n      if (adParams[valueName].some(val => val.id === value.id)) {\n        adParams[valueName].map((val, index) => {\n          if (val.id === value.id) {\n            adParams[valueName].splice(index, 1);\n          }\n        });\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n          [valueName]: [...adParams[valueName], value]\n        });\n      }\n    } else {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: [value]\n      });\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      adParams\n    }));\n  };\n\n  const handleMenuItem = valueName => (newValue, setAnchor) => () => {\n    setAnchor(null);\n\n    if (valueName === 'currency') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        [valueName]: newValue\n      }));\n    } else if (valueName === 'duration') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          [valueName]: newValue\n        })\n      }));\n    } else {\n      // Reset sub props in values\n      Object.keys(newValue).map(key => {\n        if (adParams[key]) {\n          adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n            [key]: {\n              id: null,\n              name: 'Не выбрано'\n            }\n          });\n        }\n\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          adParams: _objectSpread(_objectSpread({}, adParams), {}, {\n            [valueName]: newValue\n          })\n        }));\n      });\n    }\n  };\n\n  const handleListItem = (valueName, value) => () => {\n    if (adParams[valueName] && adParams[valueName].id === value.id) {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: {\n          id: null,\n          name: 'Не выбрано'\n        }\n      });\n    } else {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: value\n      });\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      adParams\n    }));\n  };\n\n  const handleInput = valueName => ({\n    target\n  }) => {\n    if (numberRegEx.test(target.value)) {\n      if (valueName === 'price') {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          [valueName]: target.value\n        }));\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n          [valueName]: target.value\n        });\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          adParams\n        }));\n      }\n    }\n  };\n\n  const handleSwitch = (_, value) => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n        isActive: value\n      })\n    }));\n  };\n\n  const handleWeekDay = value => () => {\n    if (values.avalTime.week.some(val => val.id === value.id)) {\n      values.avalTime.week.map((val, index) => {\n        if (val.id === value.id) {\n          values.avalTime.week.splice(index, 1);\n        }\n      });\n      setValues(_objectSpread({}, values));\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n          week: [...values.avalTime.week, value]\n        })\n      }));\n    }\n  };\n\n  const handleTime = ({\n    target\n  }) => {\n    let {\n      value\n    } = target;\n    const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\n    const isValid = regEx.test(value);\n\n    if (isValid) {\n      value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n          [target.name]: value\n        })\n      }));\n    }\n  };\n\n  const setReqValues = () => {\n    const reqVals = {};\n    const reqParamsVals = {};\n    const defaultVal = {\n      id: null,\n      name: 'Не выбрано'\n    };\n    const adParamsVals = subCategory.data;\n\n    if (category.id === 11) {\n      reqVals['price'] = '0';\n    }\n\n    if (ancmntType.currency.length !== 0) {\n      reqVals['currency'] = ancmntType.currency.filter(cur => cur.name === 'sum')[0];\n    }\n\n    if (ancmntType.id !== 1 && ancmntType.expired.length !== 0) {\n      reqVals['auction'] = _objectSpread(_objectSpread({}, values.auction), {}, {\n        duration: ancmntType.expired[0]\n      });\n    }\n\n    Object.keys(adParamsVals).forEach(key => {\n      if (isRequired(key) && adParams[key] === undefined) {\n        if (key === 'manufacturer' && subCategory.id == 1) {\n          reqParamsVals['models'] = defaultVal;\n        }\n\n        if (Array.isArray(adParamsVals[key])) {\n          reqParamsVals[key] = defaultVal;\n        } else {\n          reqParamsVals[key] = adParamsVals[key];\n        }\n      } else if (autoSelectKeys.some(k => k === key)) {\n        if (textFieldKeys.some(k => k === key)) {\n          reqParamsVals[`${key}_value`] = '';\n        }\n\n        reqParamsVals[key] = adParamsVals[key][0];\n      }\n    });\n    setValues(_objectSpread(_objectSpread(_objectSpread({}, values), reqVals), {}, {\n      adParams: _objectSpread(_objectSpread({}, adParams), reqParamsVals)\n    }));\n  };\n\n  useEffect(() => {\n    window && window.scrollTo(0, 0);\n  }, []);\n  useEffect(() => {\n    setReqValues();\n  }, [subCategory.parent.id, subCategory.parent.name]);\n  return __jsx(FormikProvider, {\n    value: formik\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(AncmntAutoForm, _extends({}, props, {\n    errors: errors,\n    touched: touched,\n    setTouched: setTouched,\n    values: values,\n    setValues: setValues,\n    locations: locations,\n    handleBlur: handleBlur,\n    handleTime: handleTime,\n    handleInput: handleInput,\n    handleSwitch: handleSwitch,\n    handleWeekDay: handleWeekDay,\n    handleListItem: handleListItem,\n    handleMenuItem: handleMenuItem,\n    handleParamsCheckbox: handleParamsCheckbox,\n    handleCheckboxChange: handleCheckboxChange\n  }))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/announcement/create_ancmnt/ancmnt_form/ancmnt_auto_form/AncmntAutoFormContainer.tsx"],"names":["React","useEffect","AncmntAutoForm","useDispatch","useSelector","FormikProvider","useFormik","createAdvrtSchema","isRequired","setErrorMsgAction","autoSelectKeys","formData","initFormFields","textFieldKeys","numberRegEx","AncmntAutoFormContainer","props","activeStep","ancmntType","handleNextStep","createAncmnt","category","subCategory","locations","store","dispatch","formik","initialValues","validationSchema","onSubmit","values","setValues","errors","touched","setTouched","handleBlur","handleSubmit","adParams","isFetch","data","e","message","handleCheckboxChange","valName","target","isAuctionField","some","fieldName","auction","checked","price_by_now","isActive","value","handleParamsCheckbox","valueName","val","id","map","index","splice","handleMenuItem","newValue","setAnchor","Object","keys","key","name","handleListItem","handleInput","test","handleSwitch","_","avalTime","handleWeekDay","week","handleTime","regEx","isValid","replace","m","setReqValues","reqVals","reqParamsVals","defaultVal","adParamsVals","currency","length","filter","cur","expired","duration","forEach","undefined","Array","isArray","k","window","scrollTo","parent"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {AncmntAutoForm} from \"./AncmntAutoForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {FormikProvider, useFormik} from \"formik\";\r\nimport {createAdvrtSchema, isRequired} from \"@root/validation_schemas/createAdvrtSchema\";\r\nimport {CreateAncmntFields} from \"@root/interfaces/Announcement\";\r\nimport {setErrorMsgAction} from \"@src/redux/slices/errorSlice\";\r\nimport {\r\n    autoSelectKeys,\r\n    formData,\r\n    initFormFields,\r\n    textFieldKeys\r\n} from \"../AncmntFormContainer\";\r\nimport {numberRegEx} from \"@src/helpers\";\r\n\r\n\r\nexport const AncmntAutoFormContainer = (props) => {\r\n    const {\r\n        activeStep,\r\n        ancmntType,\r\n        handleNextStep,\r\n        createAncmnt\r\n    } = props;\r\n    const {category, subCategory} = createAncmnt;\r\n\r\n    const {locations} = useSelector((store: RootState) => store);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: initFormFields,\r\n        validationSchema: createAdvrtSchema,\r\n        onSubmit\r\n    });\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        touched,\r\n        setTouched,\r\n        handleBlur,\r\n        handleSubmit\r\n    } = formik;\r\n    let {adParams} = values;\r\n\r\n    async function onSubmit(values: CreateAncmntFields) {\r\n        try {\r\n            if (activeStep !== 3) {\r\n                handleNextStep();\r\n            } else {\r\n                setValues({...values, isFetch: true});\r\n\r\n                const data = formData(values, ancmntType, subCategory);\r\n                // await userAPI.createAdvrt(data);\r\n\r\n                setValues({...values, isFetch: false});\r\n\r\n                handleNextStep();\r\n            }\r\n        } catch (e) {\r\n            dispatch(setErrorMsgAction(e.message));\r\n            setValues({...values, isFetch: false});\r\n        }\r\n    }\r\n\r\n    const handleCheckboxChange = (valName) => ({target}) => {\r\n        const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price']\r\n            .some(fieldName => fieldName === valName);\r\n\r\n        if (isAuctionField) {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valName]: target.checked\r\n                }\r\n            });\r\n        } else if (valName === 'price_by_now') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    price_by_now: {\r\n                        isActive: target.checked,\r\n                        value: values.auction.price_by_now.value\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            setValues({...values, [valName]: target.checked});\r\n        }\r\n    };\r\n\r\n    const handleParamsCheckbox = (valueName, value) => () => {\r\n        if (adParams[valueName]) {\r\n            if (adParams[valueName].some(val => val.id === value.id)) {\r\n                adParams[valueName].map((val, index) => {\r\n                    if (val.id === value.id) {\r\n                        adParams[valueName].splice(index, 1);\r\n                    }\r\n                });\r\n            } else {\r\n                adParams = {\r\n                    ...adParams,\r\n                    [valueName]: [...adParams[valueName], value]\r\n                };\r\n            }\r\n        } else {\r\n            adParams = {...adParams, [valueName]: [value]};\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n        setAnchor(null);\r\n\r\n        if (valueName === 'currency') {\r\n            setValues({\r\n                ...values,\r\n                [valueName]: newValue\r\n            });\r\n        } else if (valueName === 'duration') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valueName]: newValue\r\n                }\r\n            });\r\n        } else {\r\n            // Reset sub props in values\r\n            Object.keys(newValue).map(key => {\r\n                if (adParams[key]) {\r\n                    adParams = {\r\n                        ...adParams,\r\n                        [key]: {id: null, name: 'Не выбрано'}\r\n                    };\r\n                }\r\n                setValues({\r\n                    ...values,\r\n                    adParams: {\r\n                        ...adParams,\r\n                        [valueName]: newValue\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleListItem = (valueName, value) => () => {\r\n        if (adParams[valueName] && adParams[valueName].id === value.id) {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: {id: null, name: 'Не выбрано'}\r\n            };\r\n        } else {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: value\r\n            };\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleInput = (valueName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valueName === 'price') {\r\n                setValues({\r\n                    ...values,\r\n                    [valueName]: target.value\r\n                });\r\n            } else {\r\n                adParams = {\r\n                    ...adParams,\r\n                    [valueName]: target.value\r\n                };\r\n                setValues({\r\n                    ...values,\r\n                    adParams\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSwitch = (_, value) => {\r\n        setValues({\r\n            ...values,\r\n            avalTime: {\r\n                ...values.avalTime,\r\n                isActive: value\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleWeekDay = (value) => () => {\r\n        if (values.avalTime.week.some(val => val.id === value.id)) {\r\n            values.avalTime.week.map((val, index) => {\r\n                if (val.id === value.id) {\r\n                    values.avalTime.week.splice(index, 1)\r\n                }\r\n            });\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    week: [\r\n                        ...values.avalTime.week,\r\n                        value\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTime = ({target}) => {\r\n        let {value} = target;\r\n        const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\r\n        const isValid = regEx.test(value);\r\n\r\n        if (isValid) {\r\n            value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    [target.name]: value\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const setReqValues = () => {\r\n        const reqVals = {};\r\n        const reqParamsVals = {};\r\n        const defaultVal = {id: null, name: 'Не выбрано'};\r\n\r\n        const adParamsVals = subCategory.data;\r\n\r\n        if (category.id === 11) {\r\n            reqVals['price'] = '0';\r\n        }\r\n\r\n        if (ancmntType.currency.length !== 0) {\r\n            reqVals['currency'] = ancmntType.currency.filter(cur => cur.name === 'sum')[0];\r\n        }\r\n\r\n        if (ancmntType.id !== 1 && ancmntType.expired.length !== 0) {\r\n            reqVals['auction'] = {\r\n                ...values.auction,\r\n                duration: ancmntType.expired[0]\r\n            };\r\n        }\r\n\r\n        Object.keys(adParamsVals).forEach(key => {\r\n            if (isRequired(key) && adParams[key] === undefined) {\r\n                if (key === 'manufacturer' && subCategory.id == 1) {\r\n                    reqParamsVals['models'] = defaultVal;\r\n                }\r\n                if (Array.isArray(adParamsVals[key])) {\r\n                    reqParamsVals[key] = defaultVal;\r\n                } else {\r\n                    reqParamsVals[key] = adParamsVals[key];\r\n                }\r\n            } else if (autoSelectKeys.some(k => k === key)) {\r\n                if (textFieldKeys.some(k => k === key)) {\r\n                    reqParamsVals[`${key}_value`] = '';\r\n                }\r\n                reqParamsVals[key] = adParamsVals[key][0];\r\n            }\r\n        });\r\n\r\n        setValues({\r\n            ...values,\r\n            ...reqVals,\r\n            adParams: {\r\n                ...adParams,\r\n                ...reqParamsVals\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window && window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setReqValues();\r\n    }, [subCategory.parent.id, subCategory.parent.name]);\r\n\r\n    return (\r\n        <FormikProvider value={formik}>\r\n            <form onSubmit={handleSubmit}>\r\n                <AncmntAutoForm\r\n                    {...props}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    setTouched={setTouched}\r\n                    values={values}\r\n                    setValues={setValues}\r\n                    locations={locations}\r\n                    handleBlur={handleBlur}\r\n                    handleTime={handleTime}\r\n                    handleInput={handleInput}\r\n                    handleSwitch={handleSwitch}\r\n                    handleWeekDay={handleWeekDay}\r\n                    handleListItem={handleListItem}\r\n                    handleMenuItem={handleMenuItem}\r\n                    handleParamsCheckbox={handleParamsCheckbox}\r\n                    handleCheckboxChange={handleCheckboxChange}\r\n                />\r\n            </form>\r\n        </FormikProvider>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}