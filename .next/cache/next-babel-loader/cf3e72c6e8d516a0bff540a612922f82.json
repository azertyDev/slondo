{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { AncmntAutoForm } from \"./AncmntAutoForm\";\nimport { prepareCreateAncmnt } from \"@root/src/helpers\";\nimport { AccordionComponent } from \"./accordion_component/AccordionComponent\";\nimport { Auto_icon } from '@src/components/elements/icons';\nexport const AncmntAutoFormContainer = props => {\n  const {\n    t,\n    createAncmnt,\n    values\n  } = props;\n  const {\n    adParams\n  } = values;\n  const data = prepareCreateAncmnt(createAncmnt.category.model, adParams);\n  console.log(data);\n  const autoData = {\n    automobile: {\n      icon: Auto_icon,\n      manufacturer: data.manufacturer,\n      models: data.models,\n      body: data.body,\n      transmission: data.transmission,\n      drive: data.drive,\n      car_engine_capacity: data.car_engine_capacity,\n      car_engine_type: data.car_engine_type\n    }\n  };\n  const form = Object.keys(autoData).map((key, i) => {\n    return __jsx(AccordionComponent, {\n      key: i,\n      title: t(key),\n      icon: autoData[key].icon\n    });\n  });\n  return __jsx(AncmntAutoForm, _extends({}, props, {\n    form: form\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}