{"ast":null,"code":"import { userApi } from '../../api/api';\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { useCookies } from 'react-cookie';\nimport { FETCH_TOKEN, authActions } from \"../actions/authActions\"; // Auth saga\n\nconst {\n  fetchTokenBegin,\n  fetchTokenSuccess,\n  fetchTokenFailure\n} = authActions;\n\nfunction* workerAuth(actions) {\n  const {\n    payload\n  } = actions;\n  const [_, setCookies] = useCookies(['token']);\n\n  try {\n    yield put(fetchTokenBegin());\n    const {\n      token\n    } = yield call(userApi.login, payload.phone, payload.password);\n    setCookies('token', token);\n    yield put(fetchTokenSuccess({\n      isAuth: true,\n      isFetch: false\n    }));\n  } catch (e) {\n    yield put(fetchTokenFailure(e.message));\n  }\n}\n\nexport function* watchAuth() {\n  yield takeLatest(FETCH_TOKEN, workerAuth);\n}","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/sagas/authSaga.ts"],"names":["userApi","call","put","takeLatest","useCookies","FETCH_TOKEN","authActions","fetchTokenBegin","fetchTokenSuccess","fetchTokenFailure","workerAuth","actions","payload","_","setCookies","token","login","phone","password","isAuth","isFetch","e","message","watchAuth"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,wBAAvC,C,CAGA;;AACA,MAAM;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,iBAAlB;AAAqCC,EAAAA;AAArC,IAA0DH,WAAhE;;AAEA,UAAUI,UAAV,CAAqBC,OAArB,EAA8B;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAYD,OAAlB;AACA,QAAM,CAACE,CAAD,EAAIC,UAAJ,IAAkBV,UAAU,CAAC,CAAC,OAAD,CAAD,CAAlC;;AAEA,MAAI;AACA,UAAMF,GAAG,CAACK,eAAe,EAAhB,CAAT;AACA,UAAM;AAACQ,MAAAA;AAAD,QAAU,MAAMd,IAAI,CAACD,OAAO,CAACgB,KAAT,EAAgBJ,OAAO,CAACK,KAAxB,EAA+BL,OAAO,CAACM,QAAvC,CAA1B;AACAJ,IAAAA,UAAU,CAAC,OAAD,EAAUC,KAAV,CAAV;AACA,UAAMb,GAAG,CAACM,iBAAiB,CAAC;AAACW,MAAAA,MAAM,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAD,CAAlB,CAAT;AACH,GALD,CAKE,OAAOC,CAAP,EAAU;AACR,UAAMnB,GAAG,CAACO,iBAAiB,CAACY,CAAC,CAACC,OAAH,CAAlB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUC,SAAV,GAAsB;AACzB,QAAMpB,UAAU,CAACE,WAAD,EAAcK,UAAd,CAAhB;AACH","sourcesContent":["import {userApi} from '../../api/api'\r\nimport {call, put, takeLatest} from \"redux-saga/effects\"\r\nimport {useCookies} from 'react-cookie'\r\nimport {FETCH_TOKEN, authActions} from \"../actions/authActions\"\r\n\r\n\r\n// Auth saga\r\nconst {fetchTokenBegin, fetchTokenSuccess, fetchTokenFailure} = authActions;\r\n\r\nfunction* workerAuth(actions) {\r\n    const {payload} = actions;\r\n    const [_, setCookies] = useCookies(['token']);\r\n\r\n    try {\r\n        yield put(fetchTokenBegin());\r\n        const {token} = yield call(userApi.login, payload.phone, payload.password);\r\n        setCookies('token', token);\r\n        yield put(fetchTokenSuccess({isAuth: true, isFetch: false}));\r\n    } catch (e) {\r\n        yield put(fetchTokenFailure(e.message));\r\n    }\r\n}\r\n\r\nexport function* watchAuth() {\r\n    yield takeLatest(FETCH_TOKEN, workerAuth);\r\n}"]},"metadata":{},"sourceType":"module"}