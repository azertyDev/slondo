{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { MainContent } from './MainContent';\nimport { ITEMS_PER_PAGE } from '@root/src/constants';\nimport { userAPI } from \"@src/api/api\";\nimport { i18n } from \"@root/i18n\";\nvar cardData = {\n  id: null,\n  title: '',\n  cardType: '',\n  safe_deal: null,\n  price: null,\n  currency: {\n    id: null,\n    name: ''\n  },\n  created_at: '',\n  location: '',\n  images: [{\n    url: ''\n  }]\n};\nvar initCards = [];\n\nfor (var i = 1; i <= 16; i++) {\n  initCards.push(cardData);\n}\n\nvar initialCardData = {\n  isFetch: false,\n  error: null,\n  cardData: {\n    data: initCards,\n    total: null\n  }\n};\n\nvar fetchCardData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(itemsPerPage, page, type, lang) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return userAPI.getCardData(itemsPerPage, page, type, lang);\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchCardData(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var MainContentContainer = function MainContentContainer(props) {\n  _s();\n\n  var t = props.t;\n  var lang = i18n.language;\n\n  var _useState = useState(0),\n      tabValue = _useState[0],\n      setTabValue = _useState[1];\n\n  var _useState2 = useState(1),\n      adCurrentPage = _useState2[0],\n      setAdCurrentPage = _useState2[1];\n\n  var _useState3 = useState(1),\n      lotCurrentPage = _useState3[0],\n      setLotCurrentPage = _useState3[1];\n\n  var _useState4 = useState(initialCardData),\n      adCardData = _useState4[0],\n      setAdCardData = _useState4[1];\n\n  var _useState5 = useState(initialCardData),\n      lotCardData = _useState5[0],\n      setLotCardData = _useState5[1];\n\n  var pageCount = Math.ceil((tabValue === 0 ? adCardData.cardData.total : lotCardData.cardData.total) / ITEMS_PER_PAGE) || 1;\n  var currentPage = tabValue === 0 ? adCurrentPage : lotCurrentPage;\n\n  var setCardData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(state, setState, currentPage, type) {\n      var newData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                isFetch: true\n              }));\n              _context2.next = 4;\n              return fetchCardData(ITEMS_PER_PAGE, currentPage, type, lang);\n\n            case 4:\n              newData = _context2.sent;\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                isFetch: false\n              }));\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                cardData: {\n                  data: newData.data,\n                  total: newData.total\n                }\n              }));\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                error: _context2.t0.message\n              }));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function setCardData(_x5, _x6, _x7, _x8) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleTabChange = function handleTabChange(_, newValue) {\n    setTabValue(newValue);\n  }; // const handleShowMore = () => {\n  //     if (tabValue === 0) {\n  //         setAdCurrentPage(adCurrentPage + 1)\n  //     } else {\n  //         setLotCurrentPage(lotCurrentPage + 1)\n  //     }\n  // };\n\n\n  var handlePaginationPage = function handlePaginationPage(_, pageNumber) {\n    tabValue === 0 ? setAdCurrentPage(pageNumber) : setLotCurrentPage(pageNumber);\n  };\n\n  useEffect(function () {\n    setCardData(adCardData, setAdCardData, adCurrentPage, 'ad');\n  }, [adCurrentPage]);\n  useEffect(function () {\n    setCardData(lotCardData, setLotCardData, lotCurrentPage, 'lot');\n  }, [lotCurrentPage]);\n  return __jsx(MainContent, {\n    t: t,\n    tabValue: tabValue,\n    adCardData: adCardData,\n    lotCardData: lotCardData,\n    pageCount: pageCount,\n    currentPage: currentPage,\n    handlePaginationPage: handlePaginationPage,\n    handleTabChange: handleTabChange // handleShowMore={handleShowMore}\n\n  });\n};\n\n_s(MainContentContainer, \"OanQ3/aBhXLqupGmvQaNrufoPVU=\");\n\n_c = MainContentContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContentContainer\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/mainContent/MainContentContainer.tsx"],"names":["React","useEffect","useState","MainContent","ITEMS_PER_PAGE","userAPI","i18n","cardData","id","title","cardType","safe_deal","price","currency","name","created_at","location","images","url","initCards","i","push","initialCardData","isFetch","error","data","total","fetchCardData","itemsPerPage","page","type","lang","getCardData","MainContentContainer","props","t","language","tabValue","setTabValue","adCurrentPage","setAdCurrentPage","lotCurrentPage","setLotCurrentPage","adCardData","setAdCardData","lotCardData","setLotCardData","pageCount","Math","ceil","currentPage","setCardData","state","setState","newData","message","handleTabChange","_","newValue","handlePaginationPage","pageNumber"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {WithT} from \"i18next\";\r\nimport {MainContent} from './MainContent';\r\nimport {ITEMS_PER_PAGE} from '@root/src/constants';\r\nimport {userAPI} from \"@src/api/api\";\r\nimport {i18n} from \"@root/i18n\";\r\nimport {CardData} from \"@root/interfaces/CardData\";\r\n\r\n\r\nconst cardData = {\r\n    id: null,\r\n    title: '',\r\n    cardType: '',\r\n    safe_deal: null,\r\n    price: null,\r\n    currency: {\r\n        id: null,\r\n        name: ''\r\n    },\r\n    created_at: '',\r\n    location: '',\r\n    images: [{\r\n        url: ''\r\n    }],\r\n};\r\n\r\nconst initCards = [];\r\n\r\nfor (let i = 1; i <= 16; i++) {\r\n    initCards.push(cardData);\r\n}\r\n\r\nconst initialCardData: CardData = {\r\n    isFetch: false,\r\n    error: null,\r\n    cardData: {\r\n        data: initCards,\r\n        total: null,\r\n    },\r\n};\r\n\r\nconst fetchCardData = async (itemsPerPage, page, type, lang) => {\r\n    return await userAPI.getCardData(itemsPerPage, page, type, lang);\r\n};\r\n\r\nexport const MainContentContainer: FC<WithT> = (props) => {\r\n    const {t} = props;\r\n    const lang = i18n.language;\r\n\r\n    const [tabValue, setTabValue] = useState(0);\r\n    const [adCurrentPage, setAdCurrentPage] = useState(1);\r\n    const [lotCurrentPage, setLotCurrentPage] = useState(1);\r\n    const [adCardData, setAdCardData] = useState(initialCardData);\r\n    const [lotCardData, setLotCardData] = useState(initialCardData);\r\n    const pageCount = Math.ceil((tabValue === 0 ? adCardData.cardData.total : lotCardData.cardData.total) / ITEMS_PER_PAGE) || 1;\r\n\r\n    const currentPage = tabValue === 0 ? adCurrentPage : lotCurrentPage;\r\n\r\n    const setCardData = async (state, setState, currentPage, type) => {\r\n        try {\r\n            setState({\r\n                ...state,\r\n                isFetch: true\r\n            });\r\n\r\n            const newData = await fetchCardData(ITEMS_PER_PAGE, currentPage, type, lang);\r\n\r\n            setState({\r\n                ...state,\r\n                isFetch: false\r\n            });\r\n\r\n            setState({\r\n                ...state,\r\n                cardData: {\r\n                    data: newData.data,\r\n                    total: newData.total,\r\n                }\r\n            });\r\n\r\n        } catch (e) {\r\n            setState({\r\n                ...state,\r\n                error: e.message\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (_, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    // const handleShowMore = () => {\r\n    //     if (tabValue === 0) {\r\n    //         setAdCurrentPage(adCurrentPage + 1)\r\n    //     } else {\r\n    //         setLotCurrentPage(lotCurrentPage + 1)\r\n    //     }\r\n    // };\r\n\r\n    const handlePaginationPage = (_, pageNumber) => {\r\n        tabValue === 0\r\n            ? setAdCurrentPage(pageNumber)\r\n            : setLotCurrentPage(pageNumber)\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCardData(adCardData, setAdCardData, adCurrentPage, 'ad');\r\n    }, [adCurrentPage])\r\n\r\n    useEffect(() => {\r\n        setCardData(lotCardData, setLotCardData, lotCurrentPage, 'lot');\r\n    }, [lotCurrentPage])\r\n\r\n    return (\r\n        <MainContent\r\n            t={t}\r\n            tabValue={tabValue}\r\n            adCardData={adCardData}\r\n            lotCardData={lotCardData}\r\n            pageCount={pageCount}\r\n            currentPage={currentPage}\r\n            handlePaginationPage={handlePaginationPage}\r\n            handleTabChange={handleTabChange}\r\n            // handleShowMore={handleShowMore}\r\n        />\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}