{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\nimport { appWithTranslation } from '../i18n';\nimport theme from '@src/theme';\nimport { store } from '@src/redux/store'; // Slick css file\n\nimport \"../slick.min.css\";\n\nvar MyApp = function MyApp(props) {\n  _s();\n\n  var Component = props.Component;\n  React.useEffect(function () {\n    // Remove the server-side injected CSS.\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    store: store\n  }, __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(CssBaseline, null), __jsx(Component, props.pageProps))));\n}; // MyApp.getInitialProps = async (appContext) => ({...await App.getInitialProps(appContext)})\n\n\n_s(MyApp, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MyApp;\nvar withCompose = compose(appWithTranslation); //withRedux wrapper that passes the store to the App Component\n\nexport default _c2 = withCompose(MyApp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/pages/_app.tsx"],"names":["React","compose","Provider","ThemeProvider","CssBaseline","appWithTranslation","theme","store","MyApp","props","Component","useEffect","jssStyles","document","querySelector","parentElement","removeChild","pageProps","withCompose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,mBAAzC;AACA,SAAQC,kBAAR,QAAiC,SAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB,C,CAEA;;AACA,OAAO,kBAAP;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA;;AAAA,MACdC,SADc,GACDD,KADC,CACdC,SADc;AAErBV,EAAAA,KAAK,CAACW,SAAN,CAAgB,YAAM;AAClB;AACA,QAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACXA,MAAAA,SAAS,CAACG,aAAV,CAAwBC,WAAxB,CAAoCJ,SAApC;AACH;AACJ,GAND,EAMG,EANH;AAQA,SACI,4BACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEL;AAAjB,KACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAED;AAAtB,KACI,MAAC,WAAD,OADJ,EAEI,MAAC,SAAD,EAAeG,KAAK,CAACQ,SAArB,CAFJ,CADJ,CADJ,CADJ;AAUH,CApBD,C,CAsBA;;;GAtBMT,K;;KAAAA,K;AAwBN,IAAMU,WAAW,GAAGjB,OAAO,CACvBI,kBADuB,CAA3B,C,CAIA;;AACA,qBAAea,WAAW,CAACV,KAAD,CAA1B","sourcesContent":["import React from 'react'\r\nimport {compose} from \"redux\"\r\nimport {Provider} from \"react-redux\"\r\nimport {ThemeProvider, CssBaseline} from '@material-ui/core'\r\nimport {appWithTranslation} from '../i18n'\r\nimport theme from '@src/theme'\r\nimport {store} from '@src/redux/store'\r\n\r\n// Slick css file\r\nimport \"../slick.min.css\"\r\n\r\n\r\nconst MyApp = (props) => {\r\n    const {Component} = props;\r\n    React.useEffect(() => {\r\n        // Remove the server-side injected CSS.\r\n        const jssStyles = document.querySelector('#jss-server-side');\r\n        if (jssStyles) {\r\n            jssStyles.parentElement.removeChild(jssStyles);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Provider store={store}>\r\n                <ThemeProvider theme={theme}>\r\n                    <CssBaseline/>\r\n                    <Component {...props.pageProps} />\r\n                </ThemeProvider>\r\n            </Provider>\r\n        </>\r\n    );\r\n}\r\n\r\n// MyApp.getInitialProps = async (appContext) => ({...await App.getInitialProps(appContext)})\r\n\r\nconst withCompose = compose(\r\n    appWithTranslation\r\n);\r\n\r\n//withRedux wrapper that passes the store to the App Component\r\nexport default withCompose(MyApp)"]},"metadata":{},"sourceType":"module"}