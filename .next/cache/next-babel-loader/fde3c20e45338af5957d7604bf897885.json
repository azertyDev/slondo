{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { CardItem } from '@src/components/elements/card/Card';\nexport const GridView = props => {\n  const {\n    isFetch,\n    list\n  } = props;\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, list.map((item, index) => __jsx(Grid, {\n    key: index,\n    xs: 12,\n    sm: 6,\n    md: 3,\n    item: true\n  }, __jsx(CardItem, _extends({}, item, {\n    isFetch: isFetch\n  })))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/card_view/grid_view/GridView.tsx"],"names":["React","Grid","CardItem","GridView","props","isFetch","list","map","item","index"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,SAAQC,QAAR,QAAuB,oCAAvB;AAIA,OAAO,MAAMC,QAA4B,GAAIC,KAAD,IAAW;AACnD,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAkBF,KAAxB;AACA,SACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE;AAAzB,KACKE,IAAI,CAACC,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KACN,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAwC,IAAA,IAAI;AAA5C,KACI,MAAC,QAAD,eACQD,IADR;AAEI,IAAA,OAAO,EAAEH;AAFb,KADJ,CADH,CADL,CADJ;AAYH,CAdM","sourcesContent":["import React, {FC} from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport {CardItem} from '@src/components/elements/card/Card';\r\nimport {ViewPropsTypes} from \"@src/components/elements/card_view/CardView\";\r\n\r\n\r\nexport const GridView: FC<ViewPropsTypes> = (props) => {\r\n    const {isFetch, list} = props;\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {list.map((item, index) => (\r\n                <Grid key={index} xs={12} sm={6} md={3} item>\r\n                    <CardItem\r\n                        {...item}\r\n                        isFetch={isFetch}\r\n                    />\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}