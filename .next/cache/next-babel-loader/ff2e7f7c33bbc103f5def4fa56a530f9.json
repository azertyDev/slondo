{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport { CustomSlider } from '../custom_slider/CustomSlider'; // styles\n\nimport { useStyles } from './useStyles';\nexport const SyncSliders = props => {\n  const {\n    0: slidersNav,\n    1: setSlidersNav\n  } = useState({\n    nav1: null,\n    nav2: null\n  });\n  const slider1 = useRef();\n  const slider2 = useRef();\n  useEffect(() => {\n    setSlidersNav({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, []);\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: classes.firstSlider\n  }, __jsx(CustomSlider, {\n    ref: slider1,\n    asNavFor: slidersNav.nav2\n  }, props.imgs.map(({\n    url,\n    alt\n  }, i) => __jsx(\"img\", {\n    src: url,\n    alt: alt,\n    key: i\n  })))), __jsx(\"div\", {\n    className: classes.secondSlider\n  }, __jsx(CustomSlider, {\n    ref: slider2,\n    focusOnSelect: true,\n    asNavFor: slidersNav.nav1,\n    slidesToShow: props.imgs.length ? props.imgs.length : 1\n  }, props.imgs.map(({\n    url,\n    alt\n  }, i) => __jsx(\"img\", {\n    src: url,\n    alt: alt,\n    key: i\n  })))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/sync_sliders/SyncSliders.tsx"],"names":["React","useEffect","useRef","useState","CustomSlider","useStyles","SyncSliders","props","slidersNav","setSlidersNav","nav1","nav2","slider1","slider2","current","classes","root","firstSlider","imgs","map","url","alt","i","secondSlider","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAAQC,YAAR,QAA2B,+BAA3B,C,CAEA;;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAClC,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BN,QAAQ,CAAC;AAACO,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAD,CAA5C;AACA,QAAMC,OAAO,GAAGV,MAAM,EAAtB;AACA,QAAMW,OAAO,GAAGX,MAAM,EAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,aAAa,CAAC;AACVC,MAAAA,IAAI,EAAEE,OAAO,CAACE,OADJ;AAEVH,MAAAA,IAAI,EAAEE,OAAO,CAACC;AAFJ,KAAD,CAAb;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAEU,OAAO,CAACC;AAAxB,KACI;AAAK,IAAA,SAAS,EAAED,OAAO,CAACE;AAAxB,KACI,MAAC,YAAD;AACI,IAAA,GAAG,EAAEL,OADT;AAEI,IAAA,QAAQ,EAAEJ,UAAU,CAACG;AAFzB,KAKQJ,KAAK,CAACW,IAAN,CAAWC,GAAX,CAAe,CAAC;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAD,EAAaC,CAAb,KACX;AAAK,IAAA,GAAG,EAAEF,GAAV;AAAe,IAAA,GAAG,EAAEC,GAApB;AAAyB,IAAA,GAAG,EAAEC;AAA9B,IADJ,CALR,CADJ,CADJ,EAaI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACQ;AAAxB,KACI,MAAC,YAAD;AACI,IAAA,GAAG,EAAEV,OADT;AAEI,IAAA,aAAa,EAAE,IAFnB;AAGI,IAAA,QAAQ,EAAEL,UAAU,CAACE,IAHzB;AAII,IAAA,YAAY,EAAEH,KAAK,CAACW,IAAN,CAAWM,MAAX,GAAoBjB,KAAK,CAACW,IAAN,CAAWM,MAA/B,GAAwC;AAJ1D,KAOQjB,KAAK,CAACW,IAAN,CAAWC,GAAX,CAAe,CAAC;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAD,EAAaC,CAAb,KACX;AAAK,IAAA,GAAG,EAAEF,GAAV;AAAe,IAAA,GAAG,EAAEC,GAApB;AAAyB,IAAA,GAAG,EAAEC;AAA9B,IADJ,CAPR,CADJ,CAbJ,CADJ;AA8BH,CA3CM","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport {CustomSlider} from '../custom_slider/CustomSlider';\r\n\r\n// styles\r\nimport {useStyles} from './useStyles';\r\n\r\nexport const SyncSliders = (props) => {\r\n    const [slidersNav, setSlidersNav] = useState({nav1: null, nav2: null});\r\n    const slider1 = useRef();\r\n    const slider2 = useRef();\r\n\r\n    useEffect(() => {\r\n        setSlidersNav({\r\n            nav1: slider1.current,\r\n            nav2: slider2.current,\r\n        });\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.firstSlider}>\r\n                <CustomSlider\r\n                    ref={slider1}\r\n                    asNavFor={slidersNav.nav2}\r\n                >\r\n                    {\r\n                        props.imgs.map(({url, alt}, i) => (\r\n                            <img src={url} alt={alt} key={i}/>\r\n                        ))\r\n                    }\r\n                </CustomSlider>\r\n            </div>\r\n            <div className={classes.secondSlider}>\r\n                <CustomSlider\r\n                    ref={slider2}\r\n                    focusOnSelect={true}\r\n                    asNavFor={slidersNav.nav1}\r\n                    slidesToShow={props.imgs.length ? props.imgs.length : 1}\r\n                >\r\n                    {\r\n                        props.imgs.map(({url, alt}, i) => (\r\n                            <img src={url} alt={alt} key={i}/>\r\n                        ))\r\n                    }\r\n                </CustomSlider>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}