{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { CustomSlider } from '@src/components/elements/custom_slider/CustomSlider';\nimport { CardItem } from '@src/components/elements/card/Card';\nimport { settings } from \"./sliderSettings\";\nimport { useStyles } from './useStyles';\nexport const AncmntsSlider = ({\n  cardData,\n  title\n}) => {\n  const {\n    isFetch,\n    error,\n    data: {\n      cards\n    }\n  } = cardData;\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    className: \"title\",\n    variant: \"h2\"\n  }, title), __jsx(\"div\", {\n    className: \"slider\"\n  }, __jsx(CustomSlider, settings, !!error ? __jsx(Typography, {\n    className: \"error-text\"\n  }, error) : cards.map(card => __jsx(CardItem, _extends({\n    isFetch: isFetch,\n    key: card.id\n  }, card))))));\n};","map":null,"metadata":{},"sourceType":"module"}