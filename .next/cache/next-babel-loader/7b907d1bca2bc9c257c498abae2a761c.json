{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createWrapper } from 'next-redux-wrapper';\nimport reducers from \"./reducers\";\nimport rootSaga from './sagas';\nvar sagaMiddleware = createSagaMiddleware();\nvar enhancer = composeWithDevTools(applyMiddleware(sagaMiddleware)); // create a makeStore function\n\nvar makeStore = function makeStore(internalState) {\n  return createStore(reducers, internalState, enhancer);\n};\n\nsagaMiddleware.run(rootSaga); // export an assembled wrapper\n\nexport default createWrapper(makeStore);","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/store.ts"],"names":["createStore","applyMiddleware","createSagaMiddleware","composeWithDevTools","createWrapper","reducers","rootSaga","sagaMiddleware","enhancer","makeStore","internalState","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAmBC,aAAnB,QAAuC,oBAAvC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,SAArB;AAIA,IAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,IAAMM,QAAQ,GAAGL,mBAAmB,CAChCF,eAAe,CAACM,cAAD,CADiB,CAApC,C,CAIA;;AACA,IAAME,SAAoB,GAAG,SAAvBA,SAAuB,CAACC,aAAD,EAAmB;AAE5C,SAAOV,WAAW,CAACK,QAAD,EAAWK,aAAX,EAA0BF,QAA1B,CAAlB;AACH,CAHD;;AAKAD,cAAc,CAACI,GAAf,CAAmBL,QAAnB,E,CAEA;;AACA,eAAeF,aAAa,CAAWK,SAAX,CAA5B","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {MakeStore, createWrapper} from 'next-redux-wrapper'\r\nimport reducers from \"./reducers\"\r\nimport rootSaga from './sagas'\r\n\r\nexport type AppState = ReturnType<typeof reducers>;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst enhancer = composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware),\r\n);\r\n\r\n// create a makeStore function\r\nconst makeStore: MakeStore = (internalState) => {\r\n\r\n    return createStore(reducers, internalState, enhancer);\r\n}\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n// export an assembled wrapper\r\nexport default createWrapper<AppState>(makeStore);"]},"metadata":{},"sourceType":"module"}