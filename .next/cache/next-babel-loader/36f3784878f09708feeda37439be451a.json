{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userAPI } from \"@src/api/api\";\nvar initialState = {\n  isFetch: false,\n  error: null,\n  list: [{\n    id: null,\n    name: '',\n    images: {\n      id: null,\n      url: {\n        original: ''\n      }\n    },\n    icons: {\n      id: null,\n      url: ''\n    },\n    childs: [],\n    has_auction: null\n  }]\n}; // Async thunk\n\nexport var fetchCategories = createAsyncThunk('categories/fetchCategories', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(lang, _ref) {\n    var rejectWithValue;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            rejectWithValue = _ref.rejectWithValue;\n            _context.prev = 1;\n            _context.next = 4;\n            return userAPI.getCategories(lang);\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", rejectWithValue(_context.t0.message));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 7]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nvar advertisementSlice = createSlice({\n  name: 'categories',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchCategories.pending, function (state) {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchCategories.fulfilled, function (state, action) {\n      state.isFetch = false;\n      state.error = null;\n      state.list = action.payload;\n    });\n    builder.addCase(fetchCategories.rejected, function (state, action) {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport var categoriesReducer = advertisementSlice.reducer;","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/slices/categoriesSlice.ts"],"names":["createAsyncThunk","createSlice","userAPI","initialState","isFetch","error","list","id","name","images","url","original","icons","childs","has_auction","fetchCategories","lang","rejectWithValue","getCategories","message","advertisementSlice","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","categoriesReducer","reducer"],"mappings":";;AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AAEA,SAAQC,OAAR,QAAsB,cAAtB;AAGA,IAAMC,YAAwB,GAAG;AAC7BC,EAAAA,OAAO,EAAE,KADoB;AAE7BC,EAAAA,KAAK,EAAE,IAFsB;AAG7BC,EAAAA,IAAI,EAAE,CAAC;AACHC,IAAAA,EAAE,EAAE,IADD;AAEHC,IAAAA,IAAI,EAAE,EAFH;AAGHC,IAAAA,MAAM,EAAE;AACJF,MAAAA,EAAE,EAAE,IADA;AAEJG,MAAAA,GAAG,EAAE;AACDC,QAAAA,QAAQ,EAAE;AADT;AAFD,KAHL;AASHC,IAAAA,KAAK,EAAE;AAACL,MAAAA,EAAE,EAAE,IAAL;AAAWG,MAAAA,GAAG,EAAE;AAAhB,KATJ;AAUHG,IAAAA,MAAM,EAAE,EAVL;AAWHC,IAAAA,WAAW,EAAE;AAXV,GAAD;AAHuB,CAAjC,C,CAkBA;;AACA,OAAO,IAAMC,eAAe,GAAGf,gBAAgB,CAC3C,4BAD2C;AAAA,uEAE3C,iBAAOgB,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAcC,YAAAA,eAAd,QAAcA,eAAd;AAAA;AAAA;AAAA,mBAEqBf,OAAO,CAACgB,aAAR,CAAsBF,IAAtB,CAFrB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAIeC,eAAe,CAAC,YAAEE,OAAH,CAJ9B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAF2C;;AAAA;AAAA;AAAA;AAAA,IAAxC;AAWP,IAAMC,kBAAkB,GAAGnB,WAAW,CAAC;AACnCO,EAAAA,IAAI,EAAE,YAD6B;AAEnCL,EAAAA,YAAY,EAAZA,YAFmC;AAGnCkB,EAAAA,QAAQ,EAAE,EAHyB;AAInCC,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBT,eAAe,CAACU,OAAhC,EAAyC,UAACC,KAAD,EAAW;AAChDA,MAAAA,KAAK,CAACtB,OAAN,GAAgB,IAAhB;AACAsB,MAAAA,KAAK,CAACrB,KAAN,GAAc,IAAd;AACH,KAHD;AAIAkB,IAAAA,OAAO,CAACC,OAAR,CAAgBT,eAAe,CAACY,SAAhC,EAA2C,UAACD,KAAD,EAAQE,MAAR,EAAmB;AAC1DF,MAAAA,KAAK,CAACtB,OAAN,GAAgB,KAAhB;AACAsB,MAAAA,KAAK,CAACrB,KAAN,GAAc,IAAd;AACAqB,MAAAA,KAAK,CAACpB,IAAN,GAAasB,MAAM,CAACC,OAApB;AACH,KAJD;AAKAN,IAAAA,OAAO,CAACC,OAAR,CAAgBT,eAAe,CAACe,QAAhC,EAA0C,UAACJ,KAAD,EAAQE,MAAR,EAAmB;AACzDF,MAAAA,KAAK,CAACtB,OAAN,GAAgB,KAAhB;AACAsB,MAAAA,KAAK,CAACrB,KAAN,GAAcuB,MAAM,CAACC,OAArB;AACH,KAHD;AAIH;AAlBkC,CAAD,CAAtC;AAqBA,OAAO,IAAME,iBAAiB,GAAGX,kBAAkB,CAACY,OAA7C","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport {Categories, CategoriesDataTypes} from '@root/interfaces/Categories'\r\nimport {userAPI} from \"@src/api/api\";\r\n\r\n\r\nconst initialState: Categories = {\r\n    isFetch: false,\r\n    error: null,\r\n    list: [{\r\n        id: null,\r\n        name: '',\r\n        images: {\r\n            id: null,\r\n            url: {\r\n                original: ''\r\n            }\r\n        },\r\n        icons: {id: null, url: ''},\r\n        childs: [],\r\n        has_auction: null\r\n    }],\r\n};\r\n\r\n// Async thunk\r\nexport const fetchCategories = createAsyncThunk<CategoriesDataTypes, string>(\r\n    'categories/fetchCategories',\r\n    async (lang, {rejectWithValue}) => {\r\n        try {\r\n            return await userAPI.getCategories(lang);\r\n        } catch (e) {\r\n            return rejectWithValue(e.message);\r\n        }\r\n    }\r\n);\r\n\r\nconst advertisementSlice = createSlice({\r\n    name: 'categories',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchCategories.pending, (state) => {\r\n            state.isFetch = true;\r\n            state.error = null;\r\n        })\r\n        builder.addCase(fetchCategories.fulfilled, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = null;\r\n            state.list = action.payload;\r\n        })\r\n        builder.addCase(fetchCategories.rejected, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = action.payload;\r\n        })\r\n    }\r\n});\r\n\r\nexport const categoriesReducer = advertisementSlice.reducer;"]},"metadata":{},"sourceType":"module"}