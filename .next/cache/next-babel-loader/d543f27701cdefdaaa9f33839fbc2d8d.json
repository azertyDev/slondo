{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport CustomRating from '@material-ui/lab/Rating'; // styles\n\nimport { useStyles } from './useStyles';\nvar labels = {\n  0.5: '0.5',\n  1: '1.0',\n  1.5: '1.5',\n  2: '2.0',\n  2.5: '2.5',\n  3: '3.0',\n  3.5: '3.5',\n  4: '4.0',\n  4.5: '4.5',\n  5: '5.0'\n};\nexport var Rating = function Rating() {\n  var _React$useState = React.useState(3.5),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      hover = _React$useState4[0],\n      setHover = _React$useState4[1];\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", null, __jsx(CustomRating, {\n    name: \"hover-feedback\",\n    readOnly: true,\n    value: value,\n    precision: 0.5,\n    onChange: function onChange(event, newValue) {\n      setValue(newValue);\n    },\n    onChangeActive: function onChangeActive(event, newHover) {\n      setHover(newHover);\n    }\n  }), value !== null && __jsx(Box, null, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, labels[hover !== -1 ? hover : value]))), __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, \"(200 \\u043E\\u0446\\u0435\\u043D\\u043E\\u043A)\")));\n};","map":null,"metadata":{},"sourceType":"module"}