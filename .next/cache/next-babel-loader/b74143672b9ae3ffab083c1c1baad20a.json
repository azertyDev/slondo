{"ast":null,"code":"import * as yup from \"yup\";\nvar requiredList = {\n  drive: true,\n  seats: true\n};\n\nvar lazyFunc = function lazyFunc(value) {\n  var valueKeys = Object.keys(value);\n  var requiredFields = yup.object({});\n  valueKeys.forEach(function (key) {\n    if (requiredList[key]) {\n      requiredFields.fields[key] = yup.object({\n        id: yup.number().nullable(false).required('Обязательный параметр!')\n      });\n    }\n  });\n\n  if (valueKeys.some(function (key) {\n    return requiredList[key];\n  })) {\n    console.log(requiredFields);\n    return requiredFields;\n  }\n\n  return yup.mixed().notRequired();\n};\n\nexport var createAdvrtSchema = yup.object({\n  // title: yup.string().required('Обязательное поле!'),\n  // location: yup.string().required('Обязательное поле!'),\n  // files: yup.array().required('Загрузите фотографии!'),\n  // description: yup.string().required('Обязательное поле!'),\n  // phone: yup.string().required('Обязательное поле!'),\n  adsParams: yup.lazy(lazyFunc)\n});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/validation_schemas/createAdvrtSchema.ts"],"names":["yup","requiredList","drive","seats","lazyFunc","value","valueKeys","Object","keys","requiredFields","object","forEach","key","fields","id","number","nullable","required","some","console","log","mixed","notRequired","createAdvrtSchema","adsParams","lazy"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAAlB;AACA,MAAMI,cAAc,GAAGT,GAAG,CAACU,MAAJ,CAAW,EAAX,CAAvB;AAEAJ,EAAAA,SAAS,CAACK,OAAV,CAAkB,UAAAC,GAAG,EAAI;AACrB,QAAIX,YAAY,CAACW,GAAD,CAAhB,EAAuB;AACnBH,MAAAA,cAAc,CAACI,MAAf,CAAsBD,GAAtB,IAA6BZ,GAAG,CAACU,MAAJ,CAAW;AACpCI,QAAAA,EAAE,EAAEd,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,KAAtB,EAA6BC,QAA7B,CAAsC,wBAAtC;AADgC,OAAX,CAA7B;AAGH;AACJ,GAND;;AAQA,MAAIX,SAAS,CAACY,IAAV,CAAe,UAAAN,GAAG;AAAA,WAAIX,YAAY,CAACW,GAAD,CAAhB;AAAA,GAAlB,CAAJ,EAA8C;AAC1CO,IAAAA,OAAO,CAACC,GAAR,CAAYX,cAAZ;AACA,WAAOA,cAAP;AACH;;AAED,SAAOT,GAAG,CAACqB,KAAJ,GAAYC,WAAZ,EAAP;AACH,CAlBD;;AAoBA,OAAO,IAAMC,iBAAiB,GAAGvB,GAAG,CAACU,MAAJ,CAAW;AACxC;AACA;AACA;AACA;AACA;AACAc,EAAAA,SAAS,EAAExB,GAAG,CAACyB,IAAJ,CAASrB,QAAT;AAN6B,CAAX,CAA1B","sourcesContent":["import * as yup from \"yup\";\r\n\r\n\r\nconst requiredList = {\r\n    drive: true,\r\n    seats: true\r\n};\r\n\r\nconst lazyFunc = (value) => {\r\n    const valueKeys = Object.keys(value);\r\n    const requiredFields = yup.object({});\r\n\r\n    valueKeys.forEach(key => {\r\n        if (requiredList[key]) {\r\n            requiredFields.fields[key] = yup.object({\r\n                id: yup.number().nullable(false).required('Обязательный параметр!')\r\n            });\r\n        }\r\n    });\r\n\r\n    if (valueKeys.some(key => requiredList[key])) {\r\n        console.log(requiredFields)\r\n        return requiredFields;\r\n    }\r\n\r\n    return yup.mixed().notRequired();\r\n};\r\n\r\nexport const createAdvrtSchema = yup.object({\r\n    // title: yup.string().required('Обязательное поле!'),\r\n    // location: yup.string().required('Обязательное поле!'),\r\n    // files: yup.array().required('Загрузите фотографии!'),\r\n    // description: yup.string().required('Обязательное поле!'),\r\n    // phone: yup.string().required('Обязательное поле!'),\r\n    adsParams: yup.lazy(lazyFunc)\r\n});"]},"metadata":{},"sourceType":"module"}