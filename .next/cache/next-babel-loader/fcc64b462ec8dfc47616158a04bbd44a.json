{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { CustomMenu } from \"@src/components/elements/custom_menu/CustomMenu\";\nimport { useStyles } from './useStyles';\nexport const AdvrtSettingsBlock = props => {\n  const {\n    data,\n    values,\n    onBlur,\n    handleClickMenuItem\n  } = props;\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    spacing: 1,\n    className: classes.root\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"h5\"\n  }, __jsx(\"strong\", null, \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"))), __jsx(React.Fragment, null, listGenerator(data))));\n\n  function listGenerator(data) {\n    const keys = Object.keys(data);\n    return keys.map(key => {\n      if (Array.isArray(data[key])) {\n        const newData = [{\n          id: null,\n          name: 'Выбрать'\n        }, ...data[key]];\n        return __jsx(React.Fragment, null, __jsx(Grid, {\n          item: true,\n          key: key,\n          xs: 12,\n          sm: 4\n        }, __jsx(Typography, {\n          variant: \"subtitle1\"\n        }, __jsx(\"strong\", null, key)), __jsx(CustomMenu, {\n          valueName: values[key] ? values[key].name : 'Выбрать',\n          items: newData,\n          onBlur: onBlur,\n          onClick: handleClickMenuItem(key)\n        })), newData.map(value => listGenerator(value)));\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advertisement/advrtForm/advrt_settings_block/AdvrtSettingsBlock.tsx"],"names":["React","Grid","Typography","CustomMenu","useStyles","AdvrtSettingsBlock","props","data","values","onBlur","handleClickMenuItem","classes","root","listGenerator","keys","Object","map","key","Array","isArray","newData","id","name","value"],"mappings":";AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,mBAA/B;AACA,SAAQC,UAAR,QAAyB,iDAAzB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAO,MAAMC,kBAA2B,GAAIC,KAAD,IAAW;AAClD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,MAAP;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,MAA8CJ,KAApD;AAEA,QAAMK,OAAO,GAAGP,SAAS,EAAzB;AACA,SACI,4BACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,OAAO,EAAE,CAAtC;AAAyC,IAAA,SAAS,EAAEO,OAAO,CAACC;AAA5D,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE;AAAf,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KACI,4IADJ,CADJ,CADJ,EAMI,4BACKC,aAAa,CAACN,IAAD,CADlB,CANJ,CADJ,CADJ;;AAeA,WAASM,aAAT,CAAuBN,IAAvB,EAAkD;AAC9C,UAAMO,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYP,IAAZ,CAAb;AAEA,WAAOO,IAAI,CAACE,GAAL,CAASC,GAAG,IAAI;AACnB,UAAIC,KAAK,CAACC,OAAN,CAAcZ,IAAI,CAACU,GAAD,CAAlB,CAAJ,EAA8B;AAC1B,cAAMG,OAAO,GAAG,CAAC;AAACC,UAAAA,EAAE,EAAE,IAAL;AAAWC,UAAAA,IAAI,EAAE;AAAjB,SAAD,EAA8B,GAAGf,IAAI,CAACU,GAAD,CAArC,CAAhB;AAEA,eACI,4BACI,MAAC,IAAD;AACI,UAAA,IAAI,MADR;AAEI,UAAA,GAAG,EAAEA,GAFT;AAGI,UAAA,EAAE,EAAE,EAHR;AAII,UAAA,EAAE,EAAE;AAJR,WAMI,MAAC,UAAD;AAAY,UAAA,OAAO,EAAC;AAApB,WACI,sBAASA,GAAT,CADJ,CANJ,EASI,MAAC,UAAD;AACI,UAAA,SAAS,EAAET,MAAM,CAACS,GAAD,CAAN,GAAcT,MAAM,CAACS,GAAD,CAAN,CAAYK,IAA1B,GAAiC,SADhD;AAEI,UAAA,KAAK,EAAEF,OAFX;AAGI,UAAA,MAAM,EAAEX,MAHZ;AAII,UAAA,OAAO,EAAEC,mBAAmB,CAACO,GAAD;AAJhC,UATJ,CADJ,EAkBQG,OAAO,CAACJ,GAAR,CAAYO,KAAK,IAAIV,aAAa,CAACU,KAAD,CAAlC,CAlBR,CADJ;AAuBH;AACJ,KA5BM,CAAP;AA6BH;AACJ,CApDM","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport {CustomMenu} from \"@src/components/elements/custom_menu/CustomMenu\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const AdvrtSettingsBlock: FC<any> = (props) => {\r\n    const {data, values, onBlur, handleClickMenuItem} = props;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Grid item container xs={12} spacing={1} className={classes.root}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\">\r\n                        <strong>Настройки объявления</strong>\r\n                    </Typography>\r\n                </Grid>\r\n                <>\r\n                    {listGenerator(data)}\r\n                </>\r\n            </Grid>\r\n        </>\r\n    )\r\n\r\n    function listGenerator(data: Record<string, any>) {\r\n        const keys = Object.keys(data);\r\n\r\n        return keys.map(key => {\r\n            if (Array.isArray(data[key])) {\r\n                const newData = [{id: null, name: 'Выбрать'}, ...data[key]];\r\n\r\n                return (\r\n                    <>\r\n                        <Grid\r\n                            item\r\n                            key={key}\r\n                            xs={12}\r\n                            sm={4}\r\n                        >\r\n                            <Typography variant=\"subtitle1\">\r\n                                <strong>{key}</strong>\r\n                            </Typography>\r\n                            <CustomMenu\r\n                                valueName={values[key] ? values[key].name : 'Выбрать'}\r\n                                items={newData}\r\n                                onBlur={onBlur}\r\n                                onClick={handleClickMenuItem(key)}\r\n                            />\r\n                        </Grid>\r\n                        {\r\n                            newData.map(value => listGenerator(value))\r\n                        }\r\n                    </>\r\n                )\r\n            }\r\n        })\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}