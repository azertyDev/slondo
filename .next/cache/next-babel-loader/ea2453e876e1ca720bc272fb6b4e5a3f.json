{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport { Grid, Tabs, Typography, Hidden } from '@material-ui/core';\nimport { Link } from '../../../i18n';\nimport { Formik, Form, Field } from 'formik';\nimport { BonusIcon, SafeBuyingIcon, AdvertisementIcon, TorgIcon, RatingIcon } from '../elements/icons';\nimport { CustomTab } from \"../elements/custom_tab/CustomTab\";\nimport { ButtonComponent } from \"../elements/button/Button\";\nimport { CustomField } from \"../elements/custom_field/CustomField\";\nimport { requiredValidate, phoneValidate } from '../validates'; // Styles\n\nimport { useStyles } from './useStyles';\n\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(\"div\", _extends({\n    hidden: value !== index\n  }, other), value === index && children);\n};\n\nexport const AuthRegPage = props => {\n  const {\n    t,\n    language\n  } = props;\n  const loginVals = {\n    signInPhone: '',\n    signInPswd: ''\n  };\n  const signUpVals = {\n    signUpPhone: ''\n  };\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n\n  const onSubmit = (values, actions) => {\n    actions.resetForm();\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Hidden, {\n    xsDown: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    className: classes.modalBodyInfo\n  }, __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"img\", {\n    src: BonusIcon,\n    alt: \"bonus-icon\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\",\n    color: \"initial\"\n  }, t('auth_reg:bonus'))), __jsx(\"div\", null, __jsx(\"img\", {\n    src: SafeBuyingIcon,\n    alt: \"safeAuction-icon\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\",\n    color: \"initial\"\n  }, t('auth_reg:safeBuying'))), __jsx(\"div\", null, __jsx(\"img\", {\n    src: AdvertisementIcon,\n    alt: \"advertisement-icon\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\",\n    color: \"initial\"\n  }, t('auth_reg:createAd'))), __jsx(\"div\", null, __jsx(\"img\", {\n    src: TorgIcon,\n    alt: \"torg-icon\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\",\n    color: \"initial\"\n  }, t('auth_reg:createAuction'))), __jsx(\"div\", null, __jsx(\"img\", {\n    src: RatingIcon,\n    alt: \"rating-icon\"\n  }), __jsx(Typography, {\n    variant: \"subtitle2\",\n    color: \"initial\"\n  }, t('auth_reg:rating')))))), __jsx(Grid, {\n    item: true,\n    sm: 7,\n    xs: 12,\n    className: classes.authRegForm\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.welcome\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"initial\"\n  }, t('auth_reg:welcome')), __jsx(Typography, {\n    variant: \"subtitle2\",\n    color: \"initial\"\n  }, t('auth_reg:authSite'))), __jsx(\"div\", {\n    className: classes.tabsContainer\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    className: classes.tabs\n  }, __jsx(CustomTab, {\n    label: __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, t('auth_reg:signInTitle')),\n    id: 0\n  }), __jsx(CustomTab, {\n    label: __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, t('auth_reg:signUpTitle')),\n    id: 1\n  })), __jsx(\"div\", {\n    className: classes.tabPanels\n  }, __jsx(TabPanel, {\n    value: value,\n    index: 0,\n    className: classes.signPanel\n  }, __jsx(Formik, {\n    initialValues: loginVals,\n    onSubmit: onSubmit\n  }, ({\n    errors,\n    touched\n  }) => {\n    return __jsx(Form, null, __jsx(\"div\", null, __jsx(Typography, {\n      className: classes.errorTxt,\n      variant: \"subtitle2\"\n    }, errors.signInPhone && touched.signInPhone ? errors.signInPhone : '')), __jsx(\"div\", null, __jsx(Field, {\n      name: \"signInPhone\",\n      type: \"phone\",\n      placeholder: t('auth_reg:enterPhone'),\n      validate: phoneValidate,\n      component: CustomField,\n      className: errors.signInPhone && touched.signInPhone ? classes.errorInput : ''\n    })), __jsx(\"div\", null, __jsx(Typography, {\n      className: classes.errorTxt,\n      variant: \"subtitle2\"\n    }, errors.signInPswd && touched.signInPswd ? errors.signInPswd : '')), __jsx(\"div\", null, __jsx(Field, {\n      name: \"signInPswd\",\n      type: \"password\",\n      placeholder: t('auth_reg:enterPassword'),\n      validate: requiredValidate,\n      component: CustomField,\n      className: errors.signInPswd && touched.signInPswd ? classes.errorInput : ''\n    })), __jsx(\"div\", {\n      className: classes.forgetPswd\n    }, __jsx(\"a\", {\n      href: \"#\"\n    }, __jsx(\"span\", null, t('auth_reg:forgetPassword')))), __jsx(\"div\", {\n      className: classes.modalBtns\n    }, __jsx(ButtonComponent, {\n      className: \"signin-btn\",\n      type: \"submit\"\n    }, t('auth_reg:signIn'))), __jsx(\"div\", {\n      className: classes.agreement\n    }, __jsx(Typography, {\n      className: \"sign-agreement\",\n      variant: \"body2\"\n    }, `${t('auth_reg:agreement.firstPart')} `, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", null, `${t('auth_reg:agreement.secondPart')} `)), `${t('auth_reg:agreement.thirdPart')} `, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", null, `${t('auth_reg:agreement.fourthPart')}`)), language === 'uz' && ` ${t('auth_reg:agreement.fifthPart')}`)));\n  })), __jsx(TabPanel, {\n    value: value,\n    index: 1\n  }, __jsx(Formik, {\n    initialValues: signUpVals,\n    onSubmit: onSubmit\n  }, ({\n    errors,\n    touched\n  }) => __jsx(Form, null, __jsx(\"div\", null, __jsx(Typography, {\n    className: classes.errorTxt,\n    variant: \"subtitle2\"\n  }, errors.signUpPhone && touched.signUpPhone ? errors.signUpPhone : '')), __jsx(\"div\", null, __jsx(Field, {\n    name: \"signUpPhone\",\n    type: \"phone\",\n    placeholder: t('auth_reg:enterPhone'),\n    validate: phoneValidate,\n    component: CustomField,\n    className: errors.signUpPhone && touched.signUpPhone ? classes.errorInput : ''\n  })), __jsx(\"div\", {\n    className: classes.modalBtns\n  }, __jsx(ButtonComponent, {\n    className: \"signup-btn\",\n    type: \"submit\"\n  }, t('auth_reg:signUp'))), __jsx(\"div\", {\n    className: classes.agreement\n  }, __jsx(Typography, {\n    className: \"reg-agreement\",\n    variant: \"body2\"\n  }, `${t('auth_reg:agreement.firstPart')} `, __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, `${t('auth_reg:agreement.secondPart')} `)), `${t('auth_reg:agreement.thirdPart')} `, __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, `${t('auth_reg:agreement.fourthPart')}`)), language === 'uz' && ` ${t('auth_reg:agreement.fifthPart')}`)))))))))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/auth_reg/AuthRegPage.tsx"],"names":["React","useState","Grid","Tabs","Typography","Hidden","Link","Formik","Form","Field","BonusIcon","SafeBuyingIcon","AdvertisementIcon","TorgIcon","RatingIcon","CustomTab","ButtonComponent","CustomField","requiredValidate","phoneValidate","useStyles","TabPanel","props","children","value","index","other","AuthRegPage","t","language","loginVals","signInPhone","signInPswd","signUpVals","signUpPhone","setValue","onSubmit","values","actions","resetForm","handleChange","event","newValue","classes","root","modalBodyInfo","authRegForm","welcome","tabsContainer","tabs","tabPanels","signPanel","errors","touched","errorTxt","errorInput","forgetPswd","modalBtns","agreement"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {Grid, Tabs, Typography, Hidden} from '@material-ui/core'\r\nimport {Link} from '../../../i18n'\r\nimport {Formik, Form, Field} from 'formik'\r\nimport {\r\n    BonusIcon,\r\n    SafeBuyingIcon,\r\n    AdvertisementIcon,\r\n    TorgIcon,\r\n    RatingIcon,\r\n} from '../elements/icons'\r\nimport {CustomTab} from \"../elements/custom_tab/CustomTab\"\r\nimport {ButtonComponent} from \"../elements/button/Button\"\r\nimport {CustomField} from \"../elements/custom_field/CustomField\"\r\nimport {requiredValidate, phoneValidate} from '../validates'\r\n\r\n// Styles\r\nimport {useStyles} from './useStyles'\r\n\r\ninterface ILoginValues {\r\n    signInPhone: string,\r\n    signInPswd: string\r\n}\r\n\r\ninterface ISignUpValues {\r\n    signUpPhone: string\r\n}\r\n\r\nconst TabPanel = (props) => {\r\n    const {children, value, index, ...other} = props\r\n\r\n    return (\r\n        <div hidden={value !== index} {...other}>\r\n            {value === index && children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const AuthRegPage = (props) => {\r\n    const {t, language} = props;\r\n\r\n    const loginVals: ILoginValues = {signInPhone: '', signInPswd: ''};\r\n    const signUpVals: ISignUpValues = {signUpPhone: ''};\r\n    const [value, setValue] = useState(0);\r\n\r\n    const onSubmit = (values, actions) => {\r\n        actions.resetForm();\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container>\r\n                <Hidden xsDown>\r\n                    <Grid item xs={5} className={classes.modalBodyInfo}>\r\n                        <div>\r\n                            <div>\r\n                                <img src={BonusIcon} alt=\"bonus-icon\"/>\r\n                                <Typography variant=\"subtitle2\" color=\"initial\">\r\n                                    {t('auth_reg:bonus')}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <img\r\n                                    src={SafeBuyingIcon}\r\n                                    alt=\"safeAuction-icon\"\r\n                                />\r\n                                <Typography variant=\"subtitle2\" color=\"initial\">\r\n                                    {t('auth_reg:safeBuying')}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <img\r\n                                    src={AdvertisementIcon}\r\n                                    alt=\"advertisement-icon\"\r\n                                />\r\n                                <Typography variant=\"subtitle2\" color=\"initial\">\r\n                                    {t('auth_reg:createAd')}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <img src={TorgIcon} alt=\"torg-icon\"/>\r\n                                <Typography variant=\"subtitle2\" color=\"initial\">\r\n                                    {t('auth_reg:createAuction')}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <img src={RatingIcon} alt=\"rating-icon\"/>\r\n                                <Typography variant=\"subtitle2\" color=\"initial\">\r\n                                    {t('auth_reg:rating')}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                </Hidden>\r\n                <Grid item sm={7} xs={12} className={classes.authRegForm}>\r\n                    <div>\r\n                        <div className={classes.welcome}>\r\n                            <Typography variant=\"h6\" color=\"initial\">\r\n                                {t('auth_reg:welcome')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle2\" color=\"initial\">\r\n                                {t('auth_reg:authSite')}\r\n                            </Typography>\r\n                        </div>\r\n                        <div className={classes.tabsContainer}>\r\n                            <Tabs\r\n                                value={value}\r\n                                onChange={handleChange}\r\n                                indicatorColor=\"primary\"\r\n                                className={classes.tabs}\r\n                            >\r\n                                <CustomTab\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            {t('auth_reg:signInTitle')}\r\n                                        </Typography>\r\n                                    }\r\n                                    id={0}\r\n                                />\r\n                                <CustomTab\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            {t('auth_reg:signUpTitle')}\r\n                                        </Typography>\r\n                                    }\r\n                                    id={1}\r\n                                />\r\n                            </Tabs>\r\n                            <div className={classes.tabPanels}>\r\n                                <TabPanel\r\n                                    value={value}\r\n                                    index={0}\r\n                                    className={classes.signPanel}\r\n                                >\r\n                                    <Formik initialValues={loginVals} onSubmit={onSubmit}>\r\n                                        {({errors, touched}) => {\r\n                                            return (\r\n                                                <Form>\r\n                                                    <div>\r\n                                                        <Typography\r\n                                                            className={classes.errorTxt}\r\n                                                            variant=\"subtitle2\"\r\n                                                        >\r\n                                                            {errors.signInPhone && touched.signInPhone ? errors.signInPhone : ''}\r\n                                                        </Typography>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <Field\r\n                                                            name='signInPhone'\r\n                                                            type='phone'\r\n                                                            placeholder={t('auth_reg:enterPhone')}\r\n                                                            validate={phoneValidate}\r\n                                                            component={CustomField}\r\n                                                            className={errors.signInPhone && touched.signInPhone ? classes.errorInput : ''}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <Typography\r\n                                                            className={classes.errorTxt}\r\n                                                            variant=\"subtitle2\"\r\n                                                        >\r\n                                                            {errors.signInPswd && touched.signInPswd ? errors.signInPswd : ''}\r\n                                                        </Typography>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <Field\r\n                                                            name='signInPswd'\r\n                                                            type=\"password\"\r\n                                                            placeholder={t('auth_reg:enterPassword')}\r\n                                                            validate={requiredValidate}\r\n                                                            component={CustomField}\r\n                                                            className={errors.signInPswd && touched.signInPswd ? classes.errorInput : ''}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className={classes.forgetPswd}>\r\n                                                        <a href=\"#\">\r\n                                                        <span>\r\n                                                            {t('auth_reg:forgetPassword')}\r\n                                                        </span>\r\n                                                        </a>\r\n                                                    </div>\r\n                                                    <div className={classes.modalBtns}>\r\n                                                        <ButtonComponent className='signin-btn' type='submit'>\r\n                                                            {t('auth_reg:signIn')}\r\n                                                        </ButtonComponent>\r\n                                                    </div>\r\n                                                    <div className={classes.agreement}>\r\n                                                        <Typography className='sign-agreement' variant='body2'>\r\n                                                            {`${t('auth_reg:agreement.firstPart')} `}\r\n                                                            <Link href='#'>\r\n                                                                <a>{`${t('auth_reg:agreement.secondPart')} `}</a>\r\n                                                            </Link>\r\n                                                            {`${t('auth_reg:agreement.thirdPart')} `}\r\n                                                            <Link href='#'>\r\n                                                                <a>{`${t('auth_reg:agreement.fourthPart')}`}</a>\r\n                                                            </Link>\r\n                                                            {language === 'uz' && ` ${t('auth_reg:agreement.fifthPart')}`}\r\n                                                        </Typography>\r\n                                                    </div>\r\n                                                </Form>\r\n                                            )\r\n                                        }}\r\n                                    </Formik>\r\n                                </TabPanel>\r\n                                <TabPanel value={value} index={1}>\r\n                                    <Formik initialValues={signUpVals} onSubmit={onSubmit}>\r\n                                        {({errors, touched}) => (\r\n                                            <Form>\r\n                                                <div>\r\n                                                    <Typography\r\n                                                        className={classes.errorTxt}\r\n                                                        variant=\"subtitle2\"\r\n                                                    >\r\n                                                        {errors.signUpPhone && touched.signUpPhone ? errors.signUpPhone : ''}\r\n                                                    </Typography>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <Field\r\n                                                        name='signUpPhone'\r\n                                                        type='phone'\r\n                                                        placeholder={t('auth_reg:enterPhone')}\r\n                                                        validate={phoneValidate}\r\n                                                        component={CustomField}\r\n                                                        className={errors.signUpPhone && touched.signUpPhone ? classes.errorInput : ''}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className={classes.modalBtns}>\r\n                                                    <ButtonComponent className='signup-btn' type='submit'>\r\n                                                        {t('auth_reg:signUp')}\r\n                                                    </ButtonComponent>\r\n                                                </div>\r\n                                                <div className={classes.agreement}>\r\n                                                    <Typography className='reg-agreement' variant='body2'>\r\n                                                        {`${t('auth_reg:agreement.firstPart')} `}\r\n                                                        <Link href='#'>\r\n                                                            <a>{`${t('auth_reg:agreement.secondPart')} `}</a>\r\n                                                        </Link>\r\n                                                        {`${t('auth_reg:agreement.thirdPart')} `}\r\n                                                        <Link href='#'>\r\n                                                            <a>{`${t('auth_reg:agreement.fourthPart')}`}</a>\r\n                                                        </Link>\r\n                                                        {language === 'uz' && ` ${t('auth_reg:agreement.fifthPart')}`}\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </Form>\r\n                                        )}\r\n                                    </Formik>\r\n                                </TabPanel>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}