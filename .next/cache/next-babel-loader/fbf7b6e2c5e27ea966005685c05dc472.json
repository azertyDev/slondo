{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Router } from \"@root/i18n\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAdOrLotCtgryAction } from '@src/redux/slices/createAdOrLotSlice';\nimport { MenuItem, Typography } from \"@material-ui/core\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { CustomFormikMenu } from \"@src/components/elements/custom_formik_menu/CustomFormikMenu\";\nimport { adTypeAndCtgrySchema } from \"@src/validation_schemas/validationSchemas\";\nimport { useStyles } from './useStyles';\nvar initValues = {\n  isLot: 'Выберите тип',\n  category: {\n    id: null,\n    name: 'Выберите категорию'\n  }\n};\nexport var CreateAdModalForm = function CreateAdModalForm(props) {\n  _s();\n\n  var handleCloseModal = props.handleCloseModal;\n  var dispatch = useDispatch();\n  var categoriesList = useSelector(function (_ref) {\n    var categories = _ref.categories;\n    return categories.list;\n  });\n\n  var _useState = useState(null),\n      typeAnchor = _useState[0],\n      setTypeAnchor = _useState[1];\n\n  var _useState2 = useState(null),\n      estateAnchor = _useState2[0],\n      setEstateAnchor = _useState2[1];\n\n  var handleMenuOpen = function handleMenuOpen(anchor) {\n    return function (e) {\n      anchor(e.currentTarget);\n    };\n  };\n\n  var handleMenuClose = function handleMenuClose(anchor) {\n    return function () {\n      anchor(null);\n    };\n  };\n\n  var handleClickMenuItem = function handleClickMenuItem(handleSetValue, values, newValue) {\n    return function () {\n      handleSetValue(_objectSpread(_objectSpread({}, values), newValue));\n    };\n  };\n\n  var submit = function submit(values) {\n    console.log(values);\n    dispatch(setAdOrLotCtgryAction(values));\n    Router.push('/create_advertisement');\n  };\n\n  var classes = useStyles();\n  return __jsx(Formik, {\n    initialValues: initValues,\n    validationSchema: adTypeAndCtgrySchema,\n    onSubmit: submit\n  }, function (props) {\n    var errors = props.errors,\n        touched = props.touched,\n        values = props.values,\n        setValues = props.setValues,\n        handleBlur = props.handleBlur;\n    return __jsx(Form, {\n      className: classes.root\n    }, __jsx(\"div\", {\n      className: \"menu-btns\"\n    }, __jsx(\"div\", null, __jsx(Typography, null, errors.isLot && touched.isLot ? errors.isLot : ''), __jsx(ButtonComponent, {\n      onClick: handleMenuOpen(setTypeAnchor)\n    }, values.type.desc), __jsx(CustomFormikMenu, {\n      className: classes.menu,\n      name: values,\n      anchorEl: typeAnchor,\n      open: Boolean(typeAnchor),\n      onClose: handleMenuClose(setTypeAnchor),\n      setValues: setValues\n    }, __jsx(MenuItem, {\n      value: 1,\n      id: \"\\u041E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\",\n      onClick: handleClickMenuItem(setValues, values, {\n        isLot: false\n      }),\n      onBlur: handleBlur\n    }, __jsx(Typography, null, \"\\u041E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\")), __jsx(MenuItem, {\n      value: 2,\n      id: \"\\u0422\\u043E\\u0440\\u0433\",\n      onClick: handleClickMenuItem(setValues, values, {\n        isLot: true\n      }),\n      onBlur: handleBlur\n    }, __jsx(Typography, null, \"\\u0422\\u043E\\u0440\\u0433\")))), __jsx(\"div\", null, __jsx(Typography, null, errors.category && touched.category ? errors.category.id : ''), __jsx(ButtonComponent, {\n      onClick: handleMenuOpen(setEstateAnchor)\n    }, values.category.name), __jsx(CustomFormikMenu, {\n      name: values,\n      anchorEl: estateAnchor,\n      open: Boolean(estateAnchor),\n      onClose: handleMenuClose(setEstateAnchor),\n      setValues: setValues\n    }, categoriesList.map(function (_ref2) {\n      var id = _ref2.id,\n          name = _ref2.name;\n      return __jsx(MenuItem, {\n        key: id,\n        id: name,\n        value: id,\n        onBlur: handleBlur,\n        onClick: handleClickMenuItem(setValues, values, {\n          category: {\n            id: id,\n            name: name\n          }\n        })\n      }, __jsx(Typography, null, name));\n    })))), __jsx(\"div\", {\n      className: \"form-btns\"\n    }, __jsx(ButtonComponent, {\n      onClick: handleCloseModal\n    }, __jsx(Typography, null, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\")), __jsx(ButtonComponent, {\n      type: \"submit\"\n    }, __jsx(Typography, null, \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C\"))));\n  });\n};\n\n_s(CreateAdModalForm, \"VSy5binRk2f5rdRjJ4PGUPpLePg=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n\n_c = CreateAdModalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdModalForm\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/createAdModalForm/CreateAdModalForm.tsx"],"names":["React","useState","Formik","Form","Router","useDispatch","useSelector","setAdOrLotCtgryAction","MenuItem","Typography","ButtonComponent","CustomFormikMenu","adTypeAndCtgrySchema","useStyles","initValues","isLot","category","id","name","CreateAdModalForm","props","handleCloseModal","dispatch","categoriesList","categories","list","typeAnchor","setTypeAnchor","estateAnchor","setEstateAnchor","handleMenuOpen","anchor","e","currentTarget","handleMenuClose","handleClickMenuItem","handleSetValue","values","newValue","submit","console","log","push","classes","errors","touched","setValues","handleBlur","root","type","desc","menu","Boolean","map"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Formik, Form} from \"formik\";\r\nimport {Router} from \"@root/i18n\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setAdOrLotCtgryAction} from '@src/redux/slices/createAdOrLotSlice';\r\nimport {MenuItem, Typography} from \"@material-ui/core\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport {CustomFormikMenu} from \"@src/components/elements/custom_formik_menu/CustomFormikMenu\";\r\nimport {adTypeAndCtgrySchema} from \"@src/validation_schemas/validationSchemas\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {useStyles} from './useStyles';\r\n\r\nconst initValues = {\r\n    isLot: 'Выберите тип',\r\n    category: {\r\n        id: null,\r\n        name: 'Выберите категорию'\r\n    }\r\n};\r\n\r\nexport const CreateAdModalForm = (props) => {\r\n    const {handleCloseModal} = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const categoriesList = useSelector(({categories}: RootState) => categories.list);\r\n\r\n    const [typeAnchor, setTypeAnchor] = useState(null);\r\n    const [estateAnchor, setEstateAnchor] = useState(null);\r\n\r\n    const handleMenuOpen = (anchor) => (e) => {\r\n        anchor(e.currentTarget)\r\n    };\r\n\r\n    const handleMenuClose = (anchor) => () => {\r\n        anchor(null);\r\n    };\r\n\r\n    const handleClickMenuItem = (handleSetValue, values, newValue) => () => {\r\n        handleSetValue({...values, ...newValue});\r\n    };\r\n    const submit = (values) => {\r\n        console.log(values);\r\n        dispatch(setAdOrLotCtgryAction(values));\r\n        Router.push('/create_advertisement');\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Formik initialValues={initValues} validationSchema={adTypeAndCtgrySchema} onSubmit={submit}>\r\n            {(props) => {\r\n                const {\r\n                    errors,\r\n                    touched,\r\n                    values,\r\n                    setValues,\r\n                    handleBlur,\r\n                } = props;\r\n                return (\r\n                    <Form className={classes.root}>\r\n                        <div className='menu-btns'>\r\n                            <div>\r\n                                <Typography>{errors.isLot && touched.isLot ? errors.isLot : ''}</Typography>\r\n                                <ButtonComponent\r\n                                    onClick={handleMenuOpen(setTypeAnchor)}>{values.type.desc}</ButtonComponent>\r\n                                <CustomFormikMenu\r\n                                    className={classes.menu}\r\n                                    name={values}\r\n                                    anchorEl={typeAnchor}\r\n                                    open={Boolean(typeAnchor)}\r\n                                    onClose={handleMenuClose(setTypeAnchor)}\r\n                                    setValues={setValues}\r\n                                >\r\n                                    <MenuItem\r\n                                        value={1}\r\n                                        id='Объявление'\r\n                                        onClick={handleClickMenuItem(setValues, values, {\r\n                                            isLot: false\r\n                                        })}\r\n                                        onBlur={handleBlur}\r\n                                    >\r\n                                        <Typography>Объявление</Typography>\r\n                                    </MenuItem>\r\n                                    <MenuItem\r\n                                        value={2}\r\n                                        id='Торг'\r\n                                        onClick={handleClickMenuItem(setValues, values, {\r\n                                            isLot: true\r\n                                        })}\r\n                                        onBlur={handleBlur}\r\n                                    >\r\n                                        <Typography>Торг</Typography>\r\n                                    </MenuItem>\r\n                                </CustomFormikMenu>\r\n                            </div>\r\n                            <div>\r\n                                <Typography>{errors.category && touched.category ? errors.category.id : ''}</Typography>\r\n                                <ButtonComponent\r\n                                    onClick={handleMenuOpen(setEstateAnchor)}>{values.category.name}</ButtonComponent>\r\n                                <CustomFormikMenu\r\n                                    name={values}\r\n                                    anchorEl={estateAnchor}\r\n                                    open={Boolean(estateAnchor)}\r\n                                    onClose={handleMenuClose(setEstateAnchor)}\r\n                                    setValues={setValues}\r\n                                >\r\n                                    {\r\n                                        categoriesList.map(({id, name}) => (\r\n                                            <MenuItem\r\n                                                key={id}\r\n                                                id={name}\r\n                                                value={id}\r\n                                                onBlur={handleBlur}\r\n                                                onClick={handleClickMenuItem(setValues, values, {\r\n                                                    category: {\r\n                                                        id,\r\n                                                        name\r\n                                                    }\r\n                                                })}\r\n                                            >\r\n                                                <Typography>{name}</Typography>\r\n                                            </MenuItem>\r\n                                        ))\r\n                                    }\r\n                                </CustomFormikMenu>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-btns'>\r\n                            <ButtonComponent onClick={handleCloseModal}>\r\n                                <Typography>Отмена</Typography>\r\n                            </ButtonComponent>\r\n                            <ButtonComponent type='submit'>\r\n                                <Typography>Продолжить</Typography>\r\n                            </ButtonComponent>\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}