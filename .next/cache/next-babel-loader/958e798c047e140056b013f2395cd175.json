{"ast":null,"code":"import * as yup from \"yup\";\nexport const requiredFields = {\n  mileage: true,\n  body: true,\n  year: true,\n  car_engine_type: true\n};\nconst requiredMsg = 'Обязательное поле!';\nconst lazy = yup.lazy(value => yup.object(Object.fromEntries(Object.entries(value).map(([key]) => {\n  if (requiredFields[key]) {\n    return yup.object({\n      id: yup.number().nullable().required(requiredMsg)\n    });\n  }\n}))));\nexport const createAdvrtSchema = yup.object().shape({\n  // adType: yup.object({\n  //     id: yup.number().nullable().required(requiredMsg)\n  // }),\n  // category: yup.object({\n  //     id: yup.number().nullable().required(requiredMsg)\n  // }),\n  // title: yup.string().required(requiredMsg),\n  // location: yup.object({\n  //     city_id: yup.number().required(requiredMsg),\n  // }).nullable().required(requiredMsg),\n  // files: yup.array().required(requiredMsg),\n  // description: yup.string().required(requiredMsg),\n  // phone: yup.string().required(requiredMsg),\n  adParams: lazy\n});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/validation_schemas/createAdvrtSchema.ts"],"names":["yup","requiredFields","mileage","body","year","car_engine_type","requiredMsg","lazy","value","object","Object","fromEntries","entries","map","key","id","number","nullable","required","createAdvrtSchema","shape","adParams"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,OAAO,EAAE,IADiB;AAE1BC,EAAAA,IAAI,EAAE,IAFoB;AAG1BC,EAAAA,IAAI,EAAE,IAHoB;AAI1BC,EAAAA,eAAe,EAAE;AAJS,CAAvB;AAOP,MAAMC,WAAW,GAAG,oBAApB;AAEA,MAAMC,IAAI,GAAGP,GAAG,CAACO,IAAJ,CAAUC,KAAD,IAAWR,GAAG,CAACS,MAAJ,CAC7BC,MAAM,CAACC,WAAP,CACID,MAAM,CAACE,OAAP,CAAeJ,KAAf,EACKK,GADL,CACS,CAAC,CAACC,GAAD,CAAD,KAAW;AACR,MAAIb,cAAc,CAACa,GAAD,CAAlB,EAAyB;AACrB,WAAQd,GAAG,CAACS,MAAJ,CAAW;AACfM,MAAAA,EAAE,EAAEf,GAAG,CAACgB,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiCZ,WAAjC;AADW,KAAX,CAAR;AAGH;AACJ,CAPT,CADJ,CAD6B,CAApB,CAAb;AAcA,OAAO,MAAMa,iBAAiB,GAAGnB,GAAG,CAACS,MAAJ,GAAaW,KAAb,CAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAEd;AAdsC,CAAnB,CAA1B","sourcesContent":["import * as yup from \"yup\";\r\n\r\n\r\nexport const requiredFields = {\r\n    mileage: true,\r\n    body: true,\r\n    year: true,\r\n    car_engine_type: true,\r\n};\r\n\r\nconst requiredMsg = 'Обязательное поле!';\r\n\r\nconst lazy = yup.lazy((value) => yup.object(\r\n    Object.fromEntries(\r\n        Object.entries(value)\r\n            .map(([key]) => {\r\n                    if (requiredFields[key]) {\r\n                        return  yup.object({\r\n                            id: yup.number().nullable().required(requiredMsg)\r\n                        });\r\n                    }\r\n                }\r\n            )\r\n    )\r\n));\r\n\r\nexport const createAdvrtSchema = yup.object().shape({\r\n    // adType: yup.object({\r\n    //     id: yup.number().nullable().required(requiredMsg)\r\n    // }),\r\n    // category: yup.object({\r\n    //     id: yup.number().nullable().required(requiredMsg)\r\n    // }),\r\n    // title: yup.string().required(requiredMsg),\r\n    // location: yup.object({\r\n    //     city_id: yup.number().required(requiredMsg),\r\n    // }).nullable().required(requiredMsg),\r\n    // files: yup.array().required(requiredMsg),\r\n    // description: yup.string().required(requiredMsg),\r\n    // phone: yup.string().required(requiredMsg),\r\n    adParams: lazy\r\n});"]},"metadata":{},"sourceType":"module"}