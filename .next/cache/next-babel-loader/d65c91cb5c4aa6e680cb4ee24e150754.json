{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducers from \"./reducers\";\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancer = composeWithDevTools(applyMiddleware(sagaMiddleware)); // create a makeStore function\n\nconst makeStore = () => {\n  const store = createStore(reducers, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n}; // export an assembled wrapper\n\n\nexport default makeStore;","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/store.ts"],"names":["createStore","applyMiddleware","createSagaMiddleware","composeWithDevTools","reducers","rootSaga","sagaMiddleware","enhancer","makeStore","store","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,SAArB;AAIA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,QAAQ,GAAGJ,mBAAmB,CAChCF,eAAe,CAACK,cAAD,CADiB,CAApC,C,CAIA;;AACA,MAAME,SAAoB,GAAG,MAAM;AAC/B,QAAMC,KAAK,GAAGT,WAAW,CAACI,QAAD,EAAWG,QAAX,CAAzB;AACAD,EAAAA,cAAc,CAACI,GAAf,CAAmBL,QAAnB;AAEA,SAAOI,KAAP;AACH,CALD,C,CAOA;;;AACA,eAAeD,SAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {MakeStore} from 'next-redux-wrapper'\r\nimport reducers from \"./reducers\"\r\nimport rootSaga from './sagas'\r\n\r\nexport type AppState = ReturnType<typeof reducers>;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst enhancer = composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware),\r\n);\r\n\r\n// create a makeStore function\r\nconst makeStore: MakeStore = () => {\r\n    const store = createStore(reducers, enhancer);\r\n    sagaMiddleware.run(rootSaga);\r\n\r\n    return store\r\n}\r\n\r\n// export an assembled wrapper\r\nexport default makeStore;"]},"metadata":{},"sourceType":"module"}