{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { AncmntAutoForm } from \"./AncmntAutoForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormikProvider, useFormik } from \"formik\";\nimport { createAdvrtSchema, isRequired } from \"@root/validation_schemas/createAdvrtSchema\";\nimport { setErrorMsgAction } from \"@src/redux/slices/errorSlice\";\nimport { autoSelectKeys, initFormFields, textFieldKeys } from \"@src/components/announcement/create_ancmnt/ancmnt_form/AncmntFormContainer\";\nexport const AncmntAutoFormContainer = props => {\n  const {\n    activeStep,\n    ancmntType,\n    handleNextStep,\n    createAncmnt\n  } = props;\n  const {\n    category,\n    subCategory\n  } = createAncmnt;\n  const {\n    locations\n  } = useSelector(store => store);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: initFormFields,\n    validationSchema: createAdvrtSchema,\n    onSubmit\n  });\n  const {\n    values,\n    setValues,\n    errors,\n    touched,\n    setTouched,\n    handleBlur,\n    handleSubmit\n  } = formik;\n  let {\n    adParams\n  } = values;\n\n  const getFormData = data => {\n    const form = new FormData();\n    const {\n      avalTime,\n      location,\n      files,\n      adParams,\n      auction\n    } = data;\n    form.set('ads_type_id', ancmntType.id.toString());\n    form.set('parent_categories_id', subCategory.parent.id.toString());\n    form.set('title', data.title);\n    form.set('safe_deal', Number(data.safe_deal).toString());\n    form.set('delivery', Number(data.delivery).toString());\n    form.set('exchange', Number(data.exchange).toString());\n    form.set('phone', data.phone);\n    form.set('description', data.description);\n    form.set('price', data.price);\n    form.set('currency_id', data.currency.id.toString());\n    if (subCategory.id) form.set('child_categories_id', subCategory.id.toString());\n    files.forEach(({\n      file\n    }) => file && form.append('files[]', file, file.name));\n\n    if (avalTime.isActive) {\n      avalTime.week.forEach((day, i) => form.append(`week[${i}]`, day.id.toString()));\n      form.set('start_time', avalTime.start_time.toString());\n      form.set('end_time', avalTime.end_time.toString());\n    }\n\n    for (const key in location) {\n      if (typeof location[key] === 'number') {\n        form.set(key, Number(location[key]).toString());\n      }\n    }\n\n    for (let key in adParams) {\n      const value = adParams[key];\n\n      if (value) {\n        if (typeof value === 'string') {\n          const validKey = key.replace('_value', '');\n\n          if (textFieldKeys.some(k => k === validKey)) {\n            key = validKey;\n          }\n\n          form.set(key, value);\n        } else if (Array.isArray(value)) {\n          value.forEach((value, i) => form.append(`${key}[${i}]`, value.id));\n        } else {\n          if (value.id) {\n            switch (key) {\n              case 'models':\n                key = 'model';\n                break;\n\n              case 'colors':\n                key = 'color';\n            }\n\n            form.set(`${key}_id`, value.id);\n          }\n        }\n      }\n    }\n\n    if (ancmntType.id !== 1) {\n      form.set('duration_id', auction.duration.id.toString());\n      form.set('display_phone', Number(auction.display_phone).toString());\n\n      if (ancmntType.id === 3) {\n        form.set('reserve_price', auction.reserve_price);\n        form.set('auto_renewal', Number(auction.auto_renewal).toString());\n        form.set('offer_the_price', Number(auction.offer_the_price).toString());\n\n        if (auction.price_by_now.isActive) {\n          form.set('price_by_now', auction.price_by_now.value);\n        }\n      }\n    } // for (const key of form.entries()) {\n    //     console.log(key[0] + '-' + key[1]);\n    // }\n\n\n    return form;\n  };\n\n  async function onSubmit(values) {\n    try {\n      if (activeStep !== 3) {\n        handleNextStep();\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          isFetch: true\n        }));\n        const data = getFormData(values); // await userAPI.createAdvrt(data);\n\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          isFetch: false\n        }));\n        handleNextStep();\n      }\n    } catch (e) {\n      dispatch(setErrorMsgAction(e.message));\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        isFetch: false\n      }));\n    }\n  }\n\n  const handleCheckboxChange = valName => ({\n    target\n  }) => {\n    const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price'].some(fieldName => fieldName === valName);\n\n    if (isAuctionField) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          [valName]: target.checked\n        })\n      }));\n    } else if (valName === 'price_by_now') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          price_by_now: {\n            isActive: target.checked,\n            value: values.auction.price_by_now.value\n          }\n        })\n      }));\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        [valName]: target.checked\n      }));\n    }\n  };\n\n  const handleParamsCheckbox = (valueName, value) => () => {\n    if (adParams[valueName]) {\n      if (adParams[valueName].some(val => val.id === value.id)) {\n        adParams[valueName].map((val, index) => {\n          if (val.id === value.id) {\n            adParams[valueName].splice(index, 1);\n          }\n        });\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n          [valueName]: [...adParams[valueName], value]\n        });\n      }\n    } else {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: [value]\n      });\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      adParams\n    }));\n  };\n\n  const handleMenuItem = valueName => (newValue, setAnchor) => () => {\n    setAnchor(null);\n\n    if (valueName === 'currency') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        [valueName]: newValue\n      }));\n    } else if (valueName === 'duration') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          [valueName]: newValue\n        })\n      }));\n    } else {\n      // Reset sub props in values\n      Object.keys(newValue).map(key => {\n        if (adParams[key]) {\n          adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n            [key]: {\n              id: null,\n              name: 'Не выбрано'\n            }\n          });\n        }\n\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          adParams: _objectSpread(_objectSpread({}, adParams), {}, {\n            [valueName]: newValue\n          })\n        }));\n      });\n    }\n  };\n\n  const handleListItem = (valueName, value) => () => {\n    if (adParams[valueName] && adParams[valueName].id === value.id) {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: {\n          id: null,\n          name: 'Не выбрано'\n        }\n      });\n    } else {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: value\n      });\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      adParams\n    }));\n  };\n\n  const handleInput = valueName => ({\n    target\n  }) => {\n    if (numberRegEx.test(target.value)) {\n      if (valueName === 'price') {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          [valueName]: target.value\n        }));\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n          [valueName]: target.value\n        });\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          adParams\n        }));\n      }\n    }\n  };\n\n  const handleAuctionInput = valName => ({\n    target\n  }) => {\n    if (numberRegEx.test(target.value)) {\n      if (valName === 'price_by_now') {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n            [valName]: {\n              isActive: true,\n              value: target.value\n            }\n          })\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n            [valName]: target.value\n          })\n        }));\n      }\n    }\n  };\n\n  const handleSwitch = (_, value) => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n        isActive: value\n      })\n    }));\n  };\n\n  const handleWeekDay = value => () => {\n    if (values.avalTime.week.some(val => val.id === value.id)) {\n      values.avalTime.week.map((val, index) => {\n        if (val.id === value.id) {\n          values.avalTime.week.splice(index, 1);\n        }\n      });\n      setValues(_objectSpread({}, values));\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n          week: [...values.avalTime.week, value]\n        })\n      }));\n    }\n  };\n\n  const handleTime = ({\n    target\n  }) => {\n    let {\n      value\n    } = target;\n    const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\n    const isValid = regEx.test(value);\n\n    if (isValid) {\n      value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n          [target.name]: value\n        })\n      }));\n    }\n  };\n\n  const setReqValues = () => {\n    const reqVals = {};\n    const reqParamsVals = {};\n    const defaultVal = {\n      id: null,\n      name: 'Не выбрано'\n    };\n    const adParamsVals = subCategory.data;\n\n    if (category.id === 11) {\n      reqVals['price'] = '0';\n    }\n\n    if (ancmntType.currency.length !== 0) {\n      reqVals['currency'] = ancmntType.currency.filter(cur => cur.name === 'sum')[0];\n    }\n\n    if (ancmntType.id !== 1 && ancmntType.expired.length !== 0) {\n      reqVals['auction'] = _objectSpread(_objectSpread({}, values.auction), {}, {\n        duration: ancmntType.expired[0]\n      });\n    }\n\n    Object.keys(adParamsVals).forEach(key => {\n      if (isRequired(key) && adParams[key] === undefined) {\n        if (key === 'manufacturer' && subCategory.id == 1) {\n          reqParamsVals['models'] = defaultVal;\n        }\n\n        if (Array.isArray(adParamsVals[key])) {\n          reqParamsVals[key] = defaultVal;\n        } else {\n          reqParamsVals[key] = adParamsVals[key];\n        }\n      } else if (autoSelectKeys.some(k => k === key)) {\n        if (textFieldKeys.some(k => k === key)) {\n          reqParamsVals[`${key}_value`] = '';\n        }\n\n        reqParamsVals[key] = adParamsVals[key][0];\n      }\n    });\n    setValues(_objectSpread(_objectSpread(_objectSpread({}, values), reqVals), {}, {\n      adParams: _objectSpread(_objectSpread({}, adParams), reqParamsVals)\n    }));\n  };\n\n  useEffect(() => {\n    window && window.scrollTo(0, 0);\n  }, []);\n  useEffect(() => {\n    setReqValues();\n  }, [subCategory.parent.id, subCategory.parent.name]);\n  return __jsx(FormikProvider, {\n    value: formik\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(AncmntAutoForm, _extends({}, props, {\n    errors: errors,\n    touched: touched,\n    setTouched: setTouched,\n    values: values,\n    setValues: setValues,\n    locations: locations,\n    handleBlur: handleBlur,\n    handleTime: handleTime,\n    handleInput: handleInput,\n    handleSwitch: handleSwitch,\n    handleWeekDay: handleWeekDay,\n    handleListItem: handleListItem,\n    handleMenuItem: handleMenuItem,\n    handleAuctionInput: handleAuctionInput,\n    handleParamsCheckbox: handleParamsCheckbox,\n    handleCheckboxChange: handleCheckboxChange\n  }))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/announcement/create_ancmnt/ancmnt_form/ancmnt_auto_form/AncmntAutoFormContainer.tsx"],"names":["React","useEffect","AncmntAutoForm","useDispatch","useSelector","FormikProvider","useFormik","createAdvrtSchema","isRequired","setErrorMsgAction","autoSelectKeys","initFormFields","textFieldKeys","AncmntAutoFormContainer","props","activeStep","ancmntType","handleNextStep","createAncmnt","category","subCategory","locations","store","dispatch","formik","initialValues","validationSchema","onSubmit","values","setValues","errors","touched","setTouched","handleBlur","handleSubmit","adParams","getFormData","data","form","FormData","avalTime","location","files","auction","set","id","toString","parent","title","Number","safe_deal","delivery","exchange","phone","description","price","currency","forEach","file","append","name","isActive","week","day","i","start_time","end_time","key","value","validKey","replace","some","k","Array","isArray","duration","display_phone","reserve_price","auto_renewal","offer_the_price","price_by_now","isFetch","e","message","handleCheckboxChange","valName","target","isAuctionField","fieldName","checked","handleParamsCheckbox","valueName","val","map","index","splice","handleMenuItem","newValue","setAnchor","Object","keys","handleListItem","handleInput","numberRegEx","test","handleAuctionInput","handleSwitch","_","handleWeekDay","handleTime","regEx","isValid","m","setReqValues","reqVals","reqParamsVals","defaultVal","adParamsVals","length","filter","cur","expired","undefined","window","scrollTo"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {AncmntAutoForm} from \"./AncmntAutoForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {FormikProvider, useFormik} from \"formik\";\r\nimport {createAdvrtSchema, isRequired} from \"@root/validation_schemas/createAdvrtSchema\";\r\nimport {CreateAncmntFields} from \"@root/interfaces/Announcement\";\r\nimport {setErrorMsgAction} from \"@src/redux/slices/errorSlice\";\r\nimport {\r\n    autoSelectKeys,\r\n    initFormFields,\r\n    textFieldKeys\r\n} from \"@src/components/announcement/create_ancmnt/ancmnt_form/AncmntFormContainer\";\r\n\r\n\r\nexport const AncmntAutoFormContainer = (props) => {\r\n    const {\r\n        activeStep,\r\n        ancmntType,\r\n        handleNextStep,\r\n        createAncmnt\r\n    } = props;\r\n    const {category, subCategory} = createAncmnt;\r\n\r\n    const {locations} = useSelector((store: RootState) => store);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: initFormFields,\r\n        validationSchema: createAdvrtSchema,\r\n        onSubmit\r\n    });\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        touched,\r\n        setTouched,\r\n        handleBlur,\r\n        handleSubmit\r\n    } = formik;\r\n    let {adParams} = values;\r\n\r\n    const getFormData = (data: CreateAncmntFields) => {\r\n        const form = new FormData();\r\n        const {\r\n            avalTime,\r\n            location,\r\n            files,\r\n            adParams,\r\n            auction\r\n        } = data;\r\n\r\n        form.set('ads_type_id', ancmntType.id.toString());\r\n        form.set('parent_categories_id', subCategory.parent.id.toString());\r\n        form.set('title', data.title);\r\n        form.set('safe_deal', Number(data.safe_deal).toString());\r\n        form.set('delivery', Number(data.delivery).toString());\r\n        form.set('exchange', Number(data.exchange).toString());\r\n        form.set('phone', data.phone);\r\n        form.set('description', data.description);\r\n        form.set('price', data.price);\r\n        form.set('currency_id', data.currency.id.toString());\r\n\r\n        if (subCategory.id) form.set('child_categories_id', subCategory.id.toString());\r\n\r\n        files.forEach(({file}: any) => file && form.append('files[]', file, file.name));\r\n\r\n        if (avalTime.isActive) {\r\n            avalTime.week.forEach((day, i) => (\r\n                form.append(`week[${i}]`, day.id.toString())\r\n            ));\r\n            form.set('start_time', avalTime.start_time.toString());\r\n            form.set('end_time', avalTime.end_time.toString());\r\n        }\r\n\r\n        for (const key in location) {\r\n            if (typeof location[key] === 'number') {\r\n                form.set(key, Number(location[key]).toString());\r\n            }\r\n        }\r\n\r\n        for (let key in adParams) {\r\n            const value = adParams[key];\r\n            if (value) {\r\n                if (typeof value === 'string') {\r\n                    const validKey = key.replace('_value', '');\r\n                    if (textFieldKeys.some(k => k === validKey)) {\r\n                        key = validKey;\r\n                    }\r\n                    form.set(key, value);\r\n                } else if (Array.isArray(value)) {\r\n                    value.forEach((value, i) => (\r\n                        form.append(`${key}[${i}]`, value.id))\r\n                    )\r\n                } else {\r\n                    if (value.id) {\r\n                        switch (key) {\r\n                            case 'models' :\r\n                                key = 'model';\r\n                                break;\r\n                            case 'colors' :\r\n                                key = 'color';\r\n                        }\r\n                        form.set(`${key}_id`, value.id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ancmntType.id !== 1) {\r\n            form.set('duration_id', auction.duration.id.toString());\r\n            form.set('display_phone', Number(auction.display_phone).toString());\r\n            if (ancmntType.id === 3) {\r\n                form.set('reserve_price', auction.reserve_price);\r\n                form.set('auto_renewal', Number(auction.auto_renewal).toString());\r\n                form.set('offer_the_price', Number(auction.offer_the_price).toString());\r\n                if (auction.price_by_now.isActive) {\r\n                    form.set('price_by_now', auction.price_by_now.value);\r\n                }\r\n            }\r\n        }\r\n\r\n        // for (const key of form.entries()) {\r\n        //     console.log(key[0] + '-' + key[1]);\r\n        // }\r\n\r\n        return form;\r\n    };\r\n\r\n    async function onSubmit(values: CreateAncmntFields) {\r\n        try {\r\n            if (activeStep !== 3) {\r\n                handleNextStep();\r\n            } else {\r\n                setValues({...values, isFetch: true});\r\n\r\n                const data = getFormData(values);\r\n                // await userAPI.createAdvrt(data);\r\n\r\n                setValues({...values, isFetch: false});\r\n\r\n                handleNextStep();\r\n            }\r\n        } catch (e) {\r\n            dispatch(setErrorMsgAction(e.message));\r\n            setValues({...values, isFetch: false});\r\n        }\r\n    }\r\n\r\n    const handleCheckboxChange = (valName) => ({target}) => {\r\n        const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price']\r\n            .some(fieldName => fieldName === valName);\r\n\r\n        if (isAuctionField) {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valName]: target.checked\r\n                }\r\n            });\r\n        } else if (valName === 'price_by_now') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    price_by_now: {\r\n                        isActive: target.checked,\r\n                        value: values.auction.price_by_now.value\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            setValues({...values, [valName]: target.checked});\r\n        }\r\n    };\r\n\r\n    const handleParamsCheckbox = (valueName, value) => () => {\r\n        if (adParams[valueName]) {\r\n            if (adParams[valueName].some(val => val.id === value.id)) {\r\n                adParams[valueName].map((val, index) => {\r\n                    if (val.id === value.id) {\r\n                        adParams[valueName].splice(index, 1);\r\n                    }\r\n                });\r\n            } else {\r\n                adParams = {\r\n                    ...adParams,\r\n                    [valueName]: [...adParams[valueName], value]\r\n                };\r\n            }\r\n        } else {\r\n            adParams = {...adParams, [valueName]: [value]};\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n        setAnchor(null);\r\n\r\n        if (valueName === 'currency') {\r\n            setValues({\r\n                ...values,\r\n                [valueName]: newValue\r\n            });\r\n        } else if (valueName === 'duration') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valueName]: newValue\r\n                }\r\n            });\r\n        } else {\r\n            // Reset sub props in values\r\n            Object.keys(newValue).map(key => {\r\n                if (adParams[key]) {\r\n                    adParams = {\r\n                        ...adParams,\r\n                        [key]: {id: null, name: 'Не выбрано'}\r\n                    };\r\n                }\r\n                setValues({\r\n                    ...values,\r\n                    adParams: {\r\n                        ...adParams,\r\n                        [valueName]: newValue\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleListItem = (valueName, value) => () => {\r\n        if (adParams[valueName] && adParams[valueName].id === value.id) {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: {id: null, name: 'Не выбрано'}\r\n            };\r\n        } else {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: value\r\n            };\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleInput = (valueName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valueName === 'price') {\r\n                setValues({...values, [valueName]: target.value});\r\n            } else {\r\n                adParams = {...adParams, [valueName]: target.value};\r\n                setValues({...values, adParams});\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleAuctionInput = (valName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valName === 'price_by_now') {\r\n                setValues({\r\n                    ...values,\r\n                    auction: {\r\n                        ...values.auction,\r\n                        [valName]: {\r\n                            isActive: true,\r\n                            value: target.value\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    auction: {\r\n                        ...values.auction,\r\n                        [valName]: target.value\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSwitch = (_, value) => {\r\n        setValues({\r\n            ...values,\r\n            avalTime: {\r\n                ...values.avalTime,\r\n                isActive: value\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleWeekDay = (value) => () => {\r\n        if (values.avalTime.week.some(val => val.id === value.id)) {\r\n            values.avalTime.week.map((val, index) => {\r\n                if (val.id === value.id) {\r\n                    values.avalTime.week.splice(index, 1)\r\n                }\r\n            });\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    week: [\r\n                        ...values.avalTime.week,\r\n                        value\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTime = ({target}) => {\r\n        let {value} = target;\r\n        const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\r\n        const isValid = regEx.test(value);\r\n\r\n        if (isValid) {\r\n            value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    [target.name]: value\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const setReqValues = () => {\r\n        const reqVals = {};\r\n        const reqParamsVals = {};\r\n        const defaultVal = {id: null, name: 'Не выбрано'};\r\n\r\n        const adParamsVals = subCategory.data;\r\n\r\n        if (category.id === 11) {\r\n            reqVals['price'] = '0';\r\n        }\r\n\r\n        if (ancmntType.currency.length !== 0) {\r\n            reqVals['currency'] = ancmntType.currency.filter(cur => cur.name === 'sum')[0];\r\n        }\r\n\r\n        if (ancmntType.id !== 1 && ancmntType.expired.length !== 0) {\r\n            reqVals['auction'] = {\r\n                ...values.auction,\r\n                duration: ancmntType.expired[0]\r\n            };\r\n        }\r\n\r\n        Object.keys(adParamsVals).forEach(key => {\r\n            if (isRequired(key) && adParams[key] === undefined) {\r\n                if (key === 'manufacturer' && subCategory.id == 1) {\r\n                    reqParamsVals['models'] = defaultVal;\r\n                }\r\n                if (Array.isArray(adParamsVals[key])) {\r\n                    reqParamsVals[key] = defaultVal;\r\n                } else {\r\n                    reqParamsVals[key] = adParamsVals[key];\r\n                }\r\n            } else if (autoSelectKeys.some(k => k === key)) {\r\n                if (textFieldKeys.some(k => k === key)) {\r\n                    reqParamsVals[`${key}_value`] = '';\r\n                }\r\n                reqParamsVals[key] = adParamsVals[key][0];\r\n            }\r\n        });\r\n\r\n        setValues({\r\n            ...values,\r\n            ...reqVals,\r\n            adParams: {\r\n                ...adParams,\r\n                ...reqParamsVals\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window && window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setReqValues();\r\n    }, [subCategory.parent.id, subCategory.parent.name]);\r\n\r\n    return (\r\n        <FormikProvider value={formik}>\r\n            <form onSubmit={handleSubmit}>\r\n                <AncmntAutoForm\r\n                    {...props}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    setTouched={setTouched}\r\n                    values={values}\r\n                    setValues={setValues}\r\n                    locations={locations}\r\n                    handleBlur={handleBlur}\r\n                    handleTime={handleTime}\r\n                    handleInput={handleInput}\r\n                    handleSwitch={handleSwitch}\r\n                    handleWeekDay={handleWeekDay}\r\n                    handleListItem={handleListItem}\r\n                    handleMenuItem={handleMenuItem}\r\n                    handleAuctionInput={handleAuctionInput}\r\n                    handleParamsCheckbox={handleParamsCheckbox}\r\n                    handleCheckboxChange={handleCheckboxChange}\r\n                />\r\n            </form>\r\n        </FormikProvider>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}