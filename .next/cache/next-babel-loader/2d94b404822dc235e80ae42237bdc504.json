{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchCategories } from '../thunks/categoriesThunk';\nimport { HYDRATE } from \"next-redux-wrapper\";\nvar initialState = {\n  isFetch: false,\n  error: null,\n  categories: {}\n};\n\nvar HydrateAction = function HydrateAction(action) {\n  return {\n    type: HYDRATE,\n    payload: action.categories\n  };\n};\n\n_c = HydrateAction;\nvar advertisementSlice = createSlice({\n  name: 'categories',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(HYDRATE, function (state, action) {\n      return action.payload.categories;\n    });\n    builder.addCase(fetchCategories.pending, function (state) {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchCategories.fulfilled, function (state, payload) {\n      state.isFetch = false;\n      state.categories = payload;\n    });\n    builder.addCase(fetchCategories.rejected, function (state, action) {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport var categoriesReducer = advertisementSlice.reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"HydrateAction\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/slices/categoriesSlice.ts"],"names":["createSlice","fetchCategories","HYDRATE","initialState","isFetch","error","categories","HydrateAction","action","type","payload","advertisementSlice","name","reducers","extraReducers","builder","addCase","state","pending","fulfilled","rejected","categoriesReducer","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,eAAR,QAA8B,2BAA9B;AAEA,SAAQC,OAAR,QAAsB,oBAAtB;AAGA,IAAMC,YAAyB,GAAG;AAC9BC,EAAAA,OAAO,EAAE,KADqB;AAE9BC,EAAAA,KAAK,EAAE,IAFuB;AAG9BC,EAAAA,UAAU,EAAE;AAHkB,CAAlC;;AAMA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEP,OADH;AAEHQ,IAAAA,OAAO,EAAEF,MAAM,CAACF;AAFb,GAAP;AAIH,CALD;;KAAMC,a;AAON,IAAMI,kBAAkB,GAAGX,WAAW,CAAC;AACnCY,EAAAA,IAAI,EAAE,YAD6B;AAEnCT,EAAAA,YAAY,EAAZA,YAFmC;AAGnCU,EAAAA,QAAQ,EAAE,EAHyB;AAInCC,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBd,OAAhB,EAAyB,UAACe,KAAD,EAAQT,MAAR,EAAmB;AACxC,aAAOA,MAAM,CAACE,OAAP,CAAeJ,UAAtB;AACH,KAFD;AAGAS,IAAAA,OAAO,CAACC,OAAR,CAAgBf,eAAe,CAACiB,OAAhC,EAAyC,UAACD,KAAD,EAAW;AAChDA,MAAAA,KAAK,CAACb,OAAN,GAAgB,IAAhB;AACAa,MAAAA,KAAK,CAACZ,KAAN,GAAc,IAAd;AACH,KAHD;AAIAU,IAAAA,OAAO,CAACC,OAAR,CAAgBf,eAAe,CAACkB,SAAhC,EAA2C,UAACF,KAAD,EAAQP,OAAR,EAAoB;AAC3DO,MAAAA,KAAK,CAACb,OAAN,GAAgB,KAAhB;AACAa,MAAAA,KAAK,CAACX,UAAN,GAAmBI,OAAnB;AACH,KAHD;AAIAK,IAAAA,OAAO,CAACC,OAAR,CAAgBf,eAAe,CAACmB,QAAhC,EAA0C,UAACH,KAAD,EAAQT,MAAR,EAAmB;AACzDS,MAAAA,KAAK,CAACb,OAAN,GAAgB,KAAhB;AACAa,MAAAA,KAAK,CAACZ,KAAN,GAAcG,MAAM,CAACE,OAArB;AACH,KAHD;AAIH;AApBkC,CAAD,CAAtC;AAuBA,OAAO,IAAMW,iBAAiB,GAAGV,kBAAkB,CAACW,OAA7C","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\nimport {fetchCategories} from '../thunks/categoriesThunk'\r\nimport {ICategories} from '@root/interfaces/ICategories'\r\nimport {HYDRATE} from \"next-redux-wrapper\";\r\n\r\n\r\nconst initialState: ICategories = {\r\n    isFetch: false,\r\n    error: null,\r\n    categories: {},\r\n};\r\n\r\nconst HydrateAction = (action) => {\r\n    return {\r\n        type: HYDRATE,\r\n        payload: action.categories\r\n    }\r\n};\r\n\r\nconst advertisementSlice = createSlice({\r\n    name: 'categories',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(HYDRATE, (state, action) => {\r\n            return action.payload.categories\r\n        })\r\n        builder.addCase(fetchCategories.pending, (state) => {\r\n            state.isFetch = true;\r\n            state.error = null;\r\n        })\r\n        builder.addCase(fetchCategories.fulfilled, (state, payload) => {\r\n            state.isFetch = false;\r\n            state.categories = payload;\r\n        })\r\n        builder.addCase(fetchCategories.rejected, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = action.payload;\r\n        })\r\n    }\r\n});\r\n\r\nexport const categoriesReducer = advertisementSlice.reducer;"]},"metadata":{},"sourceType":"module"}