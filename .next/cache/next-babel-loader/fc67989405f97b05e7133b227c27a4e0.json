{"ast":null,"code":"import * as yup from \"yup\";\nexport const requiredFields = {\n  mileage: true,\n  body: true,\n  year: true,\n  car_engine_type: true\n};\nconst requiredMsg = 'Обязательное поле!';\n\nconst test = obj => {\n  Object.entries(requiredFields).reduce((a, [key]) => {\n    if (obj[key]) {\n      a[key] = yup.object({\n        id: yup.number().required(requiredMsg)\n      });\n      return a;\n    }\n  }, {});\n};\n\nconst schema = yup.lazy(value => yup.object(test(value)));\nexport const createAdvrtSchema = yup.object().shape({\n  // adType: yup.object({\n  //     id: yup.number().nullable().required(requiredMsg)\n  // }),\n  // category: yup.object({\n  //     id: yup.number().nullable().required(requiredMsg)\n  // }),\n  // title: yup.string().required(requiredMsg),\n  // location: yup.object({\n  //     city_id: yup.number().required(requiredMsg),\n  // }).nullable().required(requiredMsg),\n  // files: yup.array().required(requiredMsg),\n  // description: yup.string().required(requiredMsg),\n  // phone: yup.string().required(requiredMsg),\n  adParams: schema\n});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/validation_schemas/createAdvrtSchema.ts"],"names":["yup","requiredFields","mileage","body","year","car_engine_type","requiredMsg","test","obj","Object","entries","reduce","a","key","object","id","number","required","schema","lazy","value","createAdvrtSchema","shape","adParams"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,OAAO,EAAE,IADiB;AAE1BC,EAAAA,IAAI,EAAE,IAFoB;AAG1BC,EAAAA,IAAI,EAAE,IAHoB;AAI1BC,EAAAA,eAAe,EAAE;AAJS,CAAvB;AAOP,MAAMC,WAAW,GAAG,oBAApB;;AAEA,MAAMC,IAAI,GAAIC,GAAD,IAAS;AAClBC,EAAAA,MAAM,CAACC,OAAP,CAAeT,cAAf,EACKU,MADL,CACY,CAACC,CAAD,EAAI,CAACC,GAAD,CAAJ,KAAc;AACd,QAAIL,GAAG,CAACK,GAAD,CAAP,EAAc;AACVD,MAAAA,CAAC,CAACC,GAAD,CAAD,GAASb,GAAG,CAACc,MAAJ,CAAW;AAChBC,QAAAA,EAAE,EAAEf,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsBX,WAAtB;AADY,OAAX,CAAT;AAGA,aAAOM,CAAP;AACH;AACJ,GART,EAQW,EARX;AAUH,CAXD;;AAaA,MAAMM,MAAM,GAAGlB,GAAG,CAACmB,IAAJ,CAAUC,KAAD,IAAWpB,GAAG,CAACc,MAAJ,CAC/BP,IAAI,CAACa,KAAD,CAD2B,CAApB,CAAf;AAIA,OAAO,MAAMC,iBAAiB,GAAGrB,GAAG,CAACc,MAAJ,GAAaQ,KAAb,CAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAEL;AAdsC,CAAnB,CAA1B","sourcesContent":["import * as yup from \"yup\";\r\n\r\n\r\nexport const requiredFields = {\r\n    mileage: true,\r\n    body: true,\r\n    year: true,\r\n    car_engine_type: true,\r\n};\r\n\r\nconst requiredMsg = 'Обязательное поле!';\r\n\r\nconst test = (obj) => {\r\n    Object.entries(requiredFields)\r\n        .reduce((a, [key]) => {\r\n                if (obj[key]) {\r\n                    a[key] = yup.object({\r\n                        id: yup.number().required(requiredMsg)\r\n                    });\r\n                    return a;\r\n                }\r\n            }, {}\r\n        )\r\n}\r\n\r\nconst schema = yup.lazy((value) => yup.object(\r\n    test(value)\r\n));\r\n\r\nexport const createAdvrtSchema = yup.object().shape({\r\n    // adType: yup.object({\r\n    //     id: yup.number().nullable().required(requiredMsg)\r\n    // }),\r\n    // category: yup.object({\r\n    //     id: yup.number().nullable().required(requiredMsg)\r\n    // }),\r\n    // title: yup.string().required(requiredMsg),\r\n    // location: yup.object({\r\n    //     city_id: yup.number().required(requiredMsg),\r\n    // }).nullable().required(requiredMsg),\r\n    // files: yup.array().required(requiredMsg),\r\n    // description: yup.string().required(requiredMsg),\r\n    // phone: yup.string().required(requiredMsg),\r\n    adParams: schema\r\n});"]},"metadata":{},"sourceType":"module"}