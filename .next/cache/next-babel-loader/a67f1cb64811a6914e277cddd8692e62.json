{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from 'react-beautiful-dnd';\nimport { useStyles } from './useStyles';\nexport var PreviewPhotos = function PreviewPhotos(props) {\n  _s();\n\n  var images = props.images,\n      setImages = props.setImages;\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    var items = Array.from(images);\n\n    var _items$splice = items.splice(result.source.index, 1),\n        _items$splice2 = _slicedToArray(_items$splice, 1),\n        reorderedItem = _items$splice2[0];\n\n    items.splice(result.destination.index, 0, reorderedItem);\n    setImages(items);\n  }\n\n  var handleUploadFile = function handleUploadFile(e) {\n    setImages([{\n      file: e.target.files[0]\n    }].concat(_toConsumableArray(images)));\n  };\n\n  resetServerContext();\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: handleUploadFile\n  }), __jsx(DragDropContext, {\n    onDragEnd: handleOnDragEnd\n  }, __jsx(Droppable, {\n    droppableId: \"images\",\n    direction: \"horizontal\"\n  }, function (provided) {\n    return __jsx(\"div\", _extends({\n      className: \"images-wrapper\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef\n    }), images.map( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, index) {\n        var file, img;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                file = _ref.file;\n                _context.next = 3;\n                return getBase64(file);\n\n              case 3:\n                img = _context.sent;\n                return _context.abrupt(\"return\", __jsx(Draggable, {\n                  key: file.name,\n                  draggableId: file.name,\n                  index: index\n                }, function (provided) {\n                  return __jsx(\"div\", _extends({\n                    ref: provided.innerRef\n                  }, provided.draggableProps, provided.dragHandleProps), __jsx(\"img\", {\n                    src: img,\n                    alt: file.name\n                  }), __jsx(Typography, null, file.name));\n                }));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()), provided.placeholder);\n  })));\n};\n\n_s(PreviewPhotos, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PreviewPhotos;\n\nvar getBase64 = function getBase64(file) {\n  var reader = new FileReader();\n  return new Promise(function (res, rej) {\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      res(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      rej(error);\n    };\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PreviewPhotos\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/preview_photos/PreviewPhotos.tsx"],"names":["Typography","React","DragDropContext","Droppable","Draggable","resetServerContext","useStyles","PreviewPhotos","props","images","setImages","handleOnDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","handleUploadFile","e","file","target","files","classes","root","provided","droppableProps","innerRef","map","getBase64","img","name","draggableProps","dragHandleProps","placeholder","reader","FileReader","Promise","res","rej","readAsDataURL","onload","onerror","error"],"mappings":";;;;;;;;;AAAA,SAAQA,UAAR,QAAyB,mBAAzB;AACA,OAAOC,KAAP,MAAkC,OAAlC;AACA,SAAQC,eAAR,EAAyBC,SAAzB,EAAoCC,SAApC,EAA+CC,kBAA/C,QAAwE,qBAAxE;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAO,IAAMC,aAA2D,GAAG,SAA9DA,aAA8D,CAACC,KAAD,EAAW;AAAA;;AAAA,MAC3EC,MAD2E,GACtDD,KADsD,CAC3EC,MAD2E;AAAA,MACnEC,SADmE,GACtDF,KADsD,CACnEE,SADmE;;AAGlF,WAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,QAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;AAEzB,QAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWP,MAAX,CAAd;;AAH6B,wBAILK,KAAK,CAACG,MAAN,CAAaL,MAAM,CAACM,MAAP,CAAcC,KAA3B,EAAkC,CAAlC,CAJK;AAAA;AAAA,QAItBC,aAJsB;;AAK7BN,IAAAA,KAAK,CAACG,MAAN,CAAaL,MAAM,CAACC,WAAP,CAAmBM,KAAhC,EAAuC,CAAvC,EAA0CC,aAA1C;AAEAV,IAAAA,SAAS,CAACI,KAAD,CAAT;AACH;;AAED,MAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAO;AAC5BZ,IAAAA,SAAS,EAAE;AACPa,MAAAA,IAAI,EAAED,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf;AADC,KAAF,4BAGFhB,MAHE,GAAT;AAKH,GAND;;AAQAJ,EAAAA,kBAAkB;AAElB,MAAMqB,OAAO,GAAGpB,SAAS,EAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAEoB,OAAO,CAACC;AAAxB,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEN;AAA7B,IADJ,EAEI,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAEV;AAA5B,KACI,MAAC,SAAD;AAAW,IAAA,WAAW,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAC;AAA1C,KACK,UAACiB,QAAD;AAAA,WACG;AAAK,MAAA,SAAS,EAAC;AAAf,OAAoCA,QAAQ,CAACC,cAA7C;AAA6D,MAAA,GAAG,EAAED,QAAQ,CAACE;AAA3E,QACKrB,MAAM,CAACsB,GAAP;AAAA,2EAAW,uBAAeZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQI,gBAAAA,IAAR,QAAQA,IAAR;AAAA;AAAA,uBACUS,SAAS,CAACT,IAAD,CADnB;;AAAA;AACFU,gBAAAA,GADE;AAAA,iDAGJ,MAAC,SAAD;AAAW,kBAAA,GAAG,EAAEV,IAAI,CAACW,IAArB;AAA2B,kBAAA,WAAW,EAAEX,IAAI,CAACW,IAA7C;AAAmD,kBAAA,KAAK,EAAEf;AAA1D,mBACK,UAACS,QAAD;AAAA,yBACG;AACI,oBAAA,GAAG,EAAEA,QAAQ,CAACE;AADlB,qBACgCF,QAAQ,CAACO,cADzC,EAC6DP,QAAQ,CAACQ,eADtE,GAEI;AAAK,oBAAA,GAAG,EAAEH,GAAV;AAAe,oBAAA,GAAG,EAAEV,IAAI,CAACW;AAAzB,oBAFJ,EAGI,MAAC,UAAD,QAAaX,IAAI,CAACW,IAAlB,CAHJ,CADH;AAAA,iBADL,CAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;;AAAA;AAAA;AAAA;AAAA,QADL,EAeKN,QAAQ,CAACS,WAfd,CADH;AAAA,GADL,CADJ,CAFJ,CADJ;AA4BH,CApDM;;GAAM9B,a;UAuBOD,S;;;KAvBPC,a;;AAsDb,IAAMyB,SAAS,GAAG,SAAZA,SAAY,CAACT,IAAD,EAAU;AACxB,MAAMe,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BJ,IAAAA,MAAM,CAACK,aAAP,CAAqBpB,IAArB;;AACAe,IAAAA,MAAM,CAACM,MAAP,GAAgB,YAAY;AACxBH,MAAAA,GAAG,CAACH,MAAM,CAAC1B,MAAR,CAAH;AACH,KAFD;;AAGA0B,IAAAA,MAAM,CAACO,OAAP,GAAiB,UAACC,KAAD,EAAW;AACxBJ,MAAAA,GAAG,CAACI,KAAD,CAAH;AACH,KAFD;AAGH,GARM,CAAP;AASH,CAXD","sourcesContent":["import {Typography} from '@material-ui/core';\r\nimport React, {Dispatch, FC} from 'react';\r\nimport {DragDropContext, Droppable, Draggable, resetServerContext} from 'react-beautiful-dnd';\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const PreviewPhotos: FC<{ images: [], setImages: Dispatch<any> }> = (props) => {\r\n    const {images, setImages} = props;\r\n\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n\r\n        const items = Array.from(images);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        setImages(items);\r\n    }\r\n\r\n    const handleUploadFile = (e) => {\r\n        setImages([{\r\n            file: e.target.files[0]\r\n        },\r\n            ...images\r\n        ]);\r\n    };\r\n\r\n    resetServerContext();\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <input type='file' onChange={handleUploadFile}/>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId=\"images\" direction=\"horizontal\">\r\n                    {(provided) => (\r\n                        <div className=\"images-wrapper\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {images.map(async ({file}, index) => {\r\n                                const img = await getBase64(file);\r\n                                return (\r\n                                    <Draggable key={file.name} draggableId={file.name} index={index}>\r\n                                        {(provided) => (\r\n                                            <div\r\n                                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                                <img src={img} alt={file.name}/>\r\n                                                <Typography>{file.name}</Typography>\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                );\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst getBase64 = (file) => {\r\n    const reader = new FileReader();\r\n    return new Promise((res, rej) => {\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            res(reader.result)\r\n        };\r\n        reader.onerror = (error) => {\r\n            rej(error);\r\n        };\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}