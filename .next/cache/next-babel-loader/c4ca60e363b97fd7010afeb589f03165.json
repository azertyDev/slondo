{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { localizationActionTypes } from '../actions/localizationActions';\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst initialState = {\n  name: '',\n  avatar: null,\n  phone: ''\n};\nexport const localization = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload.mainSlider);\n\n    case localizationActionTypes.SET_UZ_LOCAL:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case localizationActionTypes.SET_RU_LOCAL:\n      return initialState;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/reducers/localization.ts"],"names":["localizationActionTypes","HYDRATE","initialState","name","avatar","phone","localization","state","action","type","payload","mainSlider","SET_UZ_LOCAL","SET_RU_LOCAL"],"mappings":";;;;;;AAAA,SAAQA,uBAAR,QAAsC,gCAAtC;AAEA,SAAQC,OAAR,QAAsB,oBAAtB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,MAAM,EAAE,IAFS;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAyB,GAAGL,YAA7B,EAA2CM,MAA3C,KAAqF;AAC7G,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,OAAL;AACI,6CACOM,KADP,GAEOC,MAAM,CAACE,OAAP,CAAeC,UAFtB;;AAIJ,SAAKX,uBAAuB,CAACY,YAA7B;AACI,6CACOL,KADP,GAEOC,MAAM,CAACE,OAFd;;AAIJ,SAAKV,uBAAuB,CAACa,YAA7B;AACI,aAAOX,YAAP;;AACJ;AACI,aAAOK,KAAP;AAdR;AAgBH,CAjBM","sourcesContent":["import {localizationActionTypes} from '../actions/localizationActions';\r\nimport {AnyAction} from \"redux\";\r\nimport {HYDRATE} from \"next-redux-wrapper\";\r\nimport {ILocalizationState} from \"../../../interfaces/ILocalizationState\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    avatar: null,\r\n    phone: ''\r\n};\r\n\r\nexport const localization = (state: ILocalizationState = initialState, action: AnyAction): ILocalizationState => {\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            return {\r\n                ...state,\r\n                ...action.payload.mainSlider\r\n            };\r\n        case localizationActionTypes.SET_UZ_LOCAL:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case localizationActionTypes.SET_RU_LOCAL:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}