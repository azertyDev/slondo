{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { AncmntsTabs } from './AncmntsTabs';\nimport { ITEMS_PER_PAGE } from '@src/constants';\nimport { userAPI } from '@src/api/api';\nimport { i18n } from '@root/i18n';\nconst cardData = {\n  id: null,\n  title: '',\n  cardType: '',\n  safe_deal: null,\n  price: null,\n  currency: {\n    id: null,\n    name: ''\n  },\n  city: {\n    id: null,\n    name: ''\n  },\n  region: {\n    id: null,\n    name: ''\n  },\n  ads_type: {\n    id: null,\n    name: '',\n    mark: ''\n  },\n  delivery: null,\n  exchange: null,\n  created_at: '',\n  location: '',\n  images: [{\n    url: {\n      default: ''\n    }\n  }]\n};\nconst initCards = [];\n\nfor (let i = 1; i <= 16; i++) {\n  initCards.push(cardData);\n}\n\nconst initialCardData = {\n  isFetch: false,\n  isShowMoreFetch: false,\n  error: null,\n  data: {\n    cards: initCards,\n    total: null\n  }\n};\n\nconst fetchCardData = async (itemsPerPage, page, type, lang) => {\n  return await userAPI.getCardData(itemsPerPage, page, type, lang);\n};\n\nexport const AncmntsTabsContainer = props => {\n  const lang = i18n.language;\n  const {\n    0: tabValue,\n    1: setTabValue\n  } = useState(0);\n  const {\n    0: ancmntCurrentPage,\n    1: setAncmntCurrentPage\n  } = useState(1);\n  const {\n    0: auctionCurrentPage,\n    1: setAuctionCurrentPage\n  } = useState(1);\n  const {\n    0: ancmntCardData,\n    1: setAncmntCardData\n  } = useState(initialCardData);\n  const {\n    0: auctionCardData,\n    1: setAuctionCardData\n  } = useState(initialCardData);\n\n  const setCardData = async (state, setState, currentPage, type, isShowMore = false) => {\n    try {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        isFetch: !isShowMore,\n        isShowMoreFetch: true\n      }));\n      const newData = await fetchCardData(ITEMS_PER_PAGE, currentPage, type, lang);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        isFetch: false,\n        isShowMoreFetch: false,\n        data: {\n          cards: isShowMore ? [...state.data.cards, ...newData.data] : newData.data,\n          total: newData.total\n        }\n      }));\n    } catch (e) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        error: e.message\n      }));\n    }\n  };\n\n  const handleTabChange = (_, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const handleShowMore = () => {\n    if (tabValue === 0) {\n      const nextAncmntPage = ancmntCurrentPage + 1;\n      setAncmntCurrentPage(nextAncmntPage);\n      setCardData(ancmntCardData, setAncmntCardData, nextAncmntPage, 'ad', true);\n    } else {\n      const nextAuctionPage = auctionCurrentPage + 1;\n      setAuctionCurrentPage(nextAuctionPage);\n      setCardData(auctionCardData, setAuctionCardData, nextAuctionPage, 'lot', true);\n    }\n  };\n\n  useEffect(() => {\n    setCardData(ancmntCardData, setAncmntCardData, ancmntCurrentPage, 'ad');\n    setCardData(auctionCardData, setAuctionCardData, auctionCurrentPage, 'lot');\n  }, []);\n  return __jsx(AncmntsTabs, {\n    t: props.t,\n    tabValue: tabValue,\n    ancmntCardData: ancmntCardData,\n    auctionCardData: auctionCardData,\n    handleTabChange: handleTabChange,\n    handleShowMore: handleShowMore\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/home/main/ancmnts_tabs/AncmntsTabsContainer.tsx"],"names":["React","useEffect","useState","AncmntsTabs","ITEMS_PER_PAGE","userAPI","i18n","cardData","id","title","cardType","safe_deal","price","currency","name","city","region","ads_type","mark","delivery","exchange","created_at","location","images","url","default","initCards","i","push","initialCardData","isFetch","isShowMoreFetch","error","data","cards","total","fetchCardData","itemsPerPage","page","type","lang","getCardData","AncmntsTabsContainer","props","language","tabValue","setTabValue","ancmntCurrentPage","setAncmntCurrentPage","auctionCurrentPage","setAuctionCurrentPage","ancmntCardData","setAncmntCardData","auctionCardData","setAuctionCardData","setCardData","state","setState","currentPage","isShowMore","newData","e","message","handleTabChange","_","newValue","handleShowMore","nextAncmntPage","nextAuctionPage","t"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {WithT} from 'i18next';\r\nimport {AncmntsTabs} from './AncmntsTabs';\r\nimport {ITEMS_PER_PAGE} from '@src/constants';\r\nimport {userAPI} from '@src/api/api';\r\nimport {i18n} from '@root/i18n';\r\nimport {CardData} from '@root/interfaces/CardData';\r\n\r\nconst cardData = {\r\n    id: null,\r\n    title: '',\r\n    cardType: '',\r\n    safe_deal: null,\r\n    price: null,\r\n    currency: {\r\n        id: null,\r\n        name: '',\r\n    },\r\n    city: {\r\n        id: null,\r\n        name: '',\r\n    },\r\n    region: {\r\n        id: null,\r\n        name: '',\r\n    },\r\n    ads_type: {\r\n        id: null,\r\n        name: '',\r\n        mark: '',\r\n    },\r\n    delivery: null,\r\n    exchange: null,\r\n    created_at: '',\r\n    location: '',\r\n    images: [\r\n        {\r\n            url: {\r\n                default: ''\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nconst initCards = [];\r\n\r\nfor (let i = 1; i <= 16; i++) {\r\n    initCards.push(cardData);\r\n}\r\n\r\nconst initialCardData: CardData = {\r\n    isFetch: false,\r\n    isShowMoreFetch: false,\r\n    error: null,\r\n    data: {\r\n        cards: initCards,\r\n        total: null,\r\n    },\r\n};\r\n\r\nconst fetchCardData = async (itemsPerPage, page, type, lang) => {\r\n    return await userAPI.getCardData(itemsPerPage, page, type, lang);\r\n};\r\n\r\nexport const AncmntsTabsContainer: FC<WithT> = (props) => {\r\n    const lang = i18n.language;\r\n\r\n    const [tabValue, setTabValue] = useState(0);\r\n\r\n    const [ancmntCurrentPage, setAncmntCurrentPage] = useState(1);\r\n    const [auctionCurrentPage, setAuctionCurrentPage] = useState(1);\r\n\r\n    const [ancmntCardData, setAncmntCardData] = useState(initialCardData);\r\n    const [auctionCardData, setAuctionCardData] = useState(initialCardData);\r\n\r\n    const setCardData = async (state, setState, currentPage, type, isShowMore = false) => {\r\n        try {\r\n            setState({\r\n                ...state,\r\n                isFetch: !isShowMore,\r\n                isShowMoreFetch: true,\r\n            });\r\n\r\n            const newData = await fetchCardData(\r\n                ITEMS_PER_PAGE,\r\n                currentPage,\r\n                type,\r\n                lang\r\n            );\r\n\r\n            setState({\r\n                ...state,\r\n                isFetch: false,\r\n                isShowMoreFetch: false,\r\n                data: {\r\n                    cards: isShowMore ? [...state.data.cards, ...newData.data] : newData.data,\r\n                    total: newData.total,\r\n                },\r\n            });\r\n        } catch (e) {\r\n            setState({\r\n                ...state,\r\n                error: e.message,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (_, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n        if (tabValue === 0) {\r\n            const nextAncmntPage = ancmntCurrentPage + 1;\r\n            setAncmntCurrentPage(nextAncmntPage);\r\n            setCardData(ancmntCardData, setAncmntCardData, nextAncmntPage, 'ad', true);\r\n        } else {\r\n            const nextAuctionPage = auctionCurrentPage + 1;\r\n            setAuctionCurrentPage(nextAuctionPage);\r\n            setCardData(auctionCardData, setAuctionCardData, nextAuctionPage, 'lot', true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCardData(ancmntCardData, setAncmntCardData, ancmntCurrentPage, 'ad');\r\n        setCardData(auctionCardData, setAuctionCardData, auctionCurrentPage, 'lot');\r\n    }, []);\r\n\r\n    return (\r\n        <AncmntsTabs\r\n            t={props.t}\r\n            tabValue={tabValue}\r\n            ancmntCardData={ancmntCardData}\r\n            auctionCardData={auctionCardData}\r\n            handleTabChange={handleTabChange}\r\n            handleShowMore={handleShowMore}\r\n        />\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}