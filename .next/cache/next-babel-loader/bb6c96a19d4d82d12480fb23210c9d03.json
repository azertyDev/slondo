{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport { MenuItem, Typography } from \"@material-ui/core\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { object, number } from 'yup';\nimport { useStyles } from './useStyles';\nimport { CustomFormikMenu } from \"@src/components/elements/custom_formik_menu/CustomFormikMenu\";\nconst initValues = {\n  type: {\n    id: null,\n    desc: 'Выберите тип'\n  },\n  category: {\n    id: null,\n    desc: 'Выберите категорию'\n  }\n};\nexport const CreateAdModalForm = props => {\n  const {\n    handleCloseModal\n  } = props;\n  const router = useRouter();\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const validationSchema = object({\n    type: object({\n      id: number().nullable().required('Выберите тип объявления!')\n    }),\n    category: object({\n      id: number().nullable().required('Выберите категорию!')\n    })\n  });\n\n  const handleMenuOpen = e => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClickMenuItem = (handleSetValue, setTouched, values, newValue) => () => {\n    handleSetValue(_objectSpread(_objectSpread({}, values), newValue));\n    setTouched(true);\n  };\n\n  const submit = () => {\n    router.push('/create_advertisement');\n  };\n\n  const classes = useStyles();\n  return __jsx(Formik, {\n    initialValues: initValues,\n    validationSchema: validationSchema,\n    onSubmit: submit\n  }, props => {\n    const {\n      errors,\n      touched,\n      values,\n      setValues,\n      setTouched,\n      handleBlur,\n      handleChange\n    } = props;\n    console.log(values);\n    console.log(touched);\n    return __jsx(Form, {\n      className: classes.root\n    }, __jsx(\"div\", null, __jsx(ButtonComponent, {\n      onClick: handleMenuOpen\n    }, values.type.desc), __jsx(CustomFormikMenu, {\n      name: values,\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleMenuClose,\n      setValues: setValues\n    }, __jsx(MenuItem, {\n      value: 1,\n      id: \"ad\" // onClick={handleClickMenuItem(setValues, setTouched, values, {\n      //     type: {\n      //         id: 1,\n      //         desc: 'Объявление'\n      //     }\n      // })}\n      ,\n      onChange: handleChange,\n      onBlur: handleBlur\n    }, \"\\u041E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\"), __jsx(MenuItem, {\n      value: 2,\n      id: \"auction\" // onClick={handleClickMenuItem(setValues, setTouched, values, {\n      //     type: {\n      //         id: 1,\n      //         desc: 'Торг'\n      //     }\n      // })}\n      ,\n      onChange: handleChange,\n      onBlur: handleBlur\n    }, \"\\u0422\\u043E\\u0440\\u0433\"))), __jsx(\"div\", null, __jsx(ButtonComponent, {\n      onClick: handleMenuOpen\n    }, values.category.desc), __jsx(CustomFormikMenu, {\n      name: values,\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleMenuClose,\n      setValues: setValues\n    }, __jsx(MenuItem, {\n      value: 1,\n      onClick: handleClickMenuItem(setValues, setTouched, values, {\n        category: {\n          id: 1,\n          desc: 'Недвижимость'\n        }\n      })\n    }, \"\\u041D\\u0435\\u0434\\u0432\\u0438\\u0436\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\"), __jsx(MenuItem, {\n      value: 2,\n      onClick: handleClickMenuItem(setValues, setTouched, values, {\n        category: {\n          id: 1,\n          desc: 'Автомобили'\n        }\n      })\n    }, \"\\u0410\\u0432\\u0442\\u043E\\u043C\\u043E\\u0431\\u0438\\u043B\\u0438\"))), __jsx(\"div\", {\n      className: \"form-btns\"\n    }, __jsx(ButtonComponent, {\n      onClick: handleCloseModal\n    }, __jsx(Typography, null, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\")), __jsx(ButtonComponent, {\n      type: \"submit\"\n    }, __jsx(Typography, null, \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C\"))));\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/createAdModalForm/CreateAdModalForm.tsx"],"names":["React","useState","Formik","Form","useRouter","MenuItem","Typography","ButtonComponent","object","number","useStyles","CustomFormikMenu","initValues","type","id","desc","category","CreateAdModalForm","props","handleCloseModal","router","anchorEl","setAnchorEl","validationSchema","nullable","required","handleMenuOpen","e","currentTarget","handleMenuClose","handleClickMenuItem","handleSetValue","setTouched","values","newValue","submit","push","classes","errors","touched","setValues","handleBlur","handleChange","console","log","root","Boolean"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,QAA3B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,mBAAnC;AACA,SAAQC,eAAR,QAA8B,wCAA9B;AACA,SAAQC,MAAR,EAAgBC,MAAhB,QAA6B,KAA7B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,gBAAR,QAA+B,8DAA/B;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAE,IADF;AAEFC,IAAAA,IAAI,EAAE;AAFJ,GADS;AAKfC,EAAAA,QAAQ,EAAE;AACNF,IAAAA,EAAE,EAAE,IADE;AAENC,IAAAA,IAAI,EAAE;AAFA;AALK,CAAnB;AAWA,OAAO,MAAME,iBAAiB,GAAIC,KAAD,IAAW;AACxC,QAAM;AAACC,IAAAA;AAAD,MAAqBD,KAA3B;AAEA,QAAME,MAAM,GAAGhB,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACiB,QAAD;AAAA,OAAWC;AAAX,MAA0BrB,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAMsB,gBAAgB,GAAGf,MAAM,CAAC;AAC5BK,IAAAA,IAAI,EAAEL,MAAM,CAAC;AACTM,MAAAA,EAAE,EAAEL,MAAM,GAAGe,QAAT,GAAoBC,QAApB,CAA6B,0BAA7B;AADK,KAAD,CADgB;AAI5BT,IAAAA,QAAQ,EAAER,MAAM,CAAC;AACbM,MAAAA,EAAE,EAAEL,MAAM,GAAGe,QAAT,GAAoBC,QAApB,CAA6B,qBAA7B;AADS,KAAD;AAJY,GAAD,CAA/B;;AASA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC1BL,IAAAA,WAAW,CAACK,CAAC,CAACC,aAAH,CAAX;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1BP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAMQ,mBAAmB,GAAG,CAACC,cAAD,EAAiBC,UAAjB,EAA6BC,MAA7B,EAAqCC,QAArC,KAAkD,MAAM;AAChFH,IAAAA,cAAc,iCAAKE,MAAL,GAAgBC,QAAhB,EAAd;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAHD;;AAKA,QAAMG,MAAM,GAAG,MAAM;AACjBf,IAAAA,MAAM,CAACgB,IAAP,CAAY,uBAAZ;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAG3B,SAAS,EAAzB;AACA,SACI,MAAC,MAAD;AAAQ,IAAA,aAAa,EAAEE,UAAvB;AAAmC,IAAA,gBAAgB,EAAEW,gBAArD;AAAuE,IAAA,QAAQ,EAAEY;AAAjF,KACMjB,KAAD,IAAW;AACR,UAAM;AACFoB,MAAAA,MADE;AAEFC,MAAAA,OAFE;AAGFN,MAAAA,MAHE;AAIFO,MAAAA,SAJE;AAKFR,MAAAA,UALE;AAMFS,MAAAA,UANE;AAOFC,MAAAA;AAPE,QAQFxB,KARJ;AASAyB,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,WACI,MAAC,IAAD;AAAM,MAAA,SAAS,EAAEF,OAAO,CAACQ;AAAzB,OACI,mBAEI,MAAC,eAAD;AAAiB,MAAA,OAAO,EAAEnB;AAA1B,OAA2CO,MAAM,CAACpB,IAAP,CAAYE,IAAvD,CAFJ,EAGI,MAAC,gBAAD;AACI,MAAA,IAAI,EAAEkB,MADV;AAEI,MAAA,QAAQ,EAAEZ,QAFd;AAGI,MAAA,IAAI,EAAEyB,OAAO,CAACzB,QAAD,CAHjB;AAII,MAAA,OAAO,EAAEQ,eAJb;AAKI,MAAA,SAAS,EAAEW;AALf,OAOI,MAAC,QAAD;AACI,MAAA,KAAK,EAAE,CADX;AAEI,MAAA,EAAE,EAAC,IAFP,CAGI;AACA;AACA;AACA;AACA;AACA;AARJ;AASI,MAAA,QAAQ,EAAEE,YATd;AAUI,MAAA,MAAM,EAAED;AAVZ,sEAPJ,EAsBI,MAAC,QAAD;AACI,MAAA,KAAK,EAAE,CADX;AAEI,MAAA,EAAE,EAAC,SAFP,CAGI;AACA;AACA;AACA;AACA;AACA;AARJ;AASI,MAAA,QAAQ,EAAEC,YATd;AAUI,MAAA,MAAM,EAAED;AAVZ,kCAtBJ,CAHJ,CADJ,EA2CI,mBAEI,MAAC,eAAD;AAAiB,MAAA,OAAO,EAAEf;AAA1B,OAA2CO,MAAM,CAACjB,QAAP,CAAgBD,IAA3D,CAFJ,EAGI,MAAC,gBAAD;AACI,MAAA,IAAI,EAAEkB,MADV;AAEI,MAAA,QAAQ,EAAEZ,QAFd;AAGI,MAAA,IAAI,EAAEyB,OAAO,CAACzB,QAAD,CAHjB;AAII,MAAA,OAAO,EAAEQ,eAJb;AAKI,MAAA,SAAS,EAAEW;AALf,OAOI,MAAC,QAAD;AACI,MAAA,KAAK,EAAE,CADX;AAEI,MAAA,OAAO,EAAEV,mBAAmB,CAACU,SAAD,EAAYR,UAAZ,EAAwBC,MAAxB,EAAgC;AACxDjB,QAAAA,QAAQ,EAAE;AACNF,UAAAA,EAAE,EAAE,CADE;AAENC,UAAAA,IAAI,EAAE;AAFA;AAD8C,OAAhC;AAFhC,kFAPJ,EAkBI,MAAC,QAAD;AACI,MAAA,KAAK,EAAE,CADX;AAEI,MAAA,OAAO,EAAEe,mBAAmB,CAACU,SAAD,EAAYR,UAAZ,EAAwBC,MAAxB,EAAgC;AACxDjB,QAAAA,QAAQ,EAAE;AACNF,UAAAA,EAAE,EAAE,CADE;AAENC,UAAAA,IAAI,EAAE;AAFA;AAD8C,OAAhC;AAFhC,sEAlBJ,CAHJ,CA3CJ,EA6EI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,MAAC,eAAD;AAAiB,MAAA,OAAO,EAAEI;AAA1B,OACI,MAAC,UAAD,+CADJ,CADJ,EAII,MAAC,eAAD;AAAiB,MAAA,IAAI,EAAC;AAAtB,OACI,MAAC,UAAD,uEADJ,CAJJ,CA7EJ,CADJ;AAwFH,GArGL,CADJ;AAyGH,CA3IM","sourcesContent":["import React, {useState} from \"react\"\r\nimport {Formik, Form} from \"formik\"\r\nimport {useRouter} from \"next/router\"\r\nimport {MenuItem, Typography} from \"@material-ui/core\"\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\"\r\nimport {object, number} from 'yup'\r\nimport {useStyles} from './useStyles'\r\nimport {CustomFormikMenu} from \"@src/components/elements/custom_formik_menu/CustomFormikMenu\"\r\n\r\nconst initValues = {\r\n    type: {\r\n        id: null,\r\n        desc: 'Выберите тип',\r\n    },\r\n    category: {\r\n        id: null,\r\n        desc: 'Выберите категорию'\r\n    }\r\n};\r\n\r\nexport const CreateAdModalForm = (props) => {\r\n    const {handleCloseModal} = props;\r\n\r\n    const router = useRouter();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const validationSchema = object({\r\n        type: object({\r\n            id: number().nullable().required('Выберите тип объявления!')\r\n        }),\r\n        category: object({\r\n            id: number().nullable().required('Выберите категорию!')\r\n        })\r\n    });\r\n\r\n    const handleMenuOpen = (e) => {\r\n        setAnchorEl(e.currentTarget)\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null)\r\n    };\r\n\r\n    const handleClickMenuItem = (handleSetValue, setTouched, values, newValue) => () => {\r\n        handleSetValue({...values, ...newValue});\r\n        setTouched(true);\r\n    };\r\n\r\n    const submit = () => {\r\n        router.push('/create_advertisement');\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Formik initialValues={initValues} validationSchema={validationSchema} onSubmit={submit}>\r\n            {(props) => {\r\n                const {\r\n                    errors,\r\n                    touched,\r\n                    values,\r\n                    setValues,\r\n                    setTouched,\r\n                    handleBlur,\r\n                    handleChange\r\n                } = props;\r\n                console.log(values)\r\n                console.log(touched)\r\n                return (\r\n                    <Form className={classes.root}>\r\n                        <div>\r\n                            {/*<Typography>{errors}</Typography>*/}\r\n                            <ButtonComponent onClick={handleMenuOpen}>{values.type.desc}</ButtonComponent>\r\n                            <CustomFormikMenu\r\n                                name={values}\r\n                                anchorEl={anchorEl}\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleMenuClose}\r\n                                setValues={setValues}\r\n                            >\r\n                                <MenuItem\r\n                                    value={1}\r\n                                    id='ad'\r\n                                    // onClick={handleClickMenuItem(setValues, setTouched, values, {\r\n                                    //     type: {\r\n                                    //         id: 1,\r\n                                    //         desc: 'Объявление'\r\n                                    //     }\r\n                                    // })}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n\r\n                                >\r\n                                    Объявление\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    value={2}\r\n                                    id='auction'\r\n                                    // onClick={handleClickMenuItem(setValues, setTouched, values, {\r\n                                    //     type: {\r\n                                    //         id: 1,\r\n                                    //         desc: 'Торг'\r\n                                    //     }\r\n                                    // })}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n\r\n                                >\r\n                                    Торг\r\n                                </MenuItem>\r\n                            </CustomFormikMenu>\r\n                        </div>\r\n                        <div>\r\n                            {/*<Typography>{errors}</Typography>*/}\r\n                            <ButtonComponent onClick={handleMenuOpen}>{values.category.desc}</ButtonComponent>\r\n                            <CustomFormikMenu\r\n                                name={values}\r\n                                anchorEl={anchorEl}\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleMenuClose}\r\n                                setValues={setValues}\r\n                            >\r\n                                <MenuItem\r\n                                    value={1}\r\n                                    onClick={handleClickMenuItem(setValues, setTouched, values, {\r\n                                        category: {\r\n                                            id: 1,\r\n                                            desc: 'Недвижимость'\r\n                                        }\r\n                                    })}\r\n                                >\r\n                                    Недвижимость\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    value={2}\r\n                                    onClick={handleClickMenuItem(setValues, setTouched, values, {\r\n                                        category: {\r\n                                            id: 1,\r\n                                            desc: 'Автомобили'\r\n                                        }\r\n                                    })}\r\n                                >\r\n                                    Автомобили\r\n                                </MenuItem>\r\n                            </CustomFormikMenu>\r\n                        </div>\r\n                        <div className='form-btns'>\r\n                            <ButtonComponent onClick={handleCloseModal}>\r\n                                <Typography>Отмена</Typography>\r\n                            </ButtonComponent>\r\n                            <ButtonComponent type='submit'>\r\n                                <Typography>Продолжить</Typography>\r\n                            </ButtonComponent>\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}