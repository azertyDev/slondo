{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Cookies from 'universal-cookie';\nimport { i18n, withTranslation } from '@root/i18n';\nimport { Container, Typography } from '@material-ui/core';\nimport TopHeaderContainer from \"./topHeader/TopHeaderContainer\";\nimport BottomHeader from './bottomHeader/BottomHeader';\nimport { ModalComponent } from '../elements/modal/Modal';\nimport { AuthRegPage } from \"./auth_reg/AuthRegPage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIsAuthAction, setIsAuthModalOpen } from '@src/redux/slices/authRegSlice';\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { fetchCategories } from \"@src/redux/slices/categoriesSlice\";\nimport { fetchLocations } from \"@src/redux/slices/locationsSlice\";\nimport { CreateAdvrt } from '@src/components/advertisement/create_advrt/CreateAdvrt'; // styles\n\nimport { useStyles } from './useStyles';\n\nconst Header = props => {\n  const {\n    t\n  } = props;\n  const cookies = new Cookies();\n  const isTokenExst = !!cookies.get('token');\n  const lang = i18n.language;\n  const {\n    isAuth,\n    error,\n    isAuthModalOpen\n  } = useSelector(store => store.auth);\n  const dispatch = useDispatch();\n  const {\n    0: isCreateAd,\n    1: setIsCreateAd\n  } = useState(false);\n\n  const handleIsOpenModal = value => () => {\n    dispatch(setIsAuthModalOpen(value));\n  };\n\n  const handleCreateAd = () => {};\n\n  useEffect(() => {\n    dispatch(fetchCategories(lang));\n    dispatch(fetchLocations(lang));\n  }, [lang]);\n  useEffect(() => {\n    isAuth && !error && handleIsOpenModal(false);\n  }, [isAuth, error]);\n  useEffect(() => {\n    dispatch(setIsAuthAction(isTokenExst));\n  }, [isTokenExst]);\n  const classes = useStyles();\n  return __jsx(\"header\", {\n    className: classes.root,\n    id: \"back-to-top-anchor\"\n  }, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, __jsx(TopHeaderContainer, {\n    t: t,\n    handleOpenModal: handleIsOpenModal(true)\n  }), __jsx(\"div\", {\n    className: classes.bottomHeader\n  }, __jsx(BottomHeader, {\n    t: t,\n    isAuth: isAuth,\n    handleOpenModal: handleIsOpenModal(true),\n    handleCreateAd: handleCreateAd\n  }))), __jsx(ModalComponent, {\n    isOpen: isAuthModalOpen,\n    handleCloseModal: handleIsOpenModal(false),\n    className: classes.modalDialog\n  }, isAuth ? isCreateAd ? __jsx(CreateAdvrt, null) : __jsx(\"div\", {\n    style: {\n      width: '200px',\n      height: '80px',\n      backgroundColor: '#fff'\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\"\n  }, \"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0441\\u0430\\u0439\\u0442\\u0430?\"), __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    }\n  }, __jsx(ButtonComponent, {\n    onClick: handleIsOpenModal(false)\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"), __jsx(ButtonComponent, null, \"\\u0412\\u044B\\u0439\\u0442\\u0438\"))) : __jsx(AuthRegPage, {\n    t: t,\n    handle: handleIsOpenModal(false)\n  })));\n};\n\nexport default withTranslation(['header', 'auth_reg', 'common'])(Header);","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/header/Header.tsx"],"names":["React","useEffect","useState","Cookies","i18n","withTranslation","Container","Typography","TopHeaderContainer","BottomHeader","ModalComponent","AuthRegPage","useDispatch","useSelector","setIsAuthAction","setIsAuthModalOpen","ButtonComponent","fetchCategories","fetchLocations","CreateAdvrt","useStyles","Header","props","t","cookies","isTokenExst","get","lang","language","isAuth","error","isAuthModalOpen","store","auth","dispatch","isCreateAd","setIsCreateAd","handleIsOpenModal","value","handleCreateAd","classes","root","bottomHeader","modalDialog","width","height","backgroundColor","display"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport {i18n, withTranslation} from '@root/i18n';\r\nimport {Container, Typography} from '@material-ui/core';\r\nimport TopHeaderContainer from \"./topHeader/TopHeaderContainer\";\r\nimport BottomHeader from './bottomHeader/BottomHeader';\r\nimport {ModalComponent} from '../elements/modal/Modal';\r\nimport {AuthRegPage} from \"./auth_reg/AuthRegPage\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setIsAuthAction, setIsAuthModalOpen} from '@src/redux/slices/authRegSlice';\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport {fetchCategories} from \"@src/redux/slices/categoriesSlice\";\r\nimport {fetchLocations} from \"@src/redux/slices/locationsSlice\";\r\nimport {CreateAdvrt} from '@src/components/advertisement/create_advrt/CreateAdvrt';\r\n// styles\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nconst Header = (props) => {\r\n    const {t} = props;\r\n\r\n    const cookies = new Cookies();\r\n    const isTokenExst = !!cookies.get('token');\r\n\r\n    const lang = i18n.language;\r\n\r\n    const {isAuth, error, isAuthModalOpen} = useSelector((store: RootState) => store.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const [isCreateAd, setIsCreateAd] = useState(false);\r\n\r\n    const handleIsOpenModal = (value) => () => {\r\n        dispatch(setIsAuthModalOpen(value));\r\n    };\r\n\r\n    const handleCreateAd = () => {\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCategories(lang));\r\n        dispatch(fetchLocations(lang));\r\n    }, [lang]);\r\n\r\n    useEffect(() => {\r\n        isAuth && !error && handleIsOpenModal(false);\r\n    }, [isAuth, error]);\r\n\r\n    useEffect(() => {\r\n        dispatch(setIsAuthAction(isTokenExst));\r\n    }, [isTokenExst]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <header className={classes.root} id='back-to-top-anchor'>\r\n            <Container maxWidth=\"lg\">\r\n                <TopHeaderContainer t={t} handleOpenModal={handleIsOpenModal(true)}/>\r\n                <div className={classes.bottomHeader}>\r\n                    <BottomHeader\r\n                        t={t}\r\n                        isAuth={isAuth}\r\n                        handleOpenModal={handleIsOpenModal(true)}\r\n                        handleCreateAd={handleCreateAd}\r\n                    />\r\n                </div>\r\n            </Container>\r\n            <ModalComponent\r\n                isOpen={isAuthModalOpen}\r\n                handleCloseModal={handleIsOpenModal(false)}\r\n                className={classes.modalDialog}\r\n            >\r\n                {\r\n                    isAuth\r\n                        ? (\r\n                            isCreateAd\r\n                                ? (\r\n                                    <CreateAdvrt />\r\n                                )\r\n                                : (\r\n                                    <div style={{width: '200px', height: '80px', backgroundColor: '#fff'}}>\r\n                                        <Typography variant='h5'>Выйти из сайта?</Typography>\r\n                                        <div style={{display: 'flex'}}>\r\n                                            <ButtonComponent onClick={handleIsOpenModal(false)}>Отмена</ButtonComponent>\r\n                                            <ButtonComponent>Выйти</ButtonComponent>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                        )\r\n                        : (\r\n                            <AuthRegPage\r\n                                t={t}\r\n                                handle={handleIsOpenModal(false)}\r\n                            />\r\n                        )\r\n                }\r\n            </ModalComponent>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default withTranslation(['header', 'auth_reg', 'common'])(Header);\r\n"]},"metadata":{},"sourceType":"module"}