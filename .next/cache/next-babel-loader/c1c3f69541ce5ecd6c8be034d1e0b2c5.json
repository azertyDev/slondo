{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { userAPI } from '@src/api/api';\nimport { i18n } from '@root/i18n';\nimport { useRouter } from 'next/router';\nvar initValues = {\n  id: null,\n  name: ''\n};\nvar initialAdData = {\n  isFetch: false,\n  error: null,\n  data: {\n    id: null,\n    title: '',\n    currency: initValues,\n    condition: initValues,\n    created_at: null,\n    expiration_at: null,\n    number_of_views: null,\n    images: [],\n    description: '',\n    region: initValues,\n    city: initValues,\n    district: initValues,\n    ads_type: {\n      id: null,\n      name: '',\n      mark: ''\n    },\n    parent: {\n      id: null,\n      name: '',\n      mark: ''\n    },\n    child: {\n      id: null,\n      name: '',\n      mark: ''\n    },\n    auction: {\n      duration: '',\n      display_phone: '',\n      reserve_price: '',\n      price_by_now: ''\n    }\n  }\n};\nexport var ShowAdvrtLotContainer = function ShowAdvrtLotContainer(_ref) {\n  _s();\n\n  var t = _ref.t;\n\n  var _useState = useState(initialAdData),\n      adData = _useState[0],\n      setAdData = _useState[1];\n\n  var _useState2 = useState({}),\n      parameters = _useState2[0],\n      setParameters = _useState2[1];\n\n  var _ref2 = useRouter().query.adUrl,\n      _ref3 = _slicedToArray(_ref2, 1),\n      adUrl = _ref3[0];\n\n  var splitedUrl = adUrl.split('-');\n  var lang = i18n.language;\n  console.log(splitedUrl);\n\n  var fetchAdData = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$userAPI$getAdd, title, currency, condition, images, description, region, city, district, otherData;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setAdData(_objectSpread(_objectSpread({}, adData), {}, {\n                isFetch: true\n              }));\n              _context.next = 4;\n              return userAPI.getAddById('1', lang);\n\n            case 4:\n              _yield$userAPI$getAdd = _context.sent;\n              title = _yield$userAPI$getAdd.title;\n              currency = _yield$userAPI$getAdd.currency;\n              condition = _yield$userAPI$getAdd.condition;\n              images = _yield$userAPI$getAdd.images;\n              description = _yield$userAPI$getAdd.description;\n              region = _yield$userAPI$getAdd.region;\n              city = _yield$userAPI$getAdd.city;\n              district = _yield$userAPI$getAdd.district;\n              otherData = _objectWithoutProperties(_yield$userAPI$getAdd, [\"title\", \"currency\", \"condition\", \"images\", \"description\", \"region\", \"city\", \"district\"]);\n              setAdData(_objectSpread(_objectSpread({}, adData), {}, {\n                isFetch: false\n              }));\n              setParameters(_objectSpread({}, otherData[otherData.parent.mark]));\n              setAdData(_objectSpread(_objectSpread({}, adData), {}, {\n                data: _objectSpread({\n                  title: title,\n                  images: images,\n                  description: description,\n                  currency: currency !== null && currency !== void 0 ? currency : initValues,\n                  condition: condition !== null && condition !== void 0 ? condition : initValues,\n                  region: region !== null && region !== void 0 ? region : initValues,\n                  city: city !== null && city !== void 0 ? city : initValues,\n                  district: district !== null && district !== void 0 ? district : initValues\n                }, otherData)\n              }));\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n              setAdData(_objectSpread(_objectSpread({}, adData), {}, {\n                error: _context.t0.message\n              }));\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 19]]);\n    }));\n\n    return function fetchAdData() {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // useEffect(() => {\n  //     fetchAdData();\n  // }, []);\n\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", null, \"Hi\"));\n};\n\n_s(ShowAdvrtLotContainer, \"WSmRNowIeUVhfmahUUNdUS/Nvew=\", false, function () {\n  return [useRouter];\n});\n\n_c = ShowAdvrtLotContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowAdvrtLotContainer\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/show_advrt_lot/ShowAdvrtLotContainer.tsx"],"names":["React","useState","userAPI","i18n","useRouter","initValues","id","name","initialAdData","isFetch","error","data","title","currency","condition","created_at","expiration_at","number_of_views","images","description","region","city","district","ads_type","mark","parent","child","auction","duration","display_phone","reserve_price","price_by_now","ShowAdvrtLotContainer","t","adData","setAdData","parameters","setParameters","query","adUrl","splitedUrl","split","lang","language","console","log","fetchAdData","getAddById","otherData","message"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {userAPI} from '@src/api/api';\r\nimport {i18n} from '@root/i18n';\r\nimport {useRouter} from 'next/router';\r\nimport {ShowAdvrtLot} from '@src/components/advertisement/show_advrt_lot/ShowAdvrtLot';\r\n\r\n\r\nconst initValues = {id: null, name: ''};\r\n\r\nconst initialAdData = {\r\n    isFetch: false,\r\n    error: null,\r\n    data: {\r\n        id: null,\r\n        title: '',\r\n        currency: initValues,\r\n        condition: initValues,\r\n        created_at: null,\r\n        expiration_at: null,\r\n        number_of_views: null,\r\n        images: [],\r\n        description: '',\r\n        region: initValues,\r\n        city: initValues,\r\n        district: initValues,\r\n        ads_type: {\r\n            id: null,\r\n            name: '',\r\n            mark: '',\r\n        },\r\n        parent: {\r\n            id: null,\r\n            name: '',\r\n            mark: '',\r\n        },\r\n        child: {\r\n            id: null,\r\n            name: '',\r\n            mark: '',\r\n        },\r\n        auction: {\r\n            duration: '',\r\n            display_phone: '',\r\n            reserve_price: '',\r\n            price_by_now: '',\r\n        },\r\n    },\r\n};\r\n\r\nexport const ShowAdvrtLotContainer = ({t}) => {\r\n    const [adData, setAdData] = useState(initialAdData);\r\n    const [parameters, setParameters] = useState({});\r\n\r\n    const [adUrl] = useRouter().query.adUrl as string[];\r\n    const splitedUrl = adUrl.split('-');\r\n\r\n    const lang = i18n.language;\r\n    console.log(splitedUrl)\r\n    const fetchAdData = async () => {\r\n        try {\r\n            setAdData({\r\n                ...adData,\r\n                isFetch: true,\r\n            });\r\n\r\n            const {\r\n                title,\r\n                currency,\r\n                condition,\r\n                images,\r\n                description,\r\n                region,\r\n                city,\r\n                district,\r\n                ...otherData\r\n            } = await userAPI.getAddById('1', lang);\r\n\r\n            setAdData({\r\n                ...adData,\r\n                isFetch: false,\r\n            });\r\n\r\n            setParameters({\r\n                ...otherData[otherData.parent.mark],\r\n            });\r\n\r\n            setAdData({\r\n                ...adData,\r\n                data: {\r\n                    title,\r\n                    images,\r\n                    description,\r\n                    currency: currency ?? initValues,\r\n                    condition: condition ?? initValues,\r\n                    region: region ?? initValues,\r\n                    city: city ?? initValues,\r\n                    district: district ?? initValues,\r\n                    ...otherData,\r\n                },\r\n            });\r\n        } catch (e) {\r\n            setAdData({\r\n                ...adData,\r\n                error: e.message,\r\n            });\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     fetchAdData();\r\n    // }, []);\r\n\r\n    return (\r\n        <>\r\n            {/*<ShowAdvrtLot adData={adData} t={t} parameters={parameters}/>*/}\r\n            <h2>Hi</h2>\r\n        </>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}