{"ast":null,"code":"import * as yup from \"yup\";\nvar requiredList = {\n  drive: true,\n  seats: true\n};\n\nvar lazyFunc = function lazyFunc(value) {\n  if (value !== undefined) {\n    console.log(value);\n    return yup.object().shape(requiredFieldsGenerator(value));\n  }\n\n  function requiredFieldsGenerator(value) {\n    var fields = {};\n    Object.keys(value).forEach(function (key) {\n      if (requiredList[key]) {\n        fields[key] = yup.object({\n          id: yup.number().nullable(false).required('Обязательный параметр')\n        });\n      }\n    });\n    return fields;\n  }\n\n  return yup.mixed().notRequired();\n};\n\nexport var createAdvrtSchema = yup.object({\n  // title: yup.string().required('Обязательное поле!'),\n  // location: yup.string().required('Обязательное поле!'),\n  // files: yup.array().required('Загрузите фотографии!'),\n  // description: yup.string().required('Обязательное поле!'),\n  // phone: yup.string().required('Обязательное поле!'),\n  adsParams: yup.lazy(lazyFunc)\n});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/validation_schemas/createAdvrtSchema.ts"],"names":["yup","requiredList","drive","seats","lazyFunc","value","undefined","console","log","object","shape","requiredFieldsGenerator","fields","Object","keys","forEach","key","id","number","nullable","required","mixed","notRequired","createAdvrtSchema","adsParams","lazy"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAExB,MAAIA,KAAK,KAAKC,SAAd,EAAyB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,WAAOL,GAAG,CAACS,MAAJ,GAAaC,KAAb,CACHC,uBAAuB,CAACN,KAAD,CADpB,CAAP;AAGH;;AAED,WAASM,uBAAT,CAAiCN,KAAjC,EAAwC;AACpC,QAAMO,MAAM,GAAG,EAAf;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYT,KAAZ,EAAmBU,OAAnB,CAA2B,UAAAC,GAAG,EAAI;AAC9B,UAAIf,YAAY,CAACe,GAAD,CAAhB,EAAuB;AACnBJ,QAAAA,MAAM,CAACI,GAAD,CAAN,GAAchB,GAAG,CAACS,MAAJ,CAAW;AAACQ,UAAAA,EAAE,EAAEjB,GAAG,CAACkB,MAAJ,GAAaC,QAAb,CAAsB,KAAtB,EAA6BC,QAA7B,CAAsC,uBAAtC;AAAL,SAAX,CAAd;AACH;AACJ,KAJD;AAMA,WAAOR,MAAP;AACH;;AAED,SAAOZ,GAAG,CAACqB,KAAJ,GAAYC,WAAZ,EAAP;AACH,CAtBD;;AAwBA,OAAO,IAAMC,iBAAiB,GAAGvB,GAAG,CAACS,MAAJ,CAAW;AACxC;AACA;AACA;AACA;AACA;AACAe,EAAAA,SAAS,EAAExB,GAAG,CAACyB,IAAJ,CAASrB,QAAT;AAN6B,CAAX,CAA1B","sourcesContent":["import * as yup from \"yup\";\r\n\r\n\r\nconst requiredList = {\r\n    drive: true,\r\n    seats: true\r\n};\r\n\r\nconst lazyFunc = (value) => {\r\n\r\n    if (value !== undefined) {\r\n        console.log(value)\r\n        return yup.object().shape(\r\n            requiredFieldsGenerator(value)\r\n        );\r\n    }\r\n\r\n    function requiredFieldsGenerator(value) {\r\n        const fields = {};\r\n\r\n        Object.keys(value).forEach(key => {\r\n            if (requiredList[key]) {\r\n                fields[key] = yup.object({id: yup.number().nullable(false).required('Обязательный параметр')});\r\n            }\r\n        })\r\n\r\n        return fields;\r\n    }\r\n\r\n    return yup.mixed().notRequired();\r\n};\r\n\r\nexport const createAdvrtSchema = yup.object({\r\n    // title: yup.string().required('Обязательное поле!'),\r\n    // location: yup.string().required('Обязательное поле!'),\r\n    // files: yup.array().required('Загрузите фотографии!'),\r\n    // description: yup.string().required('Обязательное поле!'),\r\n    // phone: yup.string().required('Обязательное поле!'),\r\n    adsParams: yup.lazy(lazyFunc)\r\n});"]},"metadata":{},"sourceType":"module"}