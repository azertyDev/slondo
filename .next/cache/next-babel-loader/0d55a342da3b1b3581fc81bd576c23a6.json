{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as yup from \"yup\";\nexport var requiredFields = {\n  mileage: true,\n  body: true,\n  year: true,\n  car_engine_type: true\n};\nvar requiredMsg = 'Обязательное поле!';\n\nvar lazyFunc = function lazyFunc(value) {\n  console.log(value);\n\n  if (requiredFields[value]) {\n    return yup.object().shape(_defineProperty({}, value, yup.string().required()));\n  }\n\n  return yup.mixed().notRequired();\n};\n\nexport var createAdvrtSchema = yup.object({\n  // adType: yup.object({\n  //     id: yup.number().nullable().required(requiredMsg)\n  // }),\n  // category: yup.object({\n  //     id: yup.number().nullable().required(requiredMsg)\n  // }),\n  // title: yup.string().required(requiredMsg),\n  location: yup.object({\n    city_id: yup.number().required(requiredMsg)\n  }).nullable().required(requiredMsg),\n  // files: yup.array().required(requiredMsg),\n  // description: yup.string().required(requiredMsg),\n  // phone: yup.string().required(requiredMsg),\n  adParams: yup.lazy(lazyFunc)\n});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/validation_schemas/createAdvrtSchema.ts"],"names":["yup","requiredFields","mileage","body","year","car_engine_type","requiredMsg","lazyFunc","value","console","log","object","shape","string","required","mixed","notRequired","createAdvrtSchema","location","city_id","number","nullable","adParams","lazy"],"mappings":";AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGA,OAAO,IAAMC,cAAc,GAAG;AAC1BC,EAAAA,OAAO,EAAE,IADiB;AAE1BC,EAAAA,IAAI,EAAE,IAFoB;AAG1BC,EAAAA,IAAI,EAAE,IAHoB;AAI1BC,EAAAA,eAAe,EAAE;AAJS,CAAvB;AAOP,IAAMC,WAAW,GAAG,oBAApB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmB;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,MAAIP,cAAc,CAACO,KAAD,CAAlB,EAA2B;AACvB,WAAOR,GAAG,CAACW,MAAJ,GAAaC,KAAb,qBACFJ,KADE,EACMR,GAAG,CAACa,MAAJ,GAAaC,QAAb,EADN,EAAP;AAGH;;AACD,SAAOd,GAAG,CAACe,KAAJ,GAAYC,WAAZ,EAAP;AACH,CARD;;AAUA,OAAO,IAAMC,iBAAiB,GAAGjB,GAAG,CAACW,MAAJ,CAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACAO,EAAAA,QAAQ,EAAElB,GAAG,CAACW,MAAJ,CAAW;AACjBQ,IAAAA,OAAO,EAAEnB,GAAG,CAACoB,MAAJ,GAAaN,QAAb,CAAsBR,WAAtB;AADQ,GAAX,EAEPe,QAFO,GAEIP,QAFJ,CAEaR,WAFb,CAR8B;AAWxC;AACA;AACA;AACAgB,EAAAA,QAAQ,EAAEtB,GAAG,CAACuB,IAAJ,CAAShB,QAAT;AAd8B,CAAX,CAA1B","sourcesContent":["import * as yup from \"yup\";\r\n\r\n\r\nexport const requiredFields = {\r\n    mileage: true,\r\n    body: true,\r\n    year: true,\r\n    car_engine_type: true,\r\n};\r\n\r\nconst requiredMsg = 'Обязательное поле!';\r\n\r\nconst lazyFunc = (value: string) => {\r\n    console.log(value)\r\n    if (requiredFields[value]) {\r\n        return yup.object().shape({\r\n            [value]: yup.string().required()\r\n        });\r\n    }\r\n    return yup.mixed().notRequired();\r\n};\r\n\r\nexport const createAdvrtSchema = yup.object({\r\n    // adType: yup.object({\r\n    //     id: yup.number().nullable().required(requiredMsg)\r\n    // }),\r\n    // category: yup.object({\r\n    //     id: yup.number().nullable().required(requiredMsg)\r\n    // }),\r\n    // title: yup.string().required(requiredMsg),\r\n    location: yup.object({\r\n        city_id: yup.number().required(requiredMsg),\r\n    }).nullable().required(requiredMsg),\r\n    // files: yup.array().required(requiredMsg),\r\n    // description: yup.string().required(requiredMsg),\r\n    // phone: yup.string().required(requiredMsg),\r\n    adParams: yup.lazy(lazyFunc)\r\n});"]},"metadata":{},"sourceType":"module"}