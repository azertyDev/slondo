{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { CustomFormikField } from \"@src/components/elements/custom_formik_field/CustomFormikField\";\nimport { isRequired } from '@root/validation_schemas/createAdvrtSchema';\nimport { AdvrtParams } from './AdvrtParams';\nimport { useStyles } from './useStyles';\nimport { dataPrepare } from \"@src/components/advertisement/create_advrt/advrt_form/advrt_params/helpers\";\nexport const AdvrtParamsContainer = props => {\n  const {\n    isPreview,\n    createAdvrt,\n    values,\n    errors,\n    touched,\n    handleParamsInput\n  } = props;\n  const {\n    subCategory\n  } = createAdvrt;\n  const {\n    adParams\n  } = values;\n  const data = isPreview ? adParams : dataPrepare(subCategory.data, adParams);\n  const classes = useStyles({\n    isPreview\n  });\n  return __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.root\n  }, Object.keys(data).map(key => {\n    var _adParams$year, _adParams$mileage;\n\n    return __jsx(Fragment, {\n      key: key\n    }, __jsx(AdvrtParams, _extends({}, props, {\n      list: {\n        data: data[key],\n        key\n      }\n    })), key === 'body' && __jsx(React.Fragment, null, __jsx(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      sm: 6,\n      className: classes.gridItem\n    }, __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, __jsx(\"strong\", null, \"year\", isRequired(key) && __jsx(\"span\", {\n      className: \"error-text\"\n    }, \"*\")), errors.adParams && errors.adParams.year && touched.year && __jsx(\"span\", {\n      className: \"error-text\"\n    }, \" \", errors.adParams.year)), isPreview ? __jsx(Typography, null, adParams.year) : __jsx(CustomFormikField, {\n      className: errors.adParams && errors.adParams.year && touched.year ? 'error-border' : '',\n      name: \"year\",\n      placeholder: \"\\u0413\\u043E\\u0434 \\u0432\\u044B\\u043F\\u0443\\u0441\\u043A\\u0430\",\n      value: (_adParams$year = adParams.year) !== null && _adParams$year !== void 0 ? _adParams$year : '',\n      onChange: handleParamsInput('year')\n    })), __jsx(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      sm: 6,\n      className: classes.gridItem\n    }, __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, __jsx(\"strong\", null, \"mileage\", isRequired(key) && __jsx(\"span\", {\n      className: \"error-text\"\n    }, \"*\")), errors.adParams && errors.adParams.mileage && touched.mileage && __jsx(\"span\", {\n      className: \"error-text\"\n    }, \" \", errors.adParams.mileage)), isPreview ? __jsx(Typography, null, adParams.mileage) : __jsx(CustomFormikField, {\n      className: errors.adParams && errors.adParams.mileage && touched.mileage ? 'error-border' : '',\n      name: \"mileage\",\n      placeholder: \"\\u041F\\u0440\\u043E\\u0431\\u0435\\u0433\",\n      value: (_adParams$mileage = adParams.mileage) !== null && _adParams$mileage !== void 0 ? _adParams$mileage : '',\n      onChange: handleParamsInput('mileage')\n    }))));\n  }));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/advrt_form/advrt_params/AdvrtParamsContainer.tsx"],"names":["React","Fragment","Grid","Typography","CustomFormikField","isRequired","AdvrtParams","useStyles","dataPrepare","AdvrtParamsContainer","props","isPreview","createAdvrt","values","errors","touched","handleParamsInput","subCategory","adParams","data","classes","root","Object","keys","map","key","gridItem","year","mileage"],"mappings":"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","sourcesContent":["import React, {FC, Fragment} from \"react\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport {CustomFormikField} from \"@src/components/elements/custom_formik_field/CustomFormikField\";\r\nimport {isRequired} from '@root/validation_schemas/createAdvrtSchema';\r\nimport {AdvrtParams} from './AdvrtParams';\r\nimport {useStyles} from './useStyles';\r\nimport {dataPrepare} from \"@src/components/advertisement/create_advrt/advrt_form/advrt_params/helpers\";\r\n\r\n\r\nexport const AdvrtParamsContainer: FC<any> = (props) => {\r\n    const {\r\n        isPreview,\r\n        createAdvrt,\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleParamsInput,\r\n    } = props;\r\n\r\n\r\n    const {subCategory} = createAdvrt;\r\n\r\n    const {adParams} = values;\r\n\r\n    const data = isPreview ? adParams : dataPrepare(subCategory.data, adParams);\r\n\r\n    const classes = useStyles({isPreview});\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={1}\r\n            className={classes.root}\r\n        >\r\n            {\r\n                Object.keys(data).map(key => {\r\n                    return (\r\n                        <Fragment key={key}>\r\n                            <AdvrtParams {...props} list={{data: data[key], key}}/>\r\n                            {\r\n                                key === 'body' && (\r\n                                    <>\r\n                                        <Grid\r\n                                            item\r\n                                            container\r\n                                            xs={12}\r\n                                            sm={6}\r\n                                            className={classes.gridItem}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\">\r\n                                                <strong>\r\n                                                    year\r\n                                                    {\r\n                                                        isRequired(key)\r\n                                                        && <span className='error-text'>*</span>\r\n                                                    }\r\n                                                </strong>\r\n                                                {\r\n                                                    errors.adParams\r\n                                                    && errors.adParams.year\r\n                                                    && touched.year\r\n                                                    && <span className='error-text'> {errors.adParams.year}</span>\r\n                                                }\r\n                                            </Typography>\r\n                                            {\r\n                                                isPreview\r\n                                                    ? <Typography>{adParams.year}</Typography>\r\n                                                    : <CustomFormikField\r\n                                                        className={\r\n                                                            errors.adParams\r\n                                                            && errors.adParams.year\r\n                                                            && touched.year ? 'error-border' : ''\r\n                                                        }\r\n                                                        name='year'\r\n                                                        placeholder='Год выпуска'\r\n                                                        value={adParams.year ?? ''}\r\n                                                        onChange={handleParamsInput('year')}\r\n                                                    />\r\n                                            }\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            container\r\n                                            xs={12}\r\n                                            sm={6}\r\n                                            className={classes.gridItem}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\">\r\n                                                <strong>\r\n                                                    mileage\r\n                                                    {\r\n                                                        isRequired(key)\r\n                                                        && <span className='error-text'>*</span>\r\n                                                    }\r\n                                                </strong>\r\n                                                {\r\n                                                    errors.adParams\r\n                                                    && errors.adParams.mileage\r\n                                                    && touched.mileage\r\n                                                    && <span className='error-text'> {errors.adParams.mileage}</span>\r\n                                                }\r\n                                            </Typography>\r\n                                            {\r\n                                                isPreview\r\n                                                    ? <Typography>{adParams.mileage}</Typography>\r\n                                                    : <CustomFormikField\r\n                                                        className={\r\n                                                            errors.adParams\r\n                                                            && errors.adParams.mileage\r\n                                                            && touched.mileage ? 'error-border' : ''\r\n                                                        }\r\n                                                        name='mileage'\r\n                                                        placeholder='Пробег'\r\n                                                        value={adParams.mileage ?? ''}\r\n                                                        onChange={handleParamsInput('mileage')}\r\n                                                    />\r\n                                            }\r\n                                        </Grid>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        </Fragment>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}