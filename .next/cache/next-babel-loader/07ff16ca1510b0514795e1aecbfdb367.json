{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { userApi } from '../../api/api';\nimport { authErrorAction } from './errorsActions';\nexport var selfDataActionTypes = {\n  GET_SELF_DATA: 'GET_SELF_DATA'\n};\nexport var login = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(phone, password) {\n    var _yield$userApi$login, userInfo;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return userApi.login(phone, password);\n\n          case 3:\n            _yield$userApi$login = _context.sent;\n            userInfo = _yield$userApi$login.userInfo;\n            return _context.abrupt(\"return\", {\n              type: selfDataActionTypes.GET_SELF_DATA,\n              payload: {\n                isFetch: false,\n                selfData: userInfo\n              }\n            });\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            authErrorAction(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/actions/selfDataActions.ts"],"names":["userApi","authErrorAction","selfDataActionTypes","GET_SELF_DATA","login","phone","password","userInfo","type","payload","isFetch","selfData"],"mappings":";;AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,SAAQC,eAAR,QAA8B,iBAA9B;AAEA,OAAO,IAAMC,mBAAmB,GAAG;AAC/BC,EAAAA,aAAa,EAAE;AADgB,CAA5B;AAIP,OAAO,IAAMC,KAAK;AAAA,sEAAG,iBAAOC,KAAP,EAAcC,QAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEYN,OAAO,CAACI,KAAR,CAAcC,KAAd,EAAqBC,QAArB,CAFZ;;AAAA;AAAA;AAENC,YAAAA,QAFM,wBAENA,QAFM;AAAA,6CAGN;AACHC,cAAAA,IAAI,EAAEN,mBAAmB,CAACC,aADvB;AAEHM,cAAAA,OAAO,EAAE;AACLC,gBAAAA,OAAO,EAAE,KADJ;AAELC,gBAAAA,QAAQ,EAAEJ;AAFL;AAFN,aAHM;;AAAA;AAAA;AAAA;AAWbN,YAAAA,eAAe,aAAf;;AAXa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALG,KAAK;AAAA;AAAA;AAAA,GAAX","sourcesContent":["import {userApi} from '../../api/api'\r\nimport {authErrorAction} from './errorsActions'\r\n\r\nexport const selfDataActionTypes = {\r\n    GET_SELF_DATA: 'GET_SELF_DATA'\r\n};\r\n\r\nexport const login = async (phone, password) => {\r\n    try {\r\n        const {userInfo} = await userApi.login(phone, password);\r\n        return {\r\n            type: selfDataActionTypes.GET_SELF_DATA,\r\n            payload: {\r\n                isFetch: false,\r\n                selfData: userInfo\r\n            }\r\n        }\r\n    } catch (e) {\r\n        authErrorAction(e)\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}