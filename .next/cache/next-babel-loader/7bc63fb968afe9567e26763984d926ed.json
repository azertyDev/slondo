{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { CustomFormikField } from \"@src/components/elements/custom_formik_field/CustomFormikField\";\nconst top100Films = [{\n  id: 11,\n  name: \"Ташкентская область\",\n  cities: [{\n    id: 150,\n    name: \"Паркентский район\",\n    district: []\n  }, {\n    id: 151,\n    name: \"Пскентский район\",\n    district: []\n  }, {\n    id: 152,\n    name: \"Город Ташкент\",\n    district: [{\n      id: 1,\n      city_id: 152,\n      name: \"Бектемирский район\"\n    }, {\n      id: 2,\n      city_id: 152,\n      name: \"Мирзо-Улугбекский район\"\n    }, {\n      id: 3,\n      city_id: 152,\n      name: \"Мирабадский район\"\n    }]\n  }, {\n    id: 153,\n    name: \"Уртачирчикский район\",\n    district: []\n  }, {\n    id: 154,\n    name: \"Чиназский район\",\n    district: []\n  }]\n}, {\n  id: 12,\n  name: \"Ферганская область\",\n  cities: [{\n    id: 158,\n    name: 'Бешарыкский район',\n    district: []\n  }, {\n    id: 159,\n    name: 'Багдадский район',\n    district: []\n  }, {\n    id: 160,\n    name: 'Бувайдинский район',\n    district: []\n  }, {\n    id: 161,\n    name: 'Дангаринский район',\n    district: [{\n      id: 3,\n      city_id: 152,\n      name: \"Юнусабадский район\"\n    }]\n  }]\n}];\n\nconst option = ({\n  area,\n  city,\n  district\n}) => {\n  return `${district ? `${district}, ` : ''}${city}, ${area}`;\n};\n\nconst groupByFunc = ({\n  district,\n  city,\n  area\n}) => {\n  return area;\n};\n\nconst formattedData = top100Films.reduce((acc, row) => {\n  row.cities.forEach(city => {\n    if (city.district.length) {\n      city.district.forEach(dis => {\n        acc = [...acc, {\n          area: row.name,\n          city: city.name,\n          district: dis.name\n        }];\n      });\n    } else {\n      acc = [...acc, {\n        area: row.name,\n        city: city.name\n      }];\n    }\n  });\n  return acc;\n}, []);\nexport const CustomAutocomplete = props => {\n  return __jsx(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: formattedData,\n    getOptionLabel: option,\n    groupBy: groupByFunc,\n    style: {\n      width: 300\n    },\n    renderInput: params => __jsx(CustomFormikField, _extends({}, params, props))\n  });\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/custom_autocomplete/CustomAutocomplete.tsx"],"names":["React","Autocomplete","CustomFormikField","top100Films","id","name","cities","district","city_id","option","area","city","groupByFunc","formattedData","reduce","acc","row","forEach","length","dis","CustomAutocomplete","props","width","params"],"mappings":"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","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport {CustomFormikField} from \"@src/components/elements/custom_formik_field/CustomFormikField\";\r\n\r\n\r\nconst top100Films = [\r\n    {\r\n        id: 11,\r\n        name: \"Ташкентская область\",\r\n        cities: [\r\n            {\r\n                id: 150,\r\n                name: \"Паркентский район\",\r\n                district: []\r\n            },\r\n            {\r\n                id: 151,\r\n                name: \"Пскентский район\",\r\n                district: []\r\n            },\r\n            {\r\n                id: 152,\r\n                name: \"Город Ташкент\",\r\n                district: [\r\n                    {\r\n                        id: 1,\r\n                        city_id: 152,\r\n                        name: \"Бектемирский район\"\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        city_id: 152,\r\n                        name: \"Мирзо-Улугбекский район\"\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        city_id: 152,\r\n                        name: \"Мирабадский район\"\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                id: 153,\r\n                name: \"Уртачирчикский район\",\r\n                district: []\r\n            },\r\n            {\r\n                id: 154,\r\n                name: \"Чиназский район\",\r\n                district: []\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 12,\r\n        name: \"Ферганская область\",\r\n        cities: [\r\n            {\r\n                id: 158,\r\n                name: 'Бешарыкский район',\r\n                district: []\r\n            },\r\n            {\r\n                id: 159,\r\n                name: 'Багдадский район',\r\n                district: []\r\n            },\r\n            {\r\n                id: 160,\r\n                name: 'Бувайдинский район',\r\n                district: []\r\n            },\r\n            {\r\n                id: 161,\r\n                name: 'Дангаринский район',\r\n                district: [\r\n                    {\r\n                        id: 3,\r\n                        city_id: 152,\r\n                        name: \"Юнусабадский район\"\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\nconst option = ({area, city, district}) => {\r\n    return `${district ? `${district}, ` : ''}${city}, ${area}`;\r\n};\r\n\r\nconst groupByFunc = ({district, city, area}) => {\r\n    return area;\r\n};\r\n\r\nconst formattedData = top100Films.reduce((acc, row) => {\r\n    row.cities.forEach((city) => {\r\n        if (city.district.length) {\r\n            city.district.forEach((dis) => {\r\n                acc = [\r\n                    ...acc,\r\n                    {\r\n                        area: row.name,\r\n                        city: city.name,\r\n                        district: dis.name\r\n                    }\r\n                ];\r\n            });\r\n        } else {\r\n            acc = [\r\n                ...acc,\r\n                {\r\n                    area: row.name,\r\n                    city: city.name\r\n                }\r\n            ];\r\n        }\r\n    });\r\n    return acc;\r\n}, []);\r\n\r\nexport const CustomAutocomplete: FC = (props) => {\r\n\r\n    return (\r\n        <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={formattedData}\r\n            getOptionLabel={option}\r\n            groupBy={groupByFunc}\r\n            style={{width: 300}}\r\n            renderInput={(params) => (\r\n                <CustomFormikField {...params} {...props} />\r\n            )}\r\n        />\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}