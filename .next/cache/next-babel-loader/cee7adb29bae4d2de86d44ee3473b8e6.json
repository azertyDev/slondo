{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Hidden, Container, Typography } from '@material-ui/core';\nimport { userAPI } from '@src/api/api';\nimport { AdvrtForm } from './advrt_form/AdvrtForm';\nimport { SuccessAdvrt } from './success_advrt/SuccessAdvrt';\nimport { createAdvrtSchema } from \"@root/validation_schemas/createAdvrtSchema\";\nimport { useFormik, FormikProvider } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { MainLayout } from \"@src/components/MainLayout\";\nimport { useStyles } from './useStyles';\nconst initFields = {\n  title: '',\n  price: '',\n  safe_deal: false,\n  delivery: false,\n  exchange: false,\n  location: null,\n  files: [],\n  description: '',\n  phone: '',\n  avalTime: {\n    isActive: false,\n    start_time: '00:00',\n    end_time: '00:00',\n    week: [{\n      id: 1,\n      name: 'Пн'\n    }, {\n      id: 2,\n      name: 'Вт'\n    }, {\n      id: 3,\n      name: 'Ср'\n    }, {\n      id: 4,\n      name: 'Чт'\n    }, {\n      id: 5,\n      name: 'Пт'\n    }, {\n      id: 6,\n      name: 'Сб'\n    }, {\n      id: 7,\n      name: 'Вс'\n    }]\n  },\n  auction: {\n    duration_id: null,\n    offer_the_price: null,\n    auto_renewal: false,\n    display_phone: false\n  }\n};\nexport const CreateAdvrt = () => {\n  const {\n    createAdvrt,\n    locations\n  } = useSelector(store => store);\n  const {\n    0: isPreview,\n    1: setIsPreview\n  } = useState(false);\n  const {\n    0: isSuccess,\n    1: setIsSuccess\n  } = useState(false);\n\n  const prepareData = data => {\n    const form = new FormData();\n\n    const {\n      avalTime,\n      safe_deal,\n      delivery,\n      exchange,\n      location,\n      files\n    } = data,\n          otherValues = _objectWithoutProperties(data, [\"avalTime\", \"safe_deal\", \"delivery\", \"exchange\", \"location\", \"files\"]);\n\n    form.set('ads_type_id', createAdvrt.adType.id.toString());\n    form.set('safe_deal', Number(safe_deal).toString());\n    form.set('delivery', Number(delivery).toString());\n    form.set('exchange', Number(exchange).toString());\n    form.set('parent_categories_id', createAdvrt.category.id.toString());\n    files.forEach(({\n      file\n    }) => form.append('files[]', file, file.name));\n\n    if (avalTime.isActive) {\n      avalTime.week.forEach((day, i) => form.append(`week[${i}]`, day.id.toString()));\n      form.set('start_time', avalTime.start_time.toString());\n      form.set('end_time', avalTime.end_time.toString());\n    }\n\n    for (const key in location) {\n      if (typeof location[key] === 'number') {\n        form.set(key, Number(location[key]).toString());\n      }\n    }\n\n    for (let key in otherValues) {\n      const value = otherValues[key];\n\n      if (value) {\n        if (typeof value === 'string') {\n          form.set(key, value);\n        } else if (Array.isArray(value)) {\n          value.forEach((value, i) => form.append(`${key}[${i}]`, value.id));\n        } else {\n          if (value.id) {\n            switch (key) {\n              case 'models':\n                key = 'model';\n                break;\n\n              case 'colors':\n                key = 'color';\n                break;\n            }\n\n            form.set(`${key}_id`, value.id);\n          }\n        }\n      }\n    }\n\n    for (const key of form.entries()) {\n      console.log(key[0] + '-' + key[1]);\n    }\n\n    return form;\n  };\n\n  const onSubmit = async values => {\n    try {\n      if (!isPreview) {\n        setIsPreview(true);\n      } else {\n        const data = prepareData(values);\n        await userAPI.createAdvrt(data); // setIsSuccess(true);\n\n        console.log('success');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: initFields,\n    validationSchema: createAdvrtSchema,\n    onSubmit\n  });\n  const {\n    setValues,\n    values,\n    errors,\n    setErrors,\n    touched,\n    handleBlur\n  } = formik;\n\n  const handlePreview = value => () => {\n    setIsPreview(value);\n  };\n\n  const handleCheckboxChange = valName => ({\n    target\n  }) => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [valName]: target.checked\n    }));\n  };\n\n  const handleParamsCheckbox = (valueName, value) => () => {\n    if (values[valueName]) {\n      if (values[valueName].some(val => val.id === value.id)) {\n        values[valueName].map((val, index) => {\n          if (val.id === value.id) {\n            values[valueName].splice(index, 1);\n          }\n        });\n        setValues(_objectSpread({}, values));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          [valueName]: [...values[valueName], value]\n        }));\n      }\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        [valueName]: [value]\n      }));\n    }\n  };\n\n  const handleMenuItem = valueName => (newValue, setAnchor) => () => {\n    setAnchor(null);\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [valueName]: newValue\n    })); // Reset sub props in values\n\n    Object.keys(newValue).map(key => {\n      if (values[key]) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          [valueName]: newValue,\n          [key]: _objectSpread({\n            id: null,\n            name: 'Не выбрано'\n          }, newValue[key])\n        }));\n      }\n    });\n  };\n\n  const handleListItem = (valueName, value) => () => {\n    if (values[valueName] && values[valueName].id === value.id) {\n      delete values[valueName];\n      setValues(_objectSpread({}, values));\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        [valueName]: value\n      }));\n    }\n  };\n\n  const handleSwitch = (_, value) => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n        isActive: value\n      })\n    }));\n  };\n\n  const handleWeekDay = value => () => {\n    if (values.avalTime.week.some(val => val.id === value.id)) {\n      values.avalTime.week.map((val, index) => {\n        if (val.id === value.id) {\n          values.avalTime.week.splice(index, 1);\n        }\n      });\n      setValues(_objectSpread({}, values));\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n          week: [...values.avalTime.week, value]\n        })\n      }));\n    }\n  };\n\n  const handleTime = ({\n    target\n  }) => {\n    let {\n      value\n    } = target;\n    const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\n    const isValid = regEx.test(value);\n\n    if (isValid) {\n      value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n          [target.name]: value\n        })\n      }));\n    }\n  };\n\n  useEffect(() => {\n    setErrors({});\n    setValues(_objectSpread({}, initFields));\n    isPreview && setIsPreview(false);\n  }, [createAdvrt.data.id, createAdvrt.data.name]);\n  console.log(values);\n  const classes = useStyles();\n  return __jsx(MainLayout, null, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9\n  }, __jsx(FormikProvider, {\n    value: formik\n  }, __jsx(\"form\", {\n    onSubmit: formik.handleSubmit\n  }, isSuccess ? __jsx(SuccessAdvrt, null) : __jsx(AdvrtForm, {\n    locations: locations,\n    isPreview: isPreview,\n    setIsPreview: setIsPreview,\n    createAdvrt: createAdvrt,\n    errors: errors,\n    touched: touched,\n    values: values,\n    setValues: setValues,\n    handleBlur: handleBlur,\n    handleTime: handleTime,\n    handleSwitch: handleSwitch,\n    handleWeekDay: handleWeekDay,\n    handleMenuItem: handleMenuItem,\n    handleListItem: handleListItem,\n    handleParamsCheckbox: handleParamsCheckbox,\n    handleCheckboxChange: handleCheckboxChange\n  }), __jsx(\"div\", {\n    className: classes.nextButtonBlock\n  }, isPreview && __jsx(ButtonComponent, {\n    className: classes.nextButton,\n    onClick: handlePreview(false)\n  }, __jsx(Typography, null, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")), __jsx(ButtonComponent, {\n    type: \"submit\",\n    disabled: !(createAdvrt.adType.id && createAdvrt.category.id),\n    className: classes.nextButton\n  }, __jsx(Typography, null, isPreview ? 'Создать' : 'Далее')))))), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 3,\n    container: true,\n    justify: \"flex-end\",\n    className: classes.adBanner\n  }, __jsx(Grid, {\n    item: true,\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"right-banner\"\n  })))))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/CreateAdvrt.tsx"],"names":["React","useEffect","useState","Grid","Hidden","Container","Typography","userAPI","AdvrtForm","SuccessAdvrt","createAdvrtSchema","useFormik","FormikProvider","useSelector","ButtonComponent","MainLayout","useStyles","initFields","title","price","safe_deal","delivery","exchange","location","files","description","phone","avalTime","isActive","start_time","end_time","week","id","name","auction","duration_id","offer_the_price","auto_renewal","display_phone","CreateAdvrt","createAdvrt","locations","store","isPreview","setIsPreview","isSuccess","setIsSuccess","prepareData","data","form","FormData","otherValues","set","adType","toString","Number","category","forEach","file","append","day","i","key","value","Array","isArray","entries","console","log","onSubmit","values","e","formik","initialValues","validationSchema","setValues","errors","setErrors","touched","handleBlur","handlePreview","handleCheckboxChange","valName","target","checked","handleParamsCheckbox","valueName","some","val","map","index","splice","handleMenuItem","newValue","setAnchor","Object","keys","handleListItem","handleSwitch","_","handleWeekDay","handleTime","regEx","isValid","test","replace","m","classes","handleSubmit","nextButtonBlock","nextButton","adBanner"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {Grid, Hidden, Container, Typography} from '@material-ui/core';\r\nimport {userAPI} from '@src/api/api';\r\nimport {AdvrtForm} from './advrt_form/AdvrtForm';\r\nimport {SuccessAdvrt} from './success_advrt/SuccessAdvrt';\r\nimport {CreateAdFields} from \"@root/interfaces/Advertisement\";\r\nimport {createAdvrtSchema} from \"@root/validation_schemas/createAdvrtSchema\";\r\nimport {useFormik, FormikProvider} from \"formik\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport {MainLayout} from \"@src/components/MainLayout\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nconst initFields: CreateAdFields = {\r\n    title: '',\r\n    price: '',\r\n    safe_deal: false,\r\n    delivery: false,\r\n    exchange: false,\r\n    location: null,\r\n    files: [],\r\n    description: '',\r\n    phone: '',\r\n    avalTime: {\r\n        isActive: false,\r\n        start_time: '00:00',\r\n        end_time: '00:00',\r\n        week: [\r\n            {id: 1, name: 'Пн'},\r\n            {id: 2, name: 'Вт'},\r\n            {id: 3, name: 'Ср'},\r\n            {id: 4, name: 'Чт'},\r\n            {id: 5, name: 'Пт'},\r\n            {id: 6, name: 'Сб'},\r\n            {id: 7, name: 'Вс'}\r\n        ],\r\n    },\r\n    auction: {\r\n        duration_id: null,\r\n        offer_the_price: null,\r\n        auto_renewal: false,\r\n        display_phone: false,\r\n        \r\n    }\r\n};\r\n\r\nexport const CreateAdvrt: FC<void> = () => {\r\n    const {createAdvrt, locations} = useSelector((store: RootState) => store);\r\n\r\n    const [isPreview, setIsPreview] = useState(false);\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n    const prepareData = (data: CreateAdFields) => {\r\n        const form = new FormData();\r\n        const {\r\n            avalTime,\r\n            safe_deal,\r\n            delivery,\r\n            exchange,\r\n            location,\r\n            files,\r\n            ...otherValues\r\n        } = data;\r\n\r\n        form.set('ads_type_id', createAdvrt.adType.id.toString());\r\n        form.set('safe_deal', Number(safe_deal).toString());\r\n        form.set('delivery', Number(delivery).toString());\r\n        form.set('exchange', Number(exchange).toString());\r\n        form.set('parent_categories_id', createAdvrt.category.id.toString());\r\n\r\n        files.forEach(({file}: any) => (\r\n            form.append('files[]', file, file.name))\r\n        );\r\n\r\n        if (avalTime.isActive) {\r\n            avalTime.week.forEach((day, i) => (\r\n                form.append(`week[${i}]`, day.id.toString())\r\n            ));\r\n            form.set('start_time', avalTime.start_time.toString());\r\n            form.set('end_time', avalTime.end_time.toString());\r\n        }\r\n\r\n        for (const key in location) {\r\n            if (typeof location[key] === 'number') {\r\n                form.set(key, Number(location[key]).toString());\r\n            }\r\n        }\r\n\r\n        for (let key in otherValues) {\r\n            const value = otherValues[key];\r\n            if (value) {\r\n                if (typeof value === 'string') {\r\n                    form.set(key, value);\r\n                } else if (Array.isArray(value)) {\r\n                    value.forEach((value, i) => (\r\n                        form.append(`${key}[${i}]`, value.id))\r\n                    )\r\n                } else {\r\n                    if (value.id) {\r\n                        switch (key) {\r\n                            case 'models' :\r\n                                key = 'model'\r\n                                break;\r\n                            case 'colors' :\r\n                                key = 'color'\r\n                                break;\r\n                        }\r\n                        form.set(`${key}_id`, value.id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const key of form.entries()) {\r\n            console.log(key[0] + '-' + key[1]);\r\n        }\r\n\r\n        return form;\r\n    };\r\n\r\n    const onSubmit = async (values: CreateAdFields) => {\r\n        try {\r\n            if (!isPreview) {\r\n                setIsPreview(true);\r\n            } else {\r\n                const data = prepareData(values);\r\n                await userAPI.createAdvrt(data);\r\n                // setIsSuccess(true);\r\n                console.log('success');\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initFields,\r\n        validationSchema: createAdvrtSchema,\r\n        onSubmit\r\n    });\r\n\r\n    const {\r\n        setValues,\r\n        values,\r\n        errors,\r\n        setErrors,\r\n        touched,\r\n        handleBlur,\r\n    } = formik;\r\n\r\n    const handlePreview = (value) => () => {\r\n        setIsPreview(value);\r\n    };\r\n\r\n    const handleCheckboxChange = (valName) => ({target}) => {\r\n        setValues({...values, [valName]: target.checked});\r\n    };\r\n\r\n    const handleParamsCheckbox = (valueName, value) => () => {\r\n        if (values[valueName]) {\r\n            if (values[valueName].some(val => val.id === value.id)) {\r\n                values[valueName].map((val, index) => {\r\n                    if (val.id === value.id) {\r\n                        values[valueName].splice(index, 1)\r\n                    }\r\n                });\r\n                setValues({...values});\r\n            } else {\r\n                setValues({\r\n                        ...values,\r\n                        [valueName]: [...values[valueName], value]\r\n                    }\r\n                );\r\n            }\r\n        } else {\r\n            setValues({...values, [valueName]: [value]});\r\n        }\r\n    };\r\n\r\n    const handleMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n        setAnchor(null);\r\n\r\n        setValues({\r\n            ...values,\r\n            [valueName]: newValue\r\n        });\r\n\r\n        // Reset sub props in values\r\n        Object.keys(newValue).map(key => {\r\n            if (values[key]) {\r\n                setValues({\r\n                    ...values,\r\n                    [valueName]: newValue,\r\n                    [key]: {id: null, name: 'Не выбрано', ...newValue[key]}\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleListItem = (valueName, value) => () => {\r\n        if (values[valueName] && values[valueName].id === value.id) {\r\n            delete values[valueName];\r\n\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                [valueName]: value\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSwitch = (_, value) => {\r\n        setValues({\r\n            ...values,\r\n            avalTime: {\r\n                ...values.avalTime,\r\n                isActive: value\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleWeekDay = (value) => () => {\r\n        if (values.avalTime.week.some(val => val.id === value.id)) {\r\n            values.avalTime.week.map((val, index) => {\r\n                if (val.id === value.id) {\r\n                    values.avalTime.week.splice(index, 1)\r\n                }\r\n            });\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    week: [\r\n                        ...values.avalTime.week,\r\n                        value\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTime = ({target}) => {\r\n        let {value} = target;\r\n        const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\r\n        const isValid = regEx.test(value);\r\n        if (isValid) {\r\n            value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    [target.name]: value\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setErrors({});\r\n        setValues({...initFields});\r\n        isPreview && setIsPreview(false);\r\n    }, [createAdvrt.data.id, createAdvrt.data.name]);\r\n\r\n    console.log(values)\r\n    const classes = useStyles();\r\n    return (\r\n        <MainLayout>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} md={9}>\r\n                        <FormikProvider value={formik}>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                {\r\n                                    isSuccess\r\n                                        ? <SuccessAdvrt/>\r\n                                        : (\r\n                                            <AdvrtForm\r\n                                                locations={locations}\r\n                                                isPreview={isPreview}\r\n                                                setIsPreview={setIsPreview}\r\n                                                createAdvrt={createAdvrt}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                values={values}\r\n                                                setValues={setValues}\r\n                                                handleBlur={handleBlur}\r\n                                                handleTime={handleTime}\r\n                                                handleSwitch={handleSwitch}\r\n                                                handleWeekDay={handleWeekDay}\r\n                                                handleMenuItem={handleMenuItem}\r\n                                                handleListItem={handleListItem}\r\n                                                handleParamsCheckbox={handleParamsCheckbox}\r\n                                                handleCheckboxChange={handleCheckboxChange}\r\n                                            />\r\n                                        )\r\n                                }\r\n                                <div className={classes.nextButtonBlock}>\r\n                                    {\r\n                                        isPreview && (\r\n                                            <ButtonComponent\r\n                                                className={classes.nextButton}\r\n                                                onClick={handlePreview(false)}\r\n                                            >\r\n                                                <Typography>\r\n                                                    Назад\r\n                                                </Typography>\r\n                                            </ButtonComponent>\r\n                                        )\r\n                                    }\r\n                                    <ButtonComponent\r\n                                        type='submit'\r\n                                        disabled={!(createAdvrt.adType.id && createAdvrt.category.id)}\r\n                                        className={classes.nextButton}\r\n                                    >\r\n                                        <Typography>\r\n                                            {\r\n                                                isPreview\r\n                                                    ? 'Создать'\r\n                                                    : 'Далее'\r\n                                            }\r\n                                        </Typography>\r\n                                    </ButtonComponent>\r\n                                </div>\r\n                            </form>\r\n                        </FormikProvider>\r\n                    </Grid>\r\n                    <Hidden smDown>\r\n                        <Grid\r\n                            item\r\n                            md={3}\r\n                            container\r\n                            justify=\"flex-end\"\r\n                            className={classes.adBanner}\r\n                        >\r\n                            <Grid item md={12}>\r\n                                <div className=\"right-banner\"/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Hidden>\r\n                </Grid>\r\n            </Container>\r\n        </MainLayout>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}