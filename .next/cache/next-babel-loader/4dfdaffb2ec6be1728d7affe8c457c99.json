{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from 'react-beautiful-dnd';\nexport var DropZone = function DropZone() {\n  _s();\n\n  var _useState = useState([]),\n      characters = _useState[0],\n      updateCharacters = _useState[1];\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    var items = Array.from(characters);\n\n    var _items$splice = items.splice(result.source.index, 1),\n        _items$splice2 = _slicedToArray(_items$splice, 1),\n        reorderedItem = _items$splice2[0];\n\n    items.splice(result.destination.index, 0, reorderedItem);\n    updateCharacters(items);\n  }\n\n  resetServerContext();\n  return __jsx(\"div\", {\n    className: \"App\"\n  }, __jsx(\"header\", {\n    className: \"App-header\"\n  }, __jsx(\"h1\", null, \"Final Space Characters\"), __jsx(DragDropContext, {\n    onDragEnd: handleOnDragEnd,\n    isDropDisabled: false\n  }, __jsx(Droppable, {\n    droppableId: \"characters\"\n  }, function (provided) {\n    return __jsx(\"ul\", _extends({\n      className: \"characters\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef\n    }), characters.map(function (_ref, index) {\n      var id = _ref.id,\n          name = _ref.name,\n          thumb = _ref.thumb;\n      return __jsx(Draggable, {\n        key: id,\n        draggableId: id,\n        index: index\n      }, function (provided) {\n        return __jsx(\"li\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps), __jsx(\"div\", {\n          className: \"characters-thumb\"\n        }, __jsx(\"img\", {\n          src: thumb,\n          alt: \"\".concat(name, \" Thumb\")\n        })), __jsx(\"p\", null, name));\n      });\n    }), provided.placeholder);\n  }))));\n};\n\n_s(DropZone, \"TaDN5Kh110LWFOVxnpkv/9XWGfg=\");\n\n_c = DropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropZone\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/drop_zone/DropZone.tsx"],"names":["React","useState","DragDropContext","Droppable","Draggable","resetServerContext","DropZone","characters","updateCharacters","handleOnDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","provided","droppableProps","innerRef","map","id","name","thumb","draggableProps","dragHandleProps","placeholder"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,eAAR,EAAyBC,SAAzB,EAAoCC,SAApC,EAA+CC,kBAA/C,QAAwE,qBAAxE;AAGA,OAAO,IAAMC,QAAY,GAAG,SAAfA,QAAe,GAAM;AAAA;;AAAA,kBACSL,QAAQ,CAAC,EAAD,CADjB;AAAA,MACvBM,UADuB;AAAA,MACXC,gBADW;;AAG9B,WAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,QAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;AAEzB,QAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWP,UAAX,CAAd;;AAH6B,wBAILK,KAAK,CAACG,MAAN,CAAaL,MAAM,CAACM,MAAP,CAAcC,KAA3B,EAAkC,CAAlC,CAJK;AAAA;AAAA,QAItBC,aAJsB;;AAK7BN,IAAAA,KAAK,CAACG,MAAN,CAAaL,MAAM,CAACC,WAAP,CAAmBM,KAAhC,EAAuC,CAAvC,EAA0CC,aAA1C;AAEAV,IAAAA,gBAAgB,CAACI,KAAD,CAAhB;AACH;;AAEDP,EAAAA,kBAAkB;AAElB,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,SAAS,EAAC;AAAlB,KACI,2CADJ,EAEI,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAEI,eAA5B;AAA6C,IAAA,cAAc,EAAE;AAA7D,KACI,MAAC,SAAD;AAAW,IAAA,WAAW,EAAC;AAAvB,KACK,UAACU,QAAD;AAAA,WACG;AAAI,MAAA,SAAS,EAAC;AAAd,OAA+BA,QAAQ,CAACC,cAAxC;AAAwD,MAAA,GAAG,EAAED,QAAQ,CAACE;AAAtE,QACKd,UAAU,CAACe,GAAX,CAAe,gBAAoBL,KAApB,EAA8B;AAAA,UAA5BM,EAA4B,QAA5BA,EAA4B;AAAA,UAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,UAAlBC,KAAkB,QAAlBA,KAAkB;AAC1C,aACI,MAAC,SAAD;AAAW,QAAA,GAAG,EAAEF,EAAhB;AAAoB,QAAA,WAAW,EAAEA,EAAjC;AAAqC,QAAA,KAAK,EAAEN;AAA5C,SACK,UAACE,QAAD;AAAA,eACG;AAAI,UAAA,GAAG,EAAEA,QAAQ,CAACE;AAAlB,WAAgCF,QAAQ,CAACO,cAAzC,EAA6DP,QAAQ,CAACQ,eAAtE,GACI;AAAK,UAAA,SAAS,EAAC;AAAf,WACI;AAAK,UAAA,GAAG,EAAEF,KAAV;AAAiB,UAAA,GAAG,YAAKD,IAAL;AAApB,UADJ,CADJ,EAII,iBACKA,IADL,CAJJ,CADH;AAAA,OADL,CADJ;AAcH,KAfA,CADL,EAiBKL,QAAQ,CAACS,WAjBd,CADH;AAAA,GADL,CADJ,CAFJ,CADJ,CADJ;AAgCH,CA/CM;;GAAMtB,Q;;KAAAA,Q","sourcesContent":["import React, {FC} from 'react';\r\nimport {useState} from 'react';\r\nimport {DragDropContext, Droppable, Draggable, resetServerContext} from 'react-beautiful-dnd';\r\n\r\n\r\nexport const DropZone: FC = () => {\r\n    const [characters, updateCharacters] = useState([]);\r\n\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n\r\n        const items = Array.from(characters);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updateCharacters(items);\r\n    }\r\n\r\n    resetServerContext();\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Final Space Characters</h1>\r\n                <DragDropContext onDragEnd={handleOnDragEnd} isDropDisabled={false}>\r\n                    <Droppable droppableId=\"characters\">\r\n                        {(provided) => (\r\n                            <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {characters.map(({id, name, thumb}, index) => {\r\n                                    return (\r\n                                        <Draggable key={id} draggableId={id} index={index}>\r\n                                            {(provided) => (\r\n                                                <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                                    <div className=\"characters-thumb\">\r\n                                                        <img src={thumb} alt={`${name} Thumb`}/>\r\n                                                    </div>\r\n                                                    <p>\r\n                                                        {name}\r\n                                                    </p>\r\n                                                </li>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    );\r\n                                })}\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            </header>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}