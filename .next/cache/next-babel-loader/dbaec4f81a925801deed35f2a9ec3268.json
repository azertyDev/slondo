{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nvar initialState = {\n  name: '',\n  phone: '',\n  avatar: null\n};\nexport var localization = function localization() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/reducers/localization.ts"],"names":["HYDRATE","initialState","name","phone","avatar","localization","state","action","type","payload"],"mappings":";;;;;;AAEA,SAAQA,OAAR,QAAsB,oBAAtB;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,MAAM,EAAE;AAHS,CAArB;AAMA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAmE;AAAA,MAAlEC,KAAkE,uEAA/CL,YAA+C;AAAA,MAAjCM,MAAiC;;AAC3F,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,OAAL;AACI,6CACOM,KADP,GAEOC,MAAM,CAACE,OAFd;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH,CAVM","sourcesContent":["import {localizationActionTypes} from '../actions/localizationActions';\r\nimport {AnyAction} from \"redux\"\r\nimport {HYDRATE} from \"next-redux-wrapper\"\r\nimport {ISelfData} from \"../../../interfaces/ISelfData\"\r\n\r\nconst initialState = {\r\n    name: '',\r\n    phone: '',\r\n    avatar: null\r\n};\r\n\r\nexport const localization = (state: ISelfData = initialState, action: AnyAction): ISelfData => {\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}