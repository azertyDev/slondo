{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport { CustomSlider } from '../custom_slider/CustomSlider';\nimport { FullscreenIcon } from '../icons';\nimport Button from '@material-ui/core/Button';\nimport { NextImgTag } from \"@src/components/elements/next_img_tag/NextImgTag\"; // styles\n\nimport { useStyles } from './useStyles';\nexport const SyncSliders = props => {\n  const {\n    imgs\n  } = props;\n  const {\n    0: slidersNav,\n    1: setSlidersNav\n  } = useState({\n    nav1: null,\n    nav2: null\n  });\n  const slider1 = useRef();\n  const slider2 = useRef();\n  useEffect(() => {\n    setSlidersNav({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, []);\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: classes.firstSlider\n  }, __jsx(\"div\", {\n    className: classes.fullscreenIcon\n  }, __jsx(Button, {\n    variant: \"text\",\n    color: \"default\"\n  }, __jsx(\"img\", {\n    src: FullscreenIcon,\n    alt: \"fullscreen-icon\"\n  }))), __jsx(CustomSlider, {\n    asNavFor: slidersNav.nav2,\n    ref: slider1\n  }, imgs.map(({\n    url,\n    alt\n  }, i) => __jsx(\"div\", {\n    key: i\n  }, __jsx(NextImgTag, {\n    src: url,\n    alt: alt\n  }))))), __jsx(\"div\", {\n    className: classes.secondSlider\n  }, __jsx(CustomSlider, {\n    asNavFor: slidersNav.nav1,\n    ref: slider2,\n    slidesToShow: 7,\n    focusOnSelect: true\n  }, imgs.map(({\n    url,\n    alt\n  }, i) => __jsx(\"div\", {\n    key: i\n  }, __jsx(NextImgTag, {\n    src: url,\n    alt: alt\n  }))))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/syncSliders/SyncSliders.tsx"],"names":["React","useEffect","useRef","useState","CustomSlider","FullscreenIcon","Button","NextImgTag","useStyles","SyncSliders","props","imgs","slidersNav","setSlidersNav","nav1","nav2","slider1","slider2","current","classes","root","firstSlider","fullscreenIcon","map","url","alt","i","secondSlider"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAAQC,YAAR,QAA2B,+BAA3B;AACA,SAAQC,cAAR,QAA6B,UAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,kDAA3B,C,CAEA;;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAClC,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAf;AACA,QAAM;AAAA,OAACE,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAC;AAACW,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAD,CAA5C;AACA,QAAMC,OAAO,GAAGd,MAAM,EAAtB;AACA,QAAMe,OAAO,GAAGf,MAAM,EAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,aAAa,CAAC;AACVC,MAAAA,IAAI,EAAEE,OAAO,CAACE,OADJ;AAEVH,MAAAA,IAAI,EAAEE,OAAO,CAACC;AAFJ,KAAD,CAAb;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAEW,OAAO,CAACC;AAAxB,KACI;AAAK,IAAA,SAAS,EAAED,OAAO,CAACE;AAAxB,KACI;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACG;AAAxB,KACI,MAAC,MAAD;AACI,IAAA,OAAO,EAAC,MADZ;AAEI,IAAA,KAAK,EAAC;AAFV,KAII;AAAK,IAAA,GAAG,EAAEjB,cAAV;AAA0B,IAAA,GAAG,EAAC;AAA9B,IAJJ,CADJ,CADJ,EASI,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEO,UAAU,CAACG,IAAnC;AAAyC,IAAA,GAAG,EAAEC;AAA9C,KACKL,IAAI,CAACY,GAAL,CAAS,CAAC;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAD,EAAaC,CAAb,KACN;AAAK,IAAA,GAAG,EAAEA;AAAV,KACI,MAAC,UAAD;AAAY,IAAA,GAAG,EAAEF,GAAjB;AAAsB,IAAA,GAAG,EAAEC;AAA3B,IADJ,CADH,CADL,CATJ,CADJ,EAkBI;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACQ;AAAxB,KACI,MAAC,YAAD;AACI,IAAA,QAAQ,EAAEf,UAAU,CAACE,IADzB;AAEI,IAAA,GAAG,EAAEG,OAFT;AAGI,IAAA,YAAY,EAAE,CAHlB;AAII,IAAA,aAAa,EAAE;AAJnB,KAMKN,IAAI,CAACY,GAAL,CAAS,CAAC;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAD,EAAaC,CAAb,KACN;AAAK,IAAA,GAAG,EAAEA;AAAV,KACI,MAAC,UAAD;AAAY,IAAA,GAAG,EAAEF,GAAjB;AAAsB,IAAA,GAAG,EAAEC;AAA3B,IADJ,CADH,CANL,CADJ,CAlBJ,CADJ;AAmCH,CAjDM","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport {CustomSlider} from '../custom_slider/CustomSlider';\r\nimport {FullscreenIcon} from '../icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NextImgTag } from \"@src/components/elements/next_img_tag/NextImgTag\";\r\n\r\n// styles\r\nimport {useStyles} from './useStyles';\r\n\r\nexport const SyncSliders = (props) => {\r\n    const {imgs} = props;\r\n    const [slidersNav, setSlidersNav] = useState({nav1: null, nav2: null});\r\n    const slider1 = useRef();\r\n    const slider2 = useRef();\r\n\r\n    useEffect(() => {\r\n        setSlidersNav({\r\n            nav1: slider1.current,\r\n            nav2: slider2.current,\r\n        });\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.firstSlider}>\r\n                <div className={classes.fullscreenIcon}>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"default\"\r\n                    >\r\n                        <img src={FullscreenIcon} alt=\"fullscreen-icon\"/>\r\n                    </Button>\r\n                </div>\r\n                <CustomSlider asNavFor={slidersNav.nav2} ref={slider1}>\r\n                    {imgs.map(({url, alt}, i) => (\r\n                        <div key={i}>\r\n                            <NextImgTag src={url} alt={alt}/>\r\n                        </div>\r\n                    ))}\r\n                </CustomSlider>\r\n            </div>\r\n            <div className={classes.secondSlider}>\r\n                <CustomSlider\r\n                    asNavFor={slidersNav.nav1}\r\n                    ref={slider2}\r\n                    slidesToShow={7}\r\n                    focusOnSelect={true}\r\n                >\r\n                    {imgs.map(({url, alt}, i) => (\r\n                        <div key={i}>\r\n                            <NextImgTag src={url} alt={alt}/>\r\n                        </div>\r\n                    ))}\r\n                </CustomSlider>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}