{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { selfDataActionTypes } from '../actions/selfDataActions';\nconst initialState = {\n  id: null,\n  name: '',\n  email: '',\n  phone: '',\n  email_verified_at: '',\n  created_at: '',\n  updated_at: ''\n};\nexport const selfData = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload.selfData);\n\n    case selfDataActionTypes.GET_SELF_DATA:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/reducers/selfData.ts"],"names":["HYDRATE","selfDataActionTypes","initialState","id","name","email","phone","email_verified_at","created_at","updated_at","selfData","state","action","type","payload","GET_SELF_DATA"],"mappings":";;;;;;AACA,SAAQA,OAAR,QAAsB,oBAAtB;AAEA,SAAQC,mBAAR,QAAkC,4BAAlC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,EAAE,EAAE,IADa;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,iBAAiB,EAAE,EALF;AAMjBC,EAAAA,UAAU,EAAE,EANK;AAOjBC,EAAAA,UAAU,EAAE;AAPK,CAArB;AAUA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAgB,GAAGT,YAApB,EAAkCU,MAAlC,KAAmE;AACvF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,OAAL;AACI,6CACOW,KADP,GAEOC,MAAM,CAACE,OAAP,CAAeJ,QAFtB;;AAIJ,SAAKT,mBAAmB,CAACc,aAAzB;AACI,6CACOJ,KADP,GAEOC,MAAM,CAACE,OAFd;;AAIJ;AACI,aAAOH,KAAP;AAZR;AAcH,CAfM","sourcesContent":["import {AnyAction} from \"redux\"\r\nimport {HYDRATE} from \"next-redux-wrapper\"\r\nimport {ISelfData} from \"../../../interfaces/ISelfData\"\r\nimport {selfDataActionTypes} from '../actions/selfDataActions'\r\n\r\nconst initialState = {\r\n    id: null,\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    email_verified_at: '',\r\n    created_at: '',\r\n    updated_at: ''\r\n};\r\n\r\nexport const selfData = (state: ISelfData = initialState, action: AnyAction): ISelfData => {\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            return {\r\n                ...state,\r\n                ...action.payload.selfData\r\n            }\r\n        case selfDataActionTypes.GET_SELF_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}