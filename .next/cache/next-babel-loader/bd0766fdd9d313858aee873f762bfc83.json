{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { GridView } from './grid_view/GridView';\nimport { ListView } from './list_view/ListView';\nexport var CardView = function CardView(props) {\n  var _props$listMode = props.listMode,\n      listMode = _props$listMode === void 0 ? false : _props$listMode,\n      list = props.list,\n      isFetch = props.isFetch;\n  return listMode ? __jsx(ListView, {\n    list: list,\n    isFetch: isFetch\n  }) : __jsx(GridView, {\n    list: list,\n    isFetch: isFetch\n  });\n};\n_c = CardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardView\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/card_view/CardView.tsx"],"names":["React","GridView","ListView","CardView","props","listMode","list","isFetch"],"mappings":";AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AASA,OAAO,IAAMC,QAAqD,GAAG,SAAxDA,QAAwD,CAACC,KAAD,EAAW;AAAA,wBAClCA,KADkC,CACrEC,QADqE;AAAA,MACrEA,QADqE,gCAC1D,KAD0D;AAAA,MACnDC,IADmD,GAClCF,KADkC,CACnDE,IADmD;AAAA,MAC7CC,OAD6C,GAClCH,KADkC,CAC7CG,OAD6C;AAE5E,SAAOF,QAAQ,GACT,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,IAAhB;AAAsB,IAAA,OAAO,EAAEC;AAA/B,IADS,GAET,MAAC,QAAD;AAAU,IAAA,IAAI,EAAED,IAAhB;AAAsB,IAAA,OAAO,EAAEC;AAA/B,IAFN;AAGH,CALM;KAAMJ,Q","sourcesContent":["import React, {FC} from 'react';\r\nimport {GridView} from './grid_view/GridView';\r\nimport {ListView} from './list_view/ListView';\r\nimport {InnerCardData} from \"@root/interfaces/CardData\";\r\n\r\n\r\nexport type ViewPropsTypes = {\r\n    isFetch: boolean;\r\n    list: InnerCardData[];\r\n};\r\n\r\nexport const CardView: FC<ViewPropsTypes & { listMode?: boolean }> = (props) => {\r\n    const {listMode = false, list, isFetch} = props;\r\n    return listMode\r\n        ? <ListView list={list} isFetch={isFetch}/>\r\n        : <GridView list={list} isFetch={isFetch}/>\r\n};"]},"metadata":{},"sourceType":"module"}