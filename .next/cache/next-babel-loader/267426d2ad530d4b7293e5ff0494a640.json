{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { ITEMS_PER_PAGE } from '@src/constants';\nimport { userAPI } from '@src/api/api';\nimport { i18n } from '@root/i18n';\nimport { AncmntsSlider } from './AncmntsSlider';\nimport { setErrorMsgAction } from \"@src/redux/slices/errorSlice\";\nimport { useDispatch } from \"react-redux\";\nconst initCard = {\n  id: null,\n  title: '',\n  safe_deal: null,\n  price: null,\n  currency: {\n    id: null,\n    name: ''\n  },\n  created_at: '',\n  region: {\n    id: null,\n    name: ''\n  },\n  city: {\n    id: null,\n    name: ''\n  },\n  images: [{\n    url: {\n      default: ''\n    }\n  }],\n  delivery: null,\n  exchange: null,\n  ads_type: {\n    id: null,\n    name: '',\n    mark: ''\n  }\n};\nexport const initCards = Array.from({\n  length: ITEMS_PER_PAGE\n}).map(() => initCard);\nconst initCardData = {\n  isFetch: false,\n  error: null,\n  data: {\n    cards: initCards,\n    total: null\n  }\n};\nexport const AncmntsSliderContainer = () => {\n  const dispatch = useDispatch();\n  const lang = i18n.language;\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: cardData,\n    1: setCardData\n  } = useState(initCardData);\n  const type = 'lot';\n\n  const setFetchedCardData = async () => {\n    try {\n      setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n        isFetch: true\n      }));\n      const newData = await userAPI.getCards(ITEMS_PER_PAGE, currentPage, type, lang);\n      setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n        isFetch: false,\n        data: {\n          cards: newData.data,\n          total: newData.total\n        }\n      }));\n    } catch (e) {\n      dispatch(setErrorMsgAction(e.message));\n      setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n        error: e.message\n      }));\n    }\n  };\n\n  useEffect(() => {\n    setFetchedCardData();\n  }, [currentPage, lang]);\n  return __jsx(AncmntsSlider, {\n    title: 'Телефоны и планшеты',\n    cardData: cardData\n  });\n};","map":null,"metadata":{},"sourceType":"module"}