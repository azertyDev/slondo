{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport { Grid } from \"@material-ui/core\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport React from \"react\";\nexport var CustomDroppable = function CustomDroppable(props) {\n  var droppableId = props.droppableId,\n      files = props.files,\n      isPreview = props.isPreview,\n      removeFile = props.removeFile;\n  return __jsx(Droppable, {\n    isCombineEnabled: true,\n    droppableId: droppableId,\n    direction: \"horizontal\"\n  }, function (provided) {\n    return __jsx(Grid, _extends({\n      container: true,\n      className: \"images-wrapper\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef\n    }), files.map(function (_ref, index) {\n      var url = _ref.url,\n          file = _ref.file;\n      var isUrl = typeof url === 'string';\n      return __jsx(Draggable, {\n        key: index,\n        index: index,\n        draggableId: file.name,\n        isDragDisabled: isPreview || !isUrl,\n        disableInteractiveElementBlocking: true\n      }, function (provided) {\n        return __jsx(Grid, _extends({\n          item: true,\n          xs: 4,\n          md: 3,\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps), isUrl ? __jsx(React.Fragment, null, __jsx(\"img\", {\n          src: url,\n          style: {\n            width: '160px',\n            height: '120px',\n            objectFit: 'cover'\n          },\n          alt: file.name\n        }), __jsx(ButtonComponent, {\n          disabled: isPreview,\n          onClick: removeFile(url)\n        }, \"X\")) : url);\n      });\n    }), provided.placeholder);\n  });\n};\n_c = CustomDroppable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDroppable\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/preview_photos/CustomDroppable.tsx"],"names":["Grid","Draggable","Droppable","ButtonComponent","React","CustomDroppable","props","droppableId","files","isPreview","removeFile","provided","droppableProps","innerRef","map","index","url","file","isUrl","name","draggableProps","dragHandleProps","width","height","objectFit","placeholder"],"mappings":";;AAAA,SAAQA,IAAR,QAAmB,mBAAnB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,qBAAnC;AACA,SAAQC,eAAR,QAA8B,wCAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA,MAC/BC,WAD+B,GACcD,KADd,CAC/BC,WAD+B;AAAA,MAClBC,KADkB,GACcF,KADd,CAClBE,KADkB;AAAA,MACXC,SADW,GACcH,KADd,CACXG,SADW;AAAA,MACAC,UADA,GACcJ,KADd,CACAI,UADA;AAGtC,SACI,MAAC,SAAD;AACI,IAAA,gBAAgB,EAAE,IADtB;AAEI,IAAA,WAAW,EAAEH,WAFjB;AAGI,IAAA,SAAS,EAAC;AAHd,KAKK,UAAAI,QAAQ;AAAA,WACL,MAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,SAAS,EAAC;AAFd,OAGQA,QAAQ,CAACC,cAHjB;AAII,MAAA,GAAG,EAAED,QAAQ,CAACE;AAJlB,QAMKL,KAAK,CAACM,GAAN,CAAU,gBAAcC,KAAd,EAAwB;AAAA,UAAtBC,GAAsB,QAAtBA,GAAsB;AAAA,UAAjBC,IAAiB,QAAjBA,IAAiB;AAC3B,UAAMC,KAAK,GAAG,OAAOF,GAAP,KAAe,QAA7B;AAEA,aACI,MAAC,SAAD;AACI,QAAA,GAAG,EAAED,KADT;AAEI,QAAA,KAAK,EAAEA,KAFX;AAGI,QAAA,WAAW,EAAEE,IAAI,CAACE,IAHtB;AAII,QAAA,cAAc,EAAEV,SAAS,IAAI,CAACS,KAJlC;AAKI,QAAA,iCAAiC,EAAE;AALvC,SAOK,UAAAP,QAAQ;AAAA,eACL,MAAC,IAAD;AACI,UAAA,IAAI,MADR;AAEI,UAAA,EAAE,EAAE,CAFR;AAGI,UAAA,EAAE,EAAE,CAHR;AAII,UAAA,GAAG,EAAEA,QAAQ,CAACE;AAJlB,WAKQF,QAAQ,CAACS,cALjB,EAMQT,QAAQ,CAACU,eANjB,GASQH,KAAK,GACC,4BACE;AACI,UAAA,GAAG,EAAEF,GADT;AAEI,UAAA,KAAK,EAAE;AACHM,YAAAA,KAAK,EAAE,OADJ;AAEHC,YAAAA,MAAM,EAAE,OAFL;AAGHC,YAAAA,SAAS,EAAE;AAHR,WAFX;AAOI,UAAA,GAAG,EAAEP,IAAI,CAACE;AAPd,UADF,EAUE,MAAC,eAAD;AACI,UAAA,QAAQ,EAAEV,SADd;AAEI,UAAA,OAAO,EAAEC,UAAU,CAACM,GAAD;AAFvB,eAVF,CADD,GAgBCA,GAzBd,CADK;AAAA,OAPb,CADJ;AAwCH,KA3CJ,CANL,EAmDKL,QAAQ,CAACc,WAnDd,CADK;AAAA,GALb,CADJ;AA+DH,CAlEM;KAAMpB,e","sourcesContent":["import {Grid} from \"@material-ui/core\";\r\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const CustomDroppable = (props) => {\r\n    const {droppableId, files, isPreview, removeFile} = props;\r\n\r\n    return (\r\n        <Droppable\r\n            isCombineEnabled={true}\r\n            droppableId={droppableId}\r\n            direction=\"horizontal\"\r\n        >\r\n            {provided => (\r\n                <Grid\r\n                    container\r\n                    className=\"images-wrapper\"\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                >\r\n                    {files.map(({url, file}, index) => {\r\n                            const isUrl = typeof url === 'string';\r\n\r\n                            return (\r\n                                <Draggable\r\n                                    key={index}\r\n                                    index={index}\r\n                                    draggableId={file.name}\r\n                                    isDragDisabled={isPreview || !isUrl}\r\n                                    disableInteractiveElementBlocking={true}\r\n                                >\r\n                                    {provided => (\r\n                                        <Grid\r\n                                            item\r\n                                            xs={4}\r\n                                            md={3}\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                        >\r\n                                            {\r\n                                                isUrl\r\n                                                    ? <>\r\n                                                        <img\r\n                                                            src={url}\r\n                                                            style={{\r\n                                                                width: '160px',\r\n                                                                height: '120px',\r\n                                                                objectFit: 'cover'\r\n                                                            }}\r\n                                                            alt={file.name}\r\n                                                        />\r\n                                                        <ButtonComponent\r\n                                                            disabled={isPreview}\r\n                                                            onClick={removeFile(url)}\r\n                                                        >X</ButtonComponent>\r\n                                                    </>\r\n                                                    : url\r\n                                            }\r\n                                        </Grid>\r\n                                    )}\r\n                                </Draggable>\r\n                            )\r\n                        }\r\n                    )}\r\n                    {provided.placeholder}\r\n                </Grid>\r\n            )}\r\n        </Droppable>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}