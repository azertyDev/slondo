{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nexport const CustomMenu = props => {\n  const {\n    valueName,\n    items,\n    onClick,\n    onBlur\n  } = props;\n  const {\n    0: anchor,\n    1: setAnchor\n  } = useState(null);\n\n  const handleMenuOpen = e => {\n    setAnchor(e.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchor(null);\n    props.setTouched && props.setTouched(_objectSpread(_objectSpread({}, props.touched), {}, {\n      [props.name]: true\n    }));\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      width: '100%'\n    },\n    className: props.className\n  }, __jsx(ButtonComponent, {\n    style: {\n      backgroundColor: '#fafafa',\n      border: '1px solid #4e4e4e'\n    },\n    onClick: handleMenuOpen,\n    disabled: !items.length\n  }, __jsx(Typography, {\n    style: {\n      color: '#4e4e4e'\n    }\n  }, valueName)), __jsx(Menu, {\n    anchorEl: anchor,\n    open: Boolean(anchor),\n    onClose: handleMenuClose\n  }, items.map((item, i) => __jsx(MenuItem, {\n    key: i,\n    id: item.name,\n    onBlur: onBlur,\n    onClick: onClick(item, setAnchor)\n  }, __jsx(Typography, null, item.name)))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/custom_menu/CustomMenu.tsx"],"names":["React","useState","Menu","MenuItem","Typography","ButtonComponent","CustomMenu","props","valueName","items","onClick","onBlur","anchor","setAnchor","handleMenuOpen","e","currentTarget","handleMenuClose","setTouched","touched","name","width","className","backgroundColor","border","length","color","Boolean","map","item","i"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,IAAR,EAAcC,QAAd,EAAwBC,UAAxB,QAAyC,mBAAzC;AAEA,SAAQC,eAAR,QAA8B,wCAA9B;AAGA,OAAO,MAAMC,UAA+B,GAAIC,KAAD,IAAW;AACtD,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,MAAsCJ,KAA5C;AAEA,QAAM;AAAA,OAACK,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMa,cAAc,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,SAAS,CAACE,CAAC,CAACC,aAAH,CAAT;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1BJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAN,IAAAA,KAAK,CAACW,UAAN,IAAoBX,KAAK,CAACW,UAAN,iCAAqBX,KAAK,CAACY,OAA3B;AAAoC,OAACZ,KAAK,CAACa,IAAP,GAAc;AAAlD,OAApB;AACH,GAHD;;AAKA,SACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAZ;AAA6B,IAAA,SAAS,EAAEd,KAAK,CAACe;AAA9C,KACI,MAAC,eAAD;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,eAAe,EAAE,SADd;AAEHC,MAAAA,MAAM,EAAE;AAFL,KADX;AAKI,IAAA,OAAO,EAAEV,cALb;AAMI,IAAA,QAAQ,EAAE,CAACL,KAAK,CAACgB;AANrB,KAQI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR;AAAnB,KACKlB,SADL,CARJ,CADJ,EAaI,MAAC,IAAD;AACI,IAAA,QAAQ,EAAEI,MADd;AAEI,IAAA,IAAI,EAAEe,OAAO,CAACf,MAAD,CAFjB;AAGI,IAAA,OAAO,EAAEK;AAHb,KAMQR,KAAK,CAACmB,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KACN,MAAC,QAAD;AACI,IAAA,GAAG,EAAEA,CADT;AAEI,IAAA,EAAE,EAAED,IAAI,CAACT,IAFb;AAGI,IAAA,MAAM,EAAET,MAHZ;AAII,IAAA,OAAO,EAAED,OAAO,CAACmB,IAAD,EAAOhB,SAAP;AAJpB,KAMI,MAAC,UAAD,QAAagB,IAAI,CAACT,IAAlB,CANJ,CADJ,CANR,CAbJ,CADJ;AAkCH,CAhDM","sourcesContent":["import React, {FC, useState} from \"react\";\r\nimport {Menu, MenuItem, Typography} from \"@material-ui/core\";\r\nimport {CustomMenuProps} from \"@root/interfaces/CustomMenuProps\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\n\r\n\r\nexport const CustomMenu: FC<CustomMenuProps> = (props) => {\r\n    const {valueName, items, onClick, onBlur} = props;\r\n\r\n    const [anchor, setAnchor] = useState(null);\r\n\r\n    const handleMenuOpen = (e) => {\r\n        setAnchor(e.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchor(null);\r\n        props.setTouched && props.setTouched({...props.touched, [props.name]: true});\r\n    };\r\n\r\n    return (\r\n        <div style={{width: '100%'}} className={props.className}>\r\n            <ButtonComponent\r\n                style={{\r\n                    backgroundColor: '#fafafa',\r\n                    border: '1px solid #4e4e4e',\r\n                }}\r\n                onClick={handleMenuOpen}\r\n                disabled={!items.length}\r\n            >\r\n                <Typography style={{color: '#4e4e4e'}}>\r\n                    {valueName}\r\n                </Typography>\r\n            </ButtonComponent>\r\n            <Menu\r\n                anchorEl={anchor}\r\n                open={Boolean(anchor)}\r\n                onClose={handleMenuClose}\r\n            >\r\n                {\r\n                    items.map((item, i) => (\r\n                        <MenuItem\r\n                            key={i}\r\n                            id={item.name}\r\n                            onBlur={onBlur}\r\n                            onClick={onClick(item, setAnchor)}\r\n                        >\r\n                            <Typography>{item.name}</Typography>\r\n                        </MenuItem>\r\n                    ))\r\n                }\r\n            </Menu>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}