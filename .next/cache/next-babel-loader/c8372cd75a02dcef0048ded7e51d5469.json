{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { CustomSlider } from \"@src/components/elements/custom_slider/CustomSlider\";\nimport { settings } from './sliderSettings';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { i18n, Link } from \"@root/i18n\";\nimport { fetchCategories } from \"@src/redux/slices/categoriesSlice\";\nimport { useStyles } from './useStyles';\nexport const CategoriesSlider = props => {\n  const {\n    t\n  } = props;\n  const dispatch = useDispatch();\n  const lang = i18n.language;\n  const {\n    error,\n    list\n  } = useSelector(({\n    categories\n  }) => categories);\n  useEffect(() => {\n    dispatch(fetchCategories(lang));\n  }, [lang]);\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    variant: \"h4\"\n  }, t('popularCategories')), __jsx(\"div\", {\n    className: \"category-slider\"\n  }, __jsx(CustomSlider, settings, error ? __jsx(Typography, null, error) : list.map(category => __jsx(Link, {\n    href: \"#\",\n    key: category.id\n  }, __jsx(\"a\", {\n    title: category.name\n  }, __jsx(\"img\", {\n    src: category.images.url,\n    alt: \"category\"\n  }), __jsx(Typography, null, category.name)))))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/header/sliders/categoriesSlider/CategoriesSlider.tsx"],"names":["React","useEffect","Typography","CustomSlider","settings","useDispatch","useSelector","i18n","Link","fetchCategories","useStyles","CategoriesSlider","props","t","dispatch","lang","language","error","list","categories","classes","root","map","category","id","name","images","url"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,YAAR,QAA2B,qDAA3B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,YAAzB;AACA,SAAQC,eAAR,QAA8B,mCAA9B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACvC,QAAM;AAACC,IAAAA;AAAD,MAAMD,KAAZ;AAEA,QAAME,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,IAAI,GAAGR,IAAI,CAACS,QAAlB;AAEA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAgBZ,WAAW,CAAC,CAAC;AAACa,IAAAA;AAAD,GAAD,KAA6BA,UAA9B,CAAjC;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,CAACL,eAAe,CAACM,IAAD,CAAhB,CAAR;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,QAAMK,OAAO,GAAGV,SAAS,EAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAEU,OAAO,CAACC;AAAxB,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KAA0BR,CAAC,CAAC,mBAAD,CAA3B,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,YAAD,EAAkBT,QAAlB,EAEQa,KAAK,GAEG,MAAC,UAAD,QAAaA,KAAb,CAFH,GAKGC,IAAI,CAACI,GAAL,CAASC,QAAQ,IACT,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAe,IAAA,GAAG,EAAEA,QAAQ,CAACC;AAA7B,KACI;AAAG,IAAA,KAAK,EAAED,QAAQ,CAACE;AAAnB,KACI;AAAK,IAAA,GAAG,EAAEF,QAAQ,CAACG,MAAT,CAAgBC,GAA1B;AAA+B,IAAA,GAAG,EAAC;AAAnC,IADJ,EAEI,MAAC,UAAD,QAAaJ,QAAQ,CAACE,IAAtB,CAFJ,CADJ,CADR,CAPhB,CADJ,CAFJ,CADJ;AA0BH,CAvCM","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {Typography} from '@material-ui/core';\r\nimport {CustomSlider} from \"@src/components/elements/custom_slider/CustomSlider\";\r\nimport {settings} from './sliderSettings';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {i18n, Link} from \"@root/i18n\";\r\nimport {fetchCategories} from \"@src/redux/slices/categoriesSlice\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const CategoriesSlider = (props) => {\r\n    const {t} = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const lang = i18n.language;\r\n\r\n    const {error, list} = useSelector(({categories}: RootState) => categories);\r\n    useEffect(() => {\r\n        dispatch(fetchCategories(lang));\r\n    }, [lang]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h4\">{t('popularCategories')}</Typography>\r\n            <div className='category-slider'>\r\n                <CustomSlider {...settings}>\r\n                    {\r\n                        error\r\n                            ? (\r\n                                <Typography>{error}</Typography>\r\n                            )\r\n                            : (\r\n                                list.map(category => (\r\n                                        <Link href=\"#\" key={category.id}>\r\n                                            <a title={category.name}>\r\n                                                <img src={category.images.url} alt='category'/>\r\n                                                <Typography>{category.name}</Typography>\r\n                                            </a>\r\n                                        </Link>\r\n                                    )\r\n                                )\r\n                            )\r\n                    }\r\n                </CustomSlider>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}