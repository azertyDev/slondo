{"ast":null,"code":"import Axios from 'axios';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\nconst {\n  token\n} = cookies.get('token') || {\n  token: ''\n};\nconst instance = Axios.create({\n  withCredentials: true,\n  baseURL: 'http://127.0.1.1/api/'\n});\nconst config = {\n  headers: {\n    'Content-Type': 'multipart/form-data',\n    'Authorization': `Bearer ${token}`,\n    \"Access-Control-Allow-Origin\": \"*\"\n  }\n};\nexport const userAPI = {\n  login: (phone, password) => {\n    const form = new FormData();\n    form.set('phone', phone);\n    form.set('password', password);\n    return instance.post(`login`, form, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getCategories: lang => {\n    return instance.get(`categories/main?lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getAdDataForCreate: (ctgryID, subCtgryID, lang) => {\n    return instance.get(`subcategory?parent_id=${ctgryID}&lang=${lang}&child_id=${subCtgryID}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getCardData: (itemsPerPage, page, type, lang) => {\n    return instance.get(`ads/all?itemsPerPage=${itemsPerPage}&page=${page}&type=${type}&lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getAddById: (ads_id, lang) => {\n    return instance.get(`getAddById?ads_id=${ads_id}&lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getLocations: lang => {\n    return instance.get(`location?lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  createAdvrt: data => {\n    return instance.post(`regular/ads/new`, data, config).then(res => res.data).catch(err => {\n      throw err;\n    });\n  },\n  getAdTypes: lang => {\n    return instance.get(`ads/type?lang=${lang}`).then(res => res.data).catch(err => {\n      throw err;\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/api/api.tsx"],"names":["Axios","Cookies","cookies","token","get","instance","create","withCredentials","baseURL","config","headers","userAPI","login","phone","password","form","FormData","set","post","then","res","data","catch","err","getCategories","lang","getAdDataForCreate","ctgryID","subCtgryID","getCardData","itemsPerPage","page","type","getAddById","ads_id","getLocations","createAdvrt","getAdTypes"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\nimport {LocationsDataTypes} from \"@root/interfaces/Locations\";\r\nimport {CategoriesDataTypes} from \"@root/interfaces/Categories\";\r\n\r\n\r\nconst cookies = new Cookies();\r\nconst {token} = cookies.get('token') || {token: ''};\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://127.0.1.1/api/',\r\n});\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        'Authorization': `Bearer ${token}`,\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    }\r\n};\r\n\r\nexport const userAPI = {\r\n    login: (phone: string, password: string): Promise<unknown> => {\r\n        const form = new FormData();\r\n        form.set('phone', phone);\r\n        form.set('password', password);\r\n        return instance\r\n            .post(`login`, form, {\r\n                headers: {'Content-Type': 'multipart/form-data'},\r\n            })\r\n            .then((res) => res.data)\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n    getCategories: (lang: string): Promise<CategoriesDataTypes> => {\r\n        return instance.get(`categories/main?lang=${lang}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    },\r\n    getAdDataForCreate: (ctgryID: number, subCtgryID: number, lang: string): Promise<unknown> => {\r\n        return instance.get(`subcategory?parent_id=${ctgryID}&lang=${lang}&child_id=${subCtgryID}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    },\r\n    getCardData: (itemsPerPage: number, page: number, type: string, lang: string): Promise<any> => {\r\n        return instance.get(`ads/all?itemsPerPage=${itemsPerPage}&page=${page}&type=${type}&lang=${lang}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n    getAddById: (ads_id: number, lang: string): Promise<unknown> => {\r\n        return instance.get(`getAddById?ads_id=${ads_id}&lang=${lang}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => {\r\n                throw err;\r\n            })\r\n    },\r\n    getLocations: (lang: string): Promise<LocationsDataTypes> => {\r\n        return instance.get(`location?lang=${lang}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    },\r\n    createAdvrt: (data: any): Promise<LocationsDataTypes> => {\r\n        return instance.post(`regular/ads/new`, data, config)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    },\r\n    getAdTypes: (lang: string) => {\r\n        return instance.get(`ads/type?lang=${lang}`)\r\n            .then(res => res.data)\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}