{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Link } from '@root/i18n';\nimport { useTranslation } from \"react-i18next\";\nimport { Card, CardActionArea, CardContent, CardMedia, IconButton, Typography } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { FavoriteIcon, DeliveryIcon, SafeIcon, SwapIcon } from '@src/components/elements/icons';\nimport { transformTitle } from \"@src/helpers\";\nimport { useStyles } from './useStyles';\nexport const CardItem = props => {\n  const {\n    t\n  } = useTranslation(['common']);\n  const {\n    id,\n    isFetch,\n    images,\n    delivery,\n    safe_deal,\n    exchange,\n    title,\n    price,\n    created_at,\n    currency,\n    ads_type,\n    region,\n    city\n  } = props;\n  const translatedTitle = transformTitle(title);\n  const classes = useStyles(ads_type);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(IconButton, {\n    className: \"favorite-btn\"\n  }, __jsx(FavoriteIcon, {\n    id: id\n  })), __jsx(Link, {\n    href: `/obyavlenie/${translatedTitle}-${id}`\n  }, __jsx(\"a\", null, __jsx(Card, {\n    elevation: 0,\n    title: title\n  }, isFetch ? __jsx(Skeleton, {\n    variant: \"rect\",\n    className: classes.skeleton\n  }) : __jsx(CardMedia, {\n    className: \"card-media\",\n    image: images.length ? images[0].url.default : null\n  }, __jsx(\"div\", {\n    className: \"card-header\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, t(ads_type ? ads_type.mark : 'ancmnt'))), __jsx(\"div\", {\n    className: \"icons\"\n  }, !!delivery && __jsx(\"span\", null, __jsx(DeliveryIcon, null)), !!safe_deal && __jsx(\"span\", null, __jsx(SafeIcon, null)), !!exchange && __jsx(\"span\", null, __jsx(SwapIcon, null))))), __jsx(CardActionArea, null, __jsx(CardContent, null, isFetch ? __jsx(React.Fragment, null, __jsx(Skeleton, {\n    variant: \"rect\"\n  }), __jsx(Skeleton, {\n    variant: \"rect\"\n  }), __jsx(Skeleton, {\n    variant: \"rect\"\n  }), __jsx(\"br\", null), __jsx(Skeleton, {\n    variant: \"rect\"\n  })) : __jsx(React.Fragment, null, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"initial\",\n    noWrap: true\n  }, title), __jsx(Typography, {\n    variant: \"h5\",\n    color: \"initial\"\n  }, price, __jsx(\"span\", null, t(currency.name))), __jsx(Typography, {\n    variant: \"caption\",\n    noWrap: true\n  }, `${city.name}, ${region.name}`), __jsx(Typography, {\n    variant: \"caption\"\n  }, created_at))))))));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/card/Card.tsx"],"names":["React","Link","useTranslation","Card","CardActionArea","CardContent","CardMedia","IconButton","Typography","Skeleton","FavoriteIcon","DeliveryIcon","SafeIcon","SwapIcon","transformTitle","useStyles","CardItem","props","t","id","isFetch","images","delivery","safe_deal","exchange","title","price","created_at","currency","ads_type","region","city","translatedTitle","classes","root","skeleton","length","url","default","mark","name"],"mappings":"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","sourcesContent":["import React, {FC} from 'react';\r\nimport {Link} from '@root/i18n';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    IconButton,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {\r\n    FavoriteIcon,\r\n    DeliveryIcon,\r\n    SafeIcon,\r\n    SwapIcon\r\n} from '@src/components/elements/icons';\r\nimport {InnerCardData} from \"@root/interfaces/CardData\";\r\nimport {transformTitle} from \"@src/helpers\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\ntype CardItemProps = {\r\n    isFetch: boolean;\r\n} & InnerCardData;\r\n\r\nexport const CardItem: FC<CardItemProps> = (props) => {\r\n    const {t} = useTranslation(['common']);\r\n\r\n    const {\r\n        id,\r\n        isFetch,\r\n        images,\r\n        delivery,\r\n        safe_deal,\r\n        exchange,\r\n        title,\r\n        price,\r\n        created_at,\r\n        currency,\r\n        ads_type,\r\n        region,\r\n        city\r\n    } = props;\r\n\r\n    const translatedTitle = transformTitle(title);\r\n\r\n    const classes = useStyles(ads_type);\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton className='favorite-btn'>\r\n                <FavoriteIcon id={id}/>\r\n            </IconButton>\r\n            <Link\r\n                href={`/obyavlenie/${translatedTitle}-${id}`}\r\n            >\r\n                <a>\r\n                    <Card\r\n                        elevation={0}\r\n                        title={title}\r\n                    >\r\n                        {isFetch\r\n                            ? <Skeleton variant=\"rect\" className={classes.skeleton}/>\r\n                            : <CardMedia\r\n                                className=\"card-media\"\r\n                                image={images.length ? images[0].url.default : null}\r\n                            >\r\n                                <div className=\"card-header\">\r\n                                    <div className='title'>\r\n                                        <Typography variant=\"subtitle2\">\r\n                                            {t(ads_type ? ads_type.mark : 'ancmnt')}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className='icons'>\r\n                                        {!!delivery && <span>\r\n                                                <DeliveryIcon/>\r\n                                            </span>}\r\n                                        {!!safe_deal && <span>\r\n                                            <SafeIcon/>\r\n                                        </span>}\r\n                                        {!!exchange && <span>\r\n                                            <SwapIcon/>\r\n                                        </span>}\r\n                                    </div>\r\n                                </div>\r\n                            </CardMedia>}\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                {isFetch\r\n                                    ? <>\r\n                                        <Skeleton variant=\"rect\"/>\r\n                                        <Skeleton variant=\"rect\"/>\r\n                                        <Skeleton variant=\"rect\"/>\r\n                                        <br/>\r\n                                        <Skeleton variant=\"rect\"/>\r\n                                    </>\r\n                                    : <>\r\n                                        <Typography variant=\"subtitle1\" color=\"initial\" noWrap>\r\n                                            {title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h5\" color=\"initial\">\r\n                                            {price}\r\n                                            <span>{t(currency.name)}</span>\r\n                                        </Typography>\r\n                                        <Typography variant=\"caption\" noWrap>\r\n                                            {`${city.name}, ${region.name}`}\r\n                                        </Typography>\r\n                                        <Typography variant=\"caption\">\r\n                                            {created_at}\r\n                                        </Typography>\r\n                                    </>}\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </a>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}