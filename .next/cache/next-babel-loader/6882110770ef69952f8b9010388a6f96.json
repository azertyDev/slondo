{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport { useSelector } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport { i18n } from \"@root/i18n\";\nimport { userAPI } from '@src/api/api';\nimport { MainLayout } from \"@src/components/MainLayout\";\nimport { CreateAdvrt } from \"./CreateAdvrt\";\nimport { createAdvrtSchema, isRequired } from \"@root/validation_schemas/createAdvrtSchema\";\nimport { autoSelectKeys, textFieldKeys } from \"../create_advrt/advrt_form/AdvrtFormContainer\";\nimport { CameraIcon } from \"@src/components/elements/icons\";\nconst initCreateAdState = {\n  isFetch: false,\n  error: null,\n  adType: {\n    id: null,\n    name: '',\n    currency: [],\n    expired: []\n  },\n  category: {\n    id: null,\n    name: '',\n    childs: []\n  },\n  subCategory: {\n    id: null,\n    name: '',\n    data: {}\n  }\n};\nconst initPhotos = Array.from({\n  length: 8\n}, (_, k) => k).map(k => ({\n  file: {\n    name: k.toString()\n  },\n  url: __jsx(CameraIcon, null)\n}));\nconst initFormFields = {\n  isFetch: false,\n  error: null,\n  title: '',\n  safe_deal: false,\n  delivery: false,\n  exchange: false,\n  location: null,\n  files: initPhotos,\n  description: '',\n  phone: '',\n  price: '',\n  currency: {\n    id: null,\n    name: ''\n  },\n  avalTime: {\n    isActive: false,\n    start_time: '00:00',\n    end_time: '00:00',\n    week: [{\n      id: 1,\n      name: 'Пн'\n    }, {\n      id: 2,\n      name: 'Вт'\n    }, {\n      id: 3,\n      name: 'Ср'\n    }, {\n      id: 4,\n      name: 'Чт'\n    }, {\n      id: 5,\n      name: 'Пт'\n    }, {\n      id: 6,\n      name: 'Сб'\n    }, {\n      id: 7,\n      name: 'Вс'\n    }]\n  },\n  auction: {\n    duration: {\n      id: null,\n      expiration_at: null\n    },\n    offer_the_price: false,\n    auto_renewal: false,\n    reserve_price: '',\n    price_by_now: {\n      isActive: false,\n      value: ''\n    },\n    display_phone: false\n  },\n  adParams: {\n    safety: [],\n    multimedia: [],\n    assistant: [],\n    exterior: [],\n    car_climate: [],\n    airbags: []\n  }\n};\nexport const CreateAdvrtContainer = () => {\n  const lang = i18n.language;\n  const categoriesList = useSelector(({\n    categories\n  }) => categories.list);\n  const {\n    0: tabValue,\n    1: setTabValue\n  } = useState(1);\n  const {\n    0: adTypes,\n    1: setAdTypes\n  } = useState([]);\n  const {\n    0: createAdvrt,\n    1: setCreateAdvrt\n  } = useState(initCreateAdState);\n  const {\n    adType,\n    category,\n    subCategory\n  } = createAdvrt;\n  const {\n    0: isForm,\n    1: setIsForm\n  } = useState(false);\n  const {\n    0: isPreview,\n    1: setIsPreview\n  } = useState(false);\n  const {\n    0: isSuccess,\n    1: setIsSuccess\n  } = useState(false);\n  const formik = useFormik({\n    initialValues: initFormFields,\n    validationSchema: createAdvrtSchema,\n    onSubmit\n  });\n  const {\n    values,\n    setValues,\n    setErrors\n  } = formik;\n  const {\n    adParams\n  } = values;\n  const adParamsLen = Object.keys(adParams).length;\n\n  const getAdTypes = async () => {\n    try {\n      setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n        isFetch: true\n      }));\n      const adTypes = await userAPI.getAdTypes(lang);\n      setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n        isFetch: false\n      }));\n      setAdTypes(adTypes);\n      setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n        adType: adTypes[0]\n      }));\n    } catch (error) {\n      setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n        error\n      }));\n    }\n  };\n\n  const handleTab = (_, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const setAdType = () => {\n    const [selectedAdType] = adTypes.filter(type => type.id === tabValue);\n    setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n      adType: selectedAdType\n    }));\n  };\n\n  const handleCategory = category => () => {\n    setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n      error: null,\n      category\n    }));\n  };\n\n  const handleSubCategory = (id, name) => async () => {\n    try {\n      if (id !== undefined) {\n        setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n          isFetch: true\n        }));\n        const data = await userAPI.getAdDataForCreate(category.id, id, lang);\n        setIsForm(true);\n        setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n          isFetch: false,\n          subCategory: {\n            id,\n            name,\n            data\n          }\n        }));\n      } else {\n        setIsForm(true);\n        setCreateAdvrt(_objectSpread(_objectSpread({}, initCreateAdState), {}, {\n          adType: createAdvrt.adType,\n          category: createAdvrt.category\n        }));\n      }\n    } catch ({\n      message\n    }) {\n      setCreateAdvrt(_objectSpread(_objectSpread({}, createAdvrt), {}, {\n        error: message\n      }));\n    }\n  };\n\n  const getFormData = data => {\n    const form = new FormData();\n    const {\n      avalTime,\n      location,\n      files,\n      adParams,\n      auction\n    } = data;\n    form.set('ads_type_id', adType.id.toString());\n    form.set('parent_categories_id', category.id.toString());\n\n    if (subCategory.id) {\n      form.set('child_categories_id', subCategory.id.toString());\n    }\n\n    form.set('title', data.title);\n    form.set('safe_deal', Number(data.safe_deal).toString());\n    form.set('delivery', Number(data.delivery).toString());\n    form.set('exchange', Number(data.exchange).toString());\n    form.set('phone', data.phone);\n    form.set('description', data.description);\n    form.set('price', data.price);\n    form.set('currency_id', data.currency.id.toString());\n    files.forEach(({\n      file\n    }) => form.append('files[]', file, file.name));\n\n    if (avalTime.isActive) {\n      avalTime.week.forEach((day, i) => form.append(`week[${i}]`, day.id.toString()));\n      form.set('start_time', avalTime.start_time.toString());\n      form.set('end_time', avalTime.end_time.toString());\n    }\n\n    for (const key in location) {\n      if (typeof location[key] === 'number') {\n        form.set(key, Number(location[key]).toString());\n      }\n    }\n\n    for (let key in adParams) {\n      const value = adParams[key];\n\n      if (value) {\n        if (typeof value === 'string') {\n          const validKey = key.replace('_value', '');\n\n          if (textFieldKeys.some(k => k === validKey)) {\n            key = validKey;\n          }\n\n          form.set(key, value);\n        } else if (Array.isArray(value)) {\n          value.forEach((value, i) => form.append(`${key}[${i}]`, value.id));\n        } else {\n          if (value.id) {\n            switch (key) {\n              case 'models':\n                key = 'model';\n                break;\n\n              case 'colors':\n                key = 'color';\n            }\n\n            form.set(`${key}_id`, value.id);\n          }\n        }\n      }\n    }\n\n    if (adType.id !== 1) {\n      form.set('duration_id', auction.duration.id.toString());\n      form.set('display_phone', Number(auction.display_phone).toString());\n\n      if (adType.id === 3) {\n        form.set('reserve_price', auction.reserve_price);\n        form.set('auto_renewal', Number(auction.auto_renewal).toString());\n        form.set('offer_the_price', Number(auction.offer_the_price).toString());\n\n        if (auction.price_by_now.isActive) {\n          form.set('price_by_now', auction.price_by_now.value);\n        }\n      }\n    } // for (const key of form.entries()) {\n    //     console.log(key[0] + '-' + key[1]);\n    // }\n\n\n    return form;\n  };\n\n  async function onSubmit(values) {\n    try {\n      if (!isPreview) {\n        setIsPreview(true);\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          isFetch: true\n        }));\n        const data = getFormData(values);\n        await userAPI.createAdvrt(data);\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          isFetch: false\n        }));\n        setIsSuccess(true);\n        setIsPreview(false);\n      }\n    } catch (e) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        error: e.message\n      }));\n    }\n  }\n\n  const setReqValues = () => {\n    const reqVals = {};\n    const reqParamsVals = {};\n    const adParamsVals = subCategory.data;\n\n    if (category.id === 11) {\n      reqVals['price'] = '0';\n    }\n\n    if (adType.currency.length !== 0) {\n      reqVals['currency'] = adType.currency.filter(cur => cur.name === 'sum')[0];\n    }\n\n    if (adType.id !== 1) {\n      reqVals['auction'] = _objectSpread(_objectSpread({}, values.auction), {}, {\n        duration: adType.expired[0]\n      });\n    }\n\n    Object.keys(adParamsVals).forEach(key => {\n      if (isRequired(key) && adParams[key] === undefined) {\n        if (key === 'manufacturer' && subCategory.id == 1) {\n          reqParamsVals['models'] = {\n            id: null,\n            name: 'Не выбрано'\n          };\n        }\n\n        if (Array.isArray(adParamsVals[key])) {\n          reqParamsVals[key] = {\n            id: null,\n            name: 'Не выбрано'\n          };\n        } else {\n          reqParamsVals[key] = adParamsVals[key];\n        }\n      } else if (autoSelectKeys.some(k => k === key)) {\n        if (textFieldKeys.some(k => k === key)) {\n          reqParamsVals[`${key}_value`] = '';\n        }\n\n        reqParamsVals[key] = adParamsVals[key][0];\n      }\n    });\n    setValues(_objectSpread(_objectSpread(_objectSpread({}, initFormFields), reqVals), {}, {\n      adParams: _objectSpread(_objectSpread({}, adParams), reqParamsVals)\n    }));\n  };\n\n  useEffect(() => {\n    getAdTypes();\n  }, []);\n  useEffect(() => {\n    adTypes.length && setAdType();\n  }, [tabValue]);\n  useEffect(() => {\n    setReqValues();\n    setErrors({});\n  }, [subCategory.id, subCategory.name, adParamsLen]); // console.log(createAdvrt)\n\n  console.log(values);\n  return __jsx(MainLayout, null, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, __jsx(CreateAdvrt, {\n    formik: formik,\n    isForm: isForm,\n    setIsForm: setIsForm,\n    isSuccess: isSuccess,\n    setIsSuccess: setIsSuccess,\n    handleTab: handleTab,\n    handleCategory: handleCategory,\n    handleSubCategory: handleSubCategory,\n    adTypes: adTypes,\n    tabValue: tabValue,\n    createAdvrt: createAdvrt,\n    categoriesList: categoriesList\n  })));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/CreateAdvrtContainer.tsx"],"names":["React","useEffect","useState","Container","useSelector","useFormik","i18n","userAPI","MainLayout","CreateAdvrt","createAdvrtSchema","isRequired","autoSelectKeys","textFieldKeys","CameraIcon","initCreateAdState","isFetch","error","adType","id","name","currency","expired","category","childs","subCategory","data","initPhotos","Array","from","length","_","k","map","file","toString","url","initFormFields","title","safe_deal","delivery","exchange","location","files","description","phone","price","avalTime","isActive","start_time","end_time","week","auction","duration","expiration_at","offer_the_price","auto_renewal","reserve_price","price_by_now","value","display_phone","adParams","safety","multimedia","assistant","exterior","car_climate","airbags","CreateAdvrtContainer","lang","language","categoriesList","categories","list","tabValue","setTabValue","adTypes","setAdTypes","createAdvrt","setCreateAdvrt","isForm","setIsForm","isPreview","setIsPreview","isSuccess","setIsSuccess","formik","initialValues","validationSchema","onSubmit","values","setValues","setErrors","adParamsLen","Object","keys","getAdTypes","handleTab","newValue","setAdType","selectedAdType","filter","type","handleCategory","handleSubCategory","undefined","getAdDataForCreate","message","getFormData","form","FormData","set","Number","forEach","append","day","i","key","validKey","replace","some","isArray","e","setReqValues","reqVals","reqParamsVals","adParamsVals","cur","console","log"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {Container} from '@material-ui/core';\r\nimport {useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {i18n} from \"@root/i18n\";\r\nimport {userAPI} from '@src/api/api';\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {MainLayout} from \"@src/components/MainLayout\";\r\nimport {CreateAdvrt} from \"./CreateAdvrt\";\r\nimport {CreateAdFields, FileType} from \"@root/interfaces/Advertisement\";\r\nimport {createAdvrtSchema, isRequired} from \"@root/validation_schemas/createAdvrtSchema\";\r\nimport {autoSelectKeys, textFieldKeys} from \"../create_advrt/advrt_form/AdvrtFormContainer\";\r\nimport {CameraIcon} from \"@src/components/elements/icons\";\r\n\r\n\r\nconst initCreateAdState = {\r\n    isFetch: false,\r\n    error: null,\r\n    adType: {\r\n        id: null,\r\n        name: '',\r\n        currency: [],\r\n        expired: [],\r\n    },\r\n    category: {\r\n        id: null,\r\n        name: '',\r\n        childs: []\r\n    },\r\n    subCategory: {\r\n        id: null,\r\n        name: '',\r\n        data: {}\r\n    }\r\n};\r\n\r\nconst initPhotos: FileType[] = Array.from({length: 8}, (_, k) => k).map((k) => ({\r\n    file: {\r\n        name: k.toString()\r\n    },\r\n    url: <CameraIcon/>\r\n}));\r\n\r\nconst initFormFields: CreateAdFields = {\r\n    isFetch: false,\r\n    error: null,\r\n    title: '',\r\n    safe_deal: false,\r\n    delivery: false,\r\n    exchange: false,\r\n    location: null,\r\n    files: initPhotos,\r\n    description: '',\r\n    phone: '',\r\n    price: '',\r\n    currency: {\r\n        id: null,\r\n        name: ''\r\n    },\r\n    avalTime: {\r\n        isActive: false,\r\n        start_time: '00:00',\r\n        end_time: '00:00',\r\n        week: [\r\n            {id: 1, name: 'Пн'},\r\n            {id: 2, name: 'Вт'},\r\n            {id: 3, name: 'Ср'},\r\n            {id: 4, name: 'Чт'},\r\n            {id: 5, name: 'Пт'},\r\n            {id: 6, name: 'Сб'},\r\n            {id: 7, name: 'Вс'}\r\n        ],\r\n    },\r\n    auction: {\r\n        duration: {\r\n            id: null,\r\n            expiration_at: null\r\n        },\r\n        offer_the_price: false,\r\n        auto_renewal: false,\r\n        reserve_price: '',\r\n        price_by_now: {\r\n            isActive: false,\r\n            value: ''\r\n        },\r\n        display_phone: false,\r\n    },\r\n    adParams: {\r\n        safety: [],\r\n        multimedia: [],\r\n        assistant: [],\r\n        exterior: [],\r\n        car_climate: [],\r\n        airbags: [],\r\n    }\r\n};\r\n\r\nexport const CreateAdvrtContainer: FC<void> = () => {\r\n    const lang = i18n.language;\r\n\r\n    const categoriesList = useSelector(({categories}: RootState) => categories.list);\r\n\r\n    const [tabValue, setTabValue] = useState(1);\r\n\r\n    const [adTypes, setAdTypes] = useState([]);\r\n\r\n    const [createAdvrt, setCreateAdvrt] = useState(initCreateAdState);\r\n    const {adType, category, subCategory} = createAdvrt;\r\n\r\n    const [isForm, setIsForm] = useState(false);\r\n\r\n    const [isPreview, setIsPreview] = useState(false);\r\n\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        initialValues: initFormFields,\r\n        validationSchema: createAdvrtSchema,\r\n        onSubmit\r\n    });\r\n\r\n    const {values, setValues, setErrors} = formik;\r\n    const {adParams} = values;\r\n    const adParamsLen = Object.keys(adParams).length;\r\n\r\n    const getAdTypes = async () => {\r\n        try {\r\n            setCreateAdvrt({...createAdvrt, isFetch: true});\r\n\r\n            const adTypes = await userAPI.getAdTypes(lang);\r\n\r\n            setCreateAdvrt({...createAdvrt, isFetch: false});\r\n\r\n            setAdTypes(adTypes);\r\n            setCreateAdvrt({\r\n                ...createAdvrt,\r\n                adType: adTypes[0]\r\n            })\r\n        } catch (error) {\r\n            setCreateAdvrt({...createAdvrt, error});\r\n        }\r\n    };\r\n\r\n    const handleTab = (_, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    const setAdType = () => {\r\n        const [selectedAdType] = adTypes.filter(type => type.id === tabValue);\r\n\r\n        setCreateAdvrt({\r\n            ...createAdvrt,\r\n            adType: selectedAdType\r\n        });\r\n    };\r\n\r\n    const handleCategory = (category) => () => {\r\n        setCreateAdvrt({\r\n            ...createAdvrt,\r\n            error: null,\r\n            category\r\n        });\r\n    };\r\n\r\n    const handleSubCategory = (id, name) => async () => {\r\n        try {\r\n            if (id !== undefined) {\r\n                setCreateAdvrt({\r\n                    ...createAdvrt,\r\n                    isFetch: true\r\n                });\r\n\r\n                const data = await userAPI.getAdDataForCreate(category.id, id, lang);\r\n\r\n                setIsForm(true);\r\n\r\n                setCreateAdvrt({\r\n                    ...createAdvrt,\r\n                    isFetch: false,\r\n                    subCategory: {id, name, data}\r\n                });\r\n            } else {\r\n                setIsForm(true);\r\n                setCreateAdvrt({\r\n                    ...initCreateAdState,\r\n                    adType: createAdvrt.adType,\r\n                    category: createAdvrt.category\r\n                });\r\n            }\r\n        } catch ({message}) {\r\n            setCreateAdvrt({\r\n                ...createAdvrt,\r\n                error: message\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    const getFormData = (data: CreateAdFields) => {\r\n        const form = new FormData();\r\n        const {\r\n            avalTime,\r\n            location,\r\n            files,\r\n            adParams,\r\n            auction\r\n        } = data;\r\n\r\n        form.set('ads_type_id', adType.id.toString());\r\n        form.set('parent_categories_id', category.id.toString());\r\n        if (subCategory.id) {\r\n            form.set('child_categories_id', subCategory.id.toString());\r\n        }\r\n        form.set('title', data.title);\r\n        form.set('safe_deal', Number(data.safe_deal).toString());\r\n        form.set('delivery', Number(data.delivery).toString());\r\n        form.set('exchange', Number(data.exchange).toString());\r\n        form.set('phone', data.phone);\r\n        form.set('description', data.description);\r\n        form.set('price', data.price);\r\n        form.set('currency_id', data.currency.id.toString());\r\n\r\n        files.forEach(({file}: any) => form.append('files[]', file, file.name));\r\n\r\n        if (avalTime.isActive) {\r\n            avalTime.week.forEach((day, i) => (\r\n                form.append(`week[${i}]`, day.id.toString())\r\n            ));\r\n            form.set('start_time', avalTime.start_time.toString());\r\n            form.set('end_time', avalTime.end_time.toString());\r\n        }\r\n\r\n        for (const key in location) {\r\n            if (typeof location[key] === 'number') {\r\n                form.set(key, Number(location[key]).toString());\r\n            }\r\n        }\r\n\r\n        for (let key in adParams) {\r\n            const value = adParams[key];\r\n            if (value) {\r\n                if (typeof value === 'string') {\r\n                    const validKey = key.replace('_value', '');\r\n                    if (textFieldKeys.some(k => k === validKey)) {\r\n                        key = validKey;\r\n                    }\r\n                    form.set(key, value);\r\n                } else if (Array.isArray(value)) {\r\n                    value.forEach((value, i) => (\r\n                        form.append(`${key}[${i}]`, value.id))\r\n                    )\r\n                } else {\r\n                    if (value.id) {\r\n                        switch (key) {\r\n                            case 'models' :\r\n                                key = 'model';\r\n                                break;\r\n                            case 'colors' :\r\n                                key = 'color';\r\n                        }\r\n                        form.set(`${key}_id`, value.id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (adType.id !== 1) {\r\n            form.set('duration_id', auction.duration.id.toString());\r\n            form.set('display_phone', Number(auction.display_phone).toString());\r\n            if (adType.id === 3) {\r\n                form.set('reserve_price', auction.reserve_price);\r\n                form.set('auto_renewal', Number(auction.auto_renewal).toString());\r\n                form.set('offer_the_price', Number(auction.offer_the_price).toString());\r\n                if (auction.price_by_now.isActive) {\r\n                    form.set('price_by_now', auction.price_by_now.value);\r\n                }\r\n            }\r\n        }\r\n\r\n        // for (const key of form.entries()) {\r\n        //     console.log(key[0] + '-' + key[1]);\r\n        // }\r\n\r\n        return form;\r\n    };\r\n\r\n    async function onSubmit(values: CreateAdFields) {\r\n        try {\r\n            if (!isPreview) {\r\n                setIsPreview(true);\r\n            } else {\r\n                setValues({...values, isFetch: true});\r\n\r\n                const data = getFormData(values);\r\n                await userAPI.createAdvrt(data);\r\n\r\n                setValues({...values, isFetch: false});\r\n\r\n                setIsSuccess(true);\r\n                setIsPreview(false);\r\n            }\r\n        } catch (e) {\r\n            setValues({...values, error: e.message});\r\n        }\r\n    }\r\n\r\n    const setReqValues = () => {\r\n        const reqVals = {};\r\n        const reqParamsVals = {};\r\n\r\n        const adParamsVals = subCategory.data;\r\n\r\n        if (category.id === 11) {\r\n            reqVals['price'] = '0';\r\n        }\r\n\r\n        if (adType.currency.length !== 0) {\r\n            reqVals['currency'] = adType.currency.filter(cur => cur.name === 'sum')[0];\r\n        }\r\n\r\n        if (adType.id !== 1) {\r\n            reqVals['auction'] = {\r\n                ...values.auction,\r\n                duration: adType.expired[0]\r\n            };\r\n        }\r\n\r\n        Object.keys(adParamsVals).forEach(key => {\r\n            if (isRequired(key) && adParams[key] === undefined) {\r\n                if (key === 'manufacturer' && subCategory.id == 1) {\r\n                    reqParamsVals['models'] = {id: null, name: 'Не выбрано'};\r\n                }\r\n                if (Array.isArray(adParamsVals[key])) {\r\n                    reqParamsVals[key] = {id: null, name: 'Не выбрано'};\r\n                } else {\r\n                    reqParamsVals[key] = adParamsVals[key];\r\n                }\r\n            } else if (autoSelectKeys.some(k => k === key)) {\r\n                if (textFieldKeys.some(k => k === key)) {\r\n                    reqParamsVals[`${key}_value`] = '';\r\n                }\r\n                reqParamsVals[key] = adParamsVals[key][0];\r\n            }\r\n        });\r\n\r\n        setValues({\r\n            ...initFormFields,\r\n            ...reqVals,\r\n            adParams: {\r\n                ...adParams,\r\n                ...reqParamsVals\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAdTypes();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        adTypes.length && setAdType();\r\n    }, [tabValue]);\r\n\r\n    useEffect(() => {\r\n        setReqValues();\r\n        setErrors({});\r\n    }, [subCategory.id, subCategory.name, adParamsLen]);\r\n\r\n    // console.log(createAdvrt)\r\n    console.log(values)\r\n    return (\r\n        <MainLayout>\r\n            <Container maxWidth=\"lg\">\r\n                <CreateAdvrt\r\n                    formik={formik}\r\n                    isForm={isForm}\r\n                    setIsForm={setIsForm}\r\n                    isSuccess={isSuccess}\r\n                    setIsSuccess={setIsSuccess}\r\n                    handleTab={handleTab}\r\n                    handleCategory={handleCategory}\r\n                    handleSubCategory={handleSubCategory}\r\n                    adTypes={adTypes}\r\n                    tabValue={tabValue}\r\n                    createAdvrt={createAdvrt}\r\n                    categoriesList={categoriesList}\r\n                />\r\n            </Container>\r\n        </MainLayout>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}