{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _reducers;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  isFetch: false,\n  isAuth: false,\n  error: null\n};\nexport var authReducer = createSlice({\n  name: 'auth',\n  initialState: initialState,\n  reducers: (_reducers = {}, _defineProperty(_reducers, setIsAuthAction.type, function (state, action) {\n    return state.isAuth = action.payload;\n  }), _defineProperty(_reducers, fetchTokenBeginAction.type, function (state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      isFetch: true,\n      error: null\n    });\n  }), _defineProperty(_reducers, fetchTokenSuccessAction.type, function (state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      isFetch: false\n    }, action.payload);\n  }), _defineProperty(_reducers, fetchTokenFailureAction.type, function (state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      isFetch: false,\n      error: action.payload\n    });\n  }), _reducers)\n});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/slices/authReducer.ts"],"names":["createSlice","initialState","isFetch","isAuth","error","authReducer","name","reducers","setIsAuthAction","type","state","action","payload","fetchTokenBeginAction","fetchTokenSuccessAction","fetchTokenFailureAction"],"mappings":";;;;;;;;AAAA,SAAsBA,WAAtB,QAAwC,kBAAxC;AASA,IAAMC,YAAuB,GAAG;AAC5BC,EAAAA,OAAO,EAAE,KADmB;AAE5BC,EAAAA,MAAM,EAAE,KAFoB;AAG5BC,EAAAA,KAAK,EAAE;AAHqB,CAAhC;AAMA,OAAO,IAAMC,WAAW,GAAGL,WAAW,CAAC;AACnCM,EAAAA,IAAI,EAAE,MAD6B;AAEnCL,EAAAA,YAAY,EAAZA,YAFmC;AAGnCM,EAAAA,QAAQ,8CACHC,eAAe,CAACC,IADb,EACoB,UAACC,KAAD,EAAQC,MAAR;AAAA,WAAmBD,KAAK,CAACP,MAAN,GAAeQ,MAAM,CAACC,OAAzC;AAAA,GADpB,8BAEHC,qBAAqB,CAACJ,IAFnB,EAE0B,UAACC,KAAD;AAAA,2CACvBA,KADuB;AAE1BR,MAAAA,OAAO,EAAE,IAFiB;AAG1BE,MAAAA,KAAK,EAAE;AAHmB;AAAA,GAF1B,8BAOHU,uBAAuB,CAACL,IAPrB,EAO4B,UAACC,KAAD,EAAQC,MAAR;AAAA,2CACzBD,KADyB;AAE5BR,MAAAA,OAAO,EAAE;AAFmB,OAGzBS,MAAM,CAACC,OAHkB;AAAA,GAP5B,8BAYHG,uBAAuB,CAACN,IAZrB,EAY4B,UAACC,KAAD,EAAQC,MAAR;AAAA,2CACzBD,KADyB;AAE5BR,MAAAA,OAAO,EAAE,KAFmB;AAG5BE,MAAAA,KAAK,EAAEO,MAAM,CAACC;AAHc;AAAA,GAZ5B;AAH2B,CAAD,CAA/B","sourcesContent":["import {createAction, createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\nexport type AuthTypes = {\r\n    isFetch: boolean,\r\n    isAuth: boolean,\r\n    error?: any\r\n};\r\n\r\nconst initialState: AuthTypes = {\r\n    isFetch: false,\r\n    isAuth: false,\r\n    error: null\r\n};\r\n\r\nexport const authReducer = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers:{\r\n        [setIsAuthAction.type]: (state, action) => state.isAuth = action.payload,\r\n        [fetchTokenBeginAction.type]: (state) => ({\r\n            ...state,\r\n            isFetch: true,\r\n            error: null\r\n        }),\r\n        [fetchTokenSuccessAction.type]: (state, action) => ({\r\n            ...state,\r\n            isFetch: false,\r\n            ...action.payload\r\n        }),\r\n        [fetchTokenFailureAction.type]: (state, action) => ({\r\n            ...state,\r\n            isFetch: false,\r\n            error: action.payload\r\n        })\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}