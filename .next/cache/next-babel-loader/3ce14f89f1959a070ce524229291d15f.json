{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { TOTAL_FILES_LIMIT, TOTAL_FILES_SIZE_LIMIT } from '@root/src/constants';\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from 'react-beautiful-dnd';\nimport { useStyles } from './useStyles';\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nexport var PreviewPhotos = function PreviewPhotos(props) {\n  _s();\n\n  var images = props.images,\n      setImages = props.setImages;\n\n  var handleOnDragEnd = function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    var items = Array.from(images);\n\n    var _items$splice = items.splice(result.source.index, 1),\n        _items$splice2 = _slicedToArray(_items$splice, 1),\n        reorderedItem = _items$splice2[0];\n\n    items.splice(result.destination.index, 0, reorderedItem);\n    setImages(items);\n  };\n\n  var handleUploadFile = function handleUploadFile(_ref) {\n    var target = _ref.target;\n\n    if (target.files[0] && images.length < TOTAL_FILES_LIMIT) {\n      var totalSize = images.reduce(function (total, item) {\n        return total + item.file.size;\n      }, 0);\n\n      if (totalSize + target.files[0].size < TOTAL_FILES_SIZE_LIMIT) {\n        setImages([{\n          file: target.files[0],\n          url: URL.createObjectURL(target.files[0])\n        }].concat(_toConsumableArray(images)));\n      }\n    }\n  };\n\n  var removeFile = function removeFile(url) {\n    return function () {\n      images.map(function (item, index) {\n        if (item.url === url) {\n          images.splice(index, 1);\n          setImages(images);\n        }\n      });\n    };\n  };\n\n  console.log(images);\n  resetServerContext();\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: handleUploadFile,\n    accept: \"image/png,image/jpeg\"\n  }), __jsx(DragDropContext, {\n    onDragEnd: handleOnDragEnd\n  }, __jsx(Droppable, {\n    droppableId: \"images\",\n    direction: \"horizontal\"\n  }, function (provided) {\n    return __jsx(\"div\", _extends({\n      className: \"images-wrapper\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef\n    }), images.map(function (_ref2, index) {\n      var file = _ref2.file,\n          url = _ref2.url;\n      return __jsx(Draggable, {\n        key: url,\n        draggableId: url,\n        index: index\n      }, function (provided) {\n        return __jsx(\"div\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps), __jsx(\"img\", {\n          src: url,\n          style: {\n            width: '160px',\n            height: '120px',\n            objectFit: 'cover'\n          },\n          alt: file.name\n        }), __jsx(ButtonComponent, {\n          onClick: removeFile(url)\n        }, \"X\"));\n      });\n    }), provided.placeholder);\n  })));\n};\n\n_s(PreviewPhotos, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PreviewPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreviewPhotos\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/preview_photos/PreviewPhotos.tsx"],"names":["TOTAL_FILES_LIMIT","TOTAL_FILES_SIZE_LIMIT","React","DragDropContext","Droppable","Draggable","resetServerContext","useStyles","ButtonComponent","PreviewPhotos","props","images","setImages","handleOnDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","handleUploadFile","target","files","length","totalSize","reduce","total","item","file","size","url","URL","createObjectURL","removeFile","map","console","log","classes","root","provided","droppableProps","innerRef","draggableProps","dragHandleProps","width","height","objectFit","name","placeholder"],"mappings":"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","sourcesContent":["import {TOTAL_FILES_LIMIT, TOTAL_FILES_SIZE_LIMIT} from '@root/src/constants';\r\nimport React, {Dispatch, FC} from 'react';\r\nimport {DragDropContext, Droppable, Draggable, resetServerContext} from 'react-beautiful-dnd';\r\nimport {useStyles} from './useStyles';\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\n\r\n\r\nexport const PreviewPhotos: FC<{ images: [], setImages: Dispatch<any> }> = (props) => {\r\n    const {images, setImages} = props;\r\n\r\n    const handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n\r\n        const items = Array.from(images);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        setImages(items);\r\n    };\r\n\r\n    const handleUploadFile = ({target}) => {\r\n        if (target.files[0] && images.length < TOTAL_FILES_LIMIT) {\r\n\r\n            const totalSize = images.reduce((total, item: { file: { size: number } }) => total + item.file.size, 0);\r\n\r\n            if ((totalSize + target.files[0].size) < TOTAL_FILES_SIZE_LIMIT) {\r\n                setImages([{\r\n                    file: target.files[0],\r\n                    url: URL.createObjectURL(target.files[0])\r\n                },\r\n                    ...images\r\n                ]);\r\n            }\r\n        }\r\n    };\r\n\r\n    const removeFile = (url) => () => {\r\n        images.map((item: { url: string }, index) => {\r\n            if (item.url === url) {\r\n                images.splice(index, 1);\r\n                setImages(images);\r\n            }\r\n        })\r\n    };\r\n    console.log(images)\r\n    resetServerContext();\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <input type='file' onChange={handleUploadFile} accept=\"image/png,image/jpeg\"/>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId=\"images\" direction=\"horizontal\">\r\n                    {(provided) => (\r\n                        <div className=\"images-wrapper\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {images.map(({file, url}: any, index) => {\r\n                                return (\r\n                                    <Draggable key={url} draggableId={url} index={index}>\r\n                                        {(provided) => (\r\n                                            <div\r\n                                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                                <img\r\n                                                    src={url}\r\n                                                    style={{width: '160px', height: '120px', objectFit: 'cover'}}\r\n                                                    alt={file.name}\r\n                                                />\r\n                                                <ButtonComponent onClick={removeFile(url)}>X</ButtonComponent>\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                );\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}