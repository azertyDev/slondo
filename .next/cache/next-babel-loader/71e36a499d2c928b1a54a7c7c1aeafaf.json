{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(workerFetchSelfData),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchFetchSelfData);\n\nimport { userApi } from '../api/api';\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { selfDataActionTypes, selfDataActions } from \"./actions/selfDataActions\";\nvar fetchSelfDataBegin = selfDataActions.fetchSelfDataBegin,\n    fetchSelfDataSuccess = selfDataActions.fetchSelfDataSuccess,\n    fetchSelfDataFailure = selfDataActions.fetchSelfDataFailure;\n\nfunction workerFetchSelfData() {\n  var data;\n  return _regeneratorRuntime.wrap(function workerFetchSelfData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return put(fetchSelfDataBegin());\n\n        case 3:\n          _context.next = 5;\n          return call(userApi.login);\n\n        case 5:\n          data = _context.sent;\n          _context.next = 8;\n          return put(fetchSelfDataSuccess(data));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put(fetchSelfDataFailure(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nexport default function watchFetchSelfData() {\n  return _regeneratorRuntime.wrap(function watchFetchSelfData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(selfDataActionTypes.FETCH_SELF_DATA_BEGIN, workerFetchSelfData);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/sagas.ts"],"names":["workerFetchSelfData","watchFetchSelfData","userApi","call","put","takeLatest","selfDataActionTypes","selfDataActions","fetchSelfDataBegin","fetchSelfDataSuccess","fetchSelfDataFailure","login","data","FETCH_SELF_DATA_BEGIN"],"mappings":";;oDAMUA,mB;qDAUeC,kB;;AAhBzB,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SAAQC,mBAAR,EAA6BC,eAA7B,QAAmD,2BAAnD;IAEOC,kB,GAAkED,e,CAAlEC,kB;IAAoBC,oB,GAA8CF,e,CAA9CE,oB;IAAsBC,oB,GAAwBH,e,CAAxBG,oB;;AAEjD,SAAUV,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMI,GAAG,CAACI,kBAAkB,EAAnB,CAAT;;AAFR;AAAA;AAGqB,iBAAML,IAAI,CAACD,OAAO,CAACS,KAAT,CAAV;;AAHrB;AAGcC,UAAAA,IAHd;AAAA;AAIQ,iBAAMR,GAAG,CAACK,oBAAoB,CAACG,IAAD,CAArB,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMQ,iBAAMR,GAAG,CAACM,oBAAoB,aAArB,CAAT;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAe,SAAUT,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMI,UAAU,CAACC,mBAAmB,CAACO,qBAArB,EAA4Cb,mBAA5C,CAAhB;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {userApi} from '../api/api'\r\nimport {call, put, takeLatest} from \"redux-saga/effects\";\r\nimport {selfDataActionTypes, selfDataActions} from \"./actions/selfDataActions\";\r\n\r\nconst {fetchSelfDataBegin, fetchSelfDataSuccess, fetchSelfDataFailure} = selfDataActions;\r\n\r\nfunction* workerFetchSelfData() {\r\n    try {\r\n        yield put(fetchSelfDataBegin());\r\n        const data = yield call(userApi.login);\r\n        yield put(fetchSelfDataSuccess(data));\r\n    } catch (e) {\r\n        yield put(fetchSelfDataFailure(e));\r\n    }\r\n}\r\n\r\nexport default function* watchFetchSelfData() {\r\n    yield takeLatest(selfDataActionTypes.FETCH_SELF_DATA_BEGIN, workerFetchSelfData);\r\n}"]},"metadata":{},"sourceType":"module"}