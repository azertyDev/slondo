{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { CustomMenu } from \"@src/components/elements/custom_menu/CustomMenu\";\nimport { useStyles } from './useStyles';\nexport const AdvrtSettingsBlock = props => {\n  const {\n    isPreview,\n    createAdvrt,\n    adsParams,\n    onBlur,\n    handleClickMenuItem\n  } = props;\n  const data = isPreview ? adsParams : createAdvrt.data;\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    justify: \"space-between\",\n    className: classes.root\n  }, Object.keys(data).map(key => {\n    if (Array.isArray(data[key]) && data[key].length && key !== 'adsParams' && key !== 'address') {\n      const newData = [{\n        id: null,\n        name: 'Не выбрано'\n      }, ...data[key]];\n      return listGenerator(newData, key);\n    } else if (!Array.isArray(data[key]) && isPreview && data[key]) {\n      return listGenerator(data, key);\n    }\n  }), !isPreview && Object.keys(data).map(key => adsParams[key] && Object.keys(adsParams[key]).map(innerKey => {\n    if (Array.isArray(adsParams[key][innerKey]) && adsParams[key][innerKey].length) {\n      const newData = [{\n        id: null,\n        name: 'Не выбрано'\n      }, ...adsParams[key][innerKey]];\n      return listGenerator(newData, innerKey);\n    }\n  }))));\n\n  function listGenerator(data, key) {\n    return __jsx(Grid, {\n      item: true,\n      container: true,\n      key: key,\n      xs: 12,\n      sm: 5\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6\n    }, __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, __jsx(\"strong\", null, key))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6\n    }, isPreview ? __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, __jsx(\"strong\", null, data[key].name)) : __jsx(CustomMenu, {\n      valueName: adsParams[key] ? adsParams[key].name : data[0].name,\n      items: data,\n      onBlur: onBlur,\n      onClick: handleClickMenuItem(key)\n    })));\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/advrtForm/advrt_settings_block/AdvrtSettingsBlock.tsx"],"names":["React","Grid","Typography","CustomMenu","useStyles","AdvrtSettingsBlock","props","isPreview","createAdvrt","adsParams","onBlur","handleClickMenuItem","data","classes","root","Object","keys","map","key","Array","isArray","length","newData","id","name","listGenerator","innerKey"],"mappings":"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","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport {CustomMenu} from \"@src/components/elements/custom_menu/CustomMenu\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const AdvrtSettingsBlock: FC<any> = (props) => {\r\n    const {\r\n        isPreview,\r\n        createAdvrt,\r\n        adsParams,\r\n        onBlur,\r\n        handleClickMenuItem\r\n    } = props;\r\n\r\n    const data = isPreview ? adsParams : createAdvrt.data;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Grid item container xs={12} justify='space-between' className={classes.root}>\r\n                {\r\n                    Object.keys(data).map((key) => {\r\n                        if (Array.isArray(data[key]) && data[key].length && key !== 'adsParams' && key !== 'address') {\r\n                            const newData = [{id: null, name: 'Не выбрано'}, ...data[key]];\r\n                            return listGenerator(newData, key);\r\n                        } else if (!Array.isArray(data[key]) && isPreview && data[key]) {\r\n                            return listGenerator(data, key);\r\n                        }\r\n                    })\r\n                }\r\n                {\r\n                    !isPreview && Object.keys(data).map((key) => (\r\n                        adsParams[key] && Object.keys(adsParams[key]).map(innerKey => {\r\n                            if (Array.isArray(adsParams[key][innerKey]) && adsParams[key][innerKey].length) {\r\n                                const newData = [{id: null, name: 'Не выбрано'}, ...adsParams[key][innerKey]];\r\n                                return listGenerator(newData, innerKey);\r\n                            }\r\n                        })\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n\r\n    function listGenerator(data, key) {\r\n        return (\r\n            <Grid\r\n                item\r\n                container\r\n                key={key}\r\n                xs={12}\r\n                sm={5}\r\n            >\r\n                <Grid item xs={12} sm={6}>\r\n                    <Typography variant=\"subtitle1\">\r\n                        <strong>{key}</strong>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    {\r\n                        isPreview\r\n                            ? <Typography variant=\"subtitle1\">\r\n                                <strong>{data[key].name}</strong>\r\n                            </Typography>\r\n                            : <CustomMenu\r\n                                valueName={adsParams[key] ? adsParams[key].name : data[0].name}\r\n                                items={data}\r\n                                onBlur={onBlur}\r\n                                onClick={handleClickMenuItem(key)}\r\n                            />\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}