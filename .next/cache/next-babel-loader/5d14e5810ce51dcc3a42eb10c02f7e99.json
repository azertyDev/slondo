{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { userAPI } from \"@src/api/api\";\nexport var fetchCategories = createAsyncThunk('categories/fetchCategories', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(lang, _ref) {\n    var rejectWithValue;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            rejectWithValue = _ref.rejectWithValue;\n            _context.prev = 1;\n            _context.next = 4;\n            return userAPI.getCategories(lang);\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", rejectWithValue(_context.t0.message));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 7]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/thunks/categoriesThunk.ts"],"names":["createAsyncThunk","userAPI","fetchCategories","lang","rejectWithValue","getCategories","message"],"mappings":";;AAAA,SAAQA,gBAAR,QAA+B,kBAA/B;AACA,SAAQC,OAAR,QAAsB,cAAtB;AAGA,OAAO,IAAMC,eAAe,GAAGF,gBAAgB,CAC3C,4BAD2C;AAAA,uEAE3C,iBAAOG,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAcC,YAAAA,eAAd,QAAcA,eAAd;AAAA;AAAA;AAAA,mBAEqBH,OAAO,CAACI,aAAR,CAAsBF,IAAtB,CAFrB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAIeC,eAAe,CAAC,YAAEE,OAAH,CAJ9B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAF2C;;AAAA;AAAA;AAAA;AAAA,IAAxC","sourcesContent":["import {createAsyncThunk} from \"@reduxjs/toolkit\"\r\nimport {userAPI} from \"@src/api/api\"\r\n\r\n\r\nexport const fetchCategories = createAsyncThunk<object[], string>(\r\n    'categories/fetchCategories',\r\n    async (lang, {rejectWithValue}) => {\r\n        try {\r\n            return await userAPI.getCategories(lang);\r\n        } catch (e) {\r\n            return rejectWithValue(e.message);\r\n        }\r\n    }\r\n);"]},"metadata":{},"sourceType":"module"}