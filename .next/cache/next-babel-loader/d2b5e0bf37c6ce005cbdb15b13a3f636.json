{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useEffect } from 'react';\nimport { CustomSlider } from '@src/components/elements/custom_slider/CustomSlider';\nimport { useStyles } from './useStyles';\nimport { Modal, Typography } from '@material-ui/core';\nimport { ButtonComponent } from '@src/components/elements/button/Button';\nexport var ModalSyncSliders = function ModalSyncSliders(props) {\n  _s();\n\n  var open = props.open,\n      onClose = props.onClose,\n      title = props.title,\n      imgs = props.imgs,\n      initialSlide = props.initialSlide,\n      setInitialSlide = props.setInitialSlide;\n\n  var _useState = useState({\n    nav1: null,\n    nav2: null\n  }),\n      slidersNav = _useState[0],\n      setSlidersNav = _useState[1];\n\n  var slider1 = useRef();\n  var slider2 = useRef();\n\n  var handleAfterChange = function handleAfterChange(slide) {\n    setInitialSlide(slide);\n  };\n\n  var prev = function prev() {\n    slidersNav.nav2.slickPrev();\n  };\n\n  var next = function next() {\n    slidersNav.nav2.slickNext();\n  };\n\n  useEffect(function () {\n    setSlidersNav({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, []);\n  var classes = useStyles();\n  return __jsx(Modal, {\n    open: open,\n    onClose: onClose,\n    className: classes.modal\n  }, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    className: \"title\",\n    variant: \"h6\"\n  }, title), __jsx(\"div\", {\n    className: classes.firstSlider\n  }, __jsx(CustomSlider, {\n    ref: slider1,\n    asNavFor: slidersNav.nav2,\n    centerMode: imgs.length === 1,\n    initialSlide: initialSlide,\n    afterChange: handleAfterChange\n  }, imgs.map(function (img, i) {\n    return __jsx(\"img\", {\n      key: i,\n      alt: img.alt,\n      src: img.url[\"default\"]\n    });\n  }))), __jsx(\"div\", {\n    className: classes.secondSlider\n  }, __jsx(CustomSlider, {\n    ref: slider2,\n    asNavFor: slidersNav.nav1,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    focusOnSelect: true,\n    arrows: false,\n    initialSlide: initialSlide\n  }, imgs.map(function (_ref, i) {\n    var url = _ref.url,\n        alt = _ref.alt;\n    return __jsx(\"img\", {\n      key: i,\n      alt: alt,\n      src: url[\"default\"]\n    });\n  })), __jsx(\"div\", {\n    className: \"slider-counter\"\n  }, __jsx(ButtonComponent, {\n    onClick: prev\n  }, \"<\"), __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, initialSlide + 1, \" / \", imgs.length), __jsx(ButtonComponent, {\n    onClick: next\n  }, \">\")))));\n};\n\n_s(ModalSyncSliders, \"LKpQkc+JRJV91MCZASpQnHETC2s=\", false, function () {\n  return [useStyles];\n});\n\n_c = ModalSyncSliders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalSyncSliders\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/announcement/show_ancmnt/ancmnt_content/modal_sync_sliders/ModalSyncSliders.tsx"],"names":["React","useRef","useState","useEffect","CustomSlider","useStyles","Modal","Typography","ButtonComponent","ModalSyncSliders","props","open","onClose","title","imgs","initialSlide","setInitialSlide","nav1","nav2","slidersNav","setSlidersNav","slider1","slider2","handleAfterChange","slide","prev","slickPrev","next","slickNext","current","classes","modal","root","firstSlider","length","map","img","i","alt","url","secondSlider"],"mappings":";;;AAAA,OAAOA,KAAP,IAKIC,MALJ,EAMIC,QANJ,EAOIC,SAPJ,QAQO,OARP;AASA,SAAQC,YAAR,QAA2B,qDAA3B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,KAAR,EAAeC,UAAf,QAAgC,mBAAhC;AACA,SAAQC,eAAR,QAA8B,wCAA9B;AAcA,OAAO,IAAMC,gBAAsC,GAAG,SAAzCA,gBAAyC,CAACC,KAAD,EAAW;AAAA;;AAAA,MAEzDC,IAFyD,GAOzDD,KAPyD,CAEzDC,IAFyD;AAAA,MAGzDC,OAHyD,GAOzDF,KAPyD,CAGzDE,OAHyD;AAAA,MAIzDC,KAJyD,GAOzDH,KAPyD,CAIzDG,KAJyD;AAAA,MAIlDC,IAJkD,GAOzDJ,KAPyD,CAIlDI,IAJkD;AAAA,MAKzDC,YALyD,GAOzDL,KAPyD,CAKzDK,YALyD;AAAA,MAMzDC,eANyD,GAOzDN,KAPyD,CAMzDM,eANyD;;AAAA,kBASzBd,QAAQ,CAAC;AAACe,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAD,CATiB;AAAA,MAStDC,UATsD;AAAA,MAS1CC,aAT0C;;AAU7D,MAAMC,OAAkC,GAAGpB,MAAM,EAAjD;AACA,MAAMqB,OAAkC,GAAGrB,MAAM,EAAjD;;AAEA,MAAMsB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACjCR,IAAAA,eAAe,CAACQ,KAAD,CAAf;AACH,GAFD;;AAIA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfN,IAAAA,UAAU,CAACD,IAAX,CAAgBQ,SAAhB;AACH,GAFD;;AAIA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfR,IAAAA,UAAU,CAACD,IAAX,CAAgBU,SAAhB;AACH,GAFD;;AAIAzB,EAAAA,SAAS,CAAC,YAAM;AACZiB,IAAAA,aAAa,CAAC;AACVH,MAAAA,IAAI,EAAEI,OAAO,CAACQ,OADJ;AAEVX,MAAAA,IAAI,EAAEI,OAAO,CAACO;AAFJ,KAAD,CAAb;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,MAAMC,OAAO,GAAGzB,SAAS,EAAzB;AACA,SACI,MAAC,KAAD;AACI,IAAA,IAAI,EAAEM,IADV;AAEI,IAAA,OAAO,EAAEC,OAFb;AAGI,IAAA,SAAS,EAAEkB,OAAO,CAACC;AAHvB,KAKI;AAAK,IAAA,SAAS,EAAED,OAAO,CAACE;AAAxB,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,OAAtB;AAA8B,IAAA,OAAO,EAAC;AAAtC,KAA4CnB,KAA5C,CADJ,EAEI;AAAK,IAAA,SAAS,EAAEiB,OAAO,CAACG;AAAxB,KACI,MAAC,YAAD;AACI,IAAA,GAAG,EAAEZ,OADT;AAEI,IAAA,QAAQ,EAAEF,UAAU,CAACD,IAFzB;AAGI,IAAA,UAAU,EAAEJ,IAAI,CAACoB,MAAL,KAAgB,CAHhC;AAII,IAAA,YAAY,EAAEnB,YAJlB;AAKI,IAAA,WAAW,EAAEQ;AALjB,KAOKT,IAAI,CAACqB,GAAL,CAAS,UAACC,GAAD,EAAMC,CAAN;AAAA,WACN;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,GAAG,EAAED,GAAG,CAACE,GAAtB;AAA2B,MAAA,GAAG,EAAEF,GAAG,CAACG,GAAJ;AAAhC,MADM;AAAA,GAAT,CAPL,CADJ,CAFJ,EAeI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACU;AAAxB,KACI,MAAC,YAAD;AACI,IAAA,GAAG,EAAElB,OADT;AAEI,IAAA,QAAQ,EAAEH,UAAU,CAACF,IAFzB;AAGI,IAAA,YAAY,EAAE,CAHlB;AAII,IAAA,cAAc,EAAE,CAJpB;AAKI,IAAA,aAAa,EAAE,IALnB;AAMI,IAAA,MAAM,EAAE,KANZ;AAOI,IAAA,YAAY,EAAEF;AAPlB,KASKD,IAAI,CAACqB,GAAL,CAAS,gBAAaE,CAAb;AAAA,QAAEE,GAAF,QAAEA,GAAF;AAAA,QAAOD,GAAP,QAAOA,GAAP;AAAA,WACN;AAAK,MAAA,GAAG,EAAED,CAAV;AAAa,MAAA,GAAG,EAAEC,GAAlB;AAAuB,MAAA,GAAG,EAAEC,GAAG;AAA/B,MADM;AAAA,GAAT,CATL,CADJ,EAcI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,eAAD;AAAiB,IAAA,OAAO,EAAEd;AAA1B,SADJ,EAEI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KACKV,YAAY,GAAG,CADpB,SAC0BD,IAAI,CAACoB,MAD/B,CAFJ,EAKI,MAAC,eAAD;AAAiB,IAAA,OAAO,EAAEP;AAA1B,SALJ,CAdJ,CAfJ,CALJ,CADJ;AA8CH,CA/EM;;GAAMlB,gB;UAgCOJ,S;;;KAhCPI,gB","sourcesContent":["import React, {\r\n    FC,\r\n    Dispatch,\r\n    SetStateAction,\r\n    MutableRefObject,\r\n    useRef,\r\n    useState,\r\n    useEffect,\r\n} from 'react';\r\nimport {CustomSlider} from '@src/components/elements/custom_slider/CustomSlider';\r\nimport {useStyles} from './useStyles';\r\nimport {Modal, Typography} from '@material-ui/core';\r\nimport {ButtonComponent} from '@src/components/elements/button/Button';\r\n\r\ntype SyncSlidersProps = {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    title: string;\r\n    initialSlide: number;\r\n    setInitialSlide: Dispatch<SetStateAction<number>>;\r\n    imgs: {\r\n        alt: string;\r\n        url: { default: string };\r\n    }[];\r\n};\r\n\r\nexport const ModalSyncSliders: FC<SyncSlidersProps> = (props) => {\r\n    const {\r\n        open,\r\n        onClose,\r\n        title, imgs,\r\n        initialSlide,\r\n        setInitialSlide\r\n    } = props;\r\n\r\n    const [slidersNav, setSlidersNav] = useState({nav1: null, nav2: null});\r\n    const slider1: MutableRefObject<unknown> = useRef();\r\n    const slider2: MutableRefObject<unknown> = useRef();\r\n\r\n    const handleAfterChange = (slide) => {\r\n        setInitialSlide(slide);\r\n    };\r\n\r\n    const prev = () => {\r\n        slidersNav.nav2.slickPrev();\r\n    };\r\n\r\n    const next = () => {\r\n        slidersNav.nav2.slickNext();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setSlidersNav({\r\n            nav1: slider1.current,\r\n            nav2: slider2.current,\r\n        });\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={onClose}\r\n            className={classes.modal}\r\n        >\r\n            <div className={classes.root}>\r\n                <Typography className='title' variant=\"h6\">{title}</Typography>\r\n                <div className={classes.firstSlider}>\r\n                    <CustomSlider\r\n                        ref={slider1}\r\n                        asNavFor={slidersNav.nav2}\r\n                        centerMode={imgs.length === 1}\r\n                        initialSlide={initialSlide}\r\n                        afterChange={handleAfterChange}\r\n                    >\r\n                        {imgs.map((img, i) => (\r\n                            <img key={i} alt={img.alt} src={img.url.default}/>\r\n                        ))}\r\n                    </CustomSlider>\r\n                </div>\r\n                <div className={classes.secondSlider}>\r\n                    <CustomSlider\r\n                        ref={slider2}\r\n                        asNavFor={slidersNav.nav1}\r\n                        slidesToShow={4}\r\n                        slidesToScroll={1}\r\n                        focusOnSelect={true}\r\n                        arrows={false}\r\n                        initialSlide={initialSlide}\r\n                    >\r\n                        {imgs.map(({url, alt}, i) => (\r\n                            <img key={i} alt={alt} src={url.default}/>\r\n                        ))}\r\n                    </CustomSlider>\r\n                    <div className=\"slider-counter\">\r\n                        <ButtonComponent onClick={prev}>&lt;</ButtonComponent>\r\n                        <Typography variant=\"subtitle1\">\r\n                            {initialSlide + 1} / {imgs.length}\r\n                        </Typography>\r\n                        <ButtonComponent onClick={next}>&gt;</ButtonComponent>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}