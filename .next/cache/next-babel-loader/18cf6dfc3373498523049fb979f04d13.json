{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchCategories } from '../thunks/categoriesThunk';\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst initialState = {\n  isFetch: false,\n  error: null,\n  categories: {}\n};\nconst advertisementSlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(HYDRATE, (state, action) => {\n      return action.payload.categories;\n    });\n    builder.addCase(fetchCategories.pending, state => {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchCategories.fulfilled, (state, payload) => {\n      state.isFetch = false;\n      state.categories = payload;\n    });\n    builder.addCase(fetchCategories.rejected, (state, action) => {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const categoriesReducer = advertisementSlice.reducer;","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/slices/categoriesSlice.ts"],"names":["createSlice","fetchCategories","HYDRATE","initialState","isFetch","error","categories","advertisementSlice","name","reducers","extraReducers","builder","addCase","state","action","payload","pending","fulfilled","rejected","categoriesReducer","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,eAAR,QAA8B,2BAA9B;AAEA,SAAQC,OAAR,QAAsB,oBAAtB;AAGA,MAAMC,YAAyB,GAAG;AAC9BC,EAAAA,OAAO,EAAE,KADqB;AAE9BC,EAAAA,KAAK,EAAE,IAFuB;AAG9BC,EAAAA,UAAU,EAAE;AAHkB,CAAlC;AAMA,MAAMC,kBAAkB,GAAGP,WAAW,CAAC;AACnCQ,EAAAA,IAAI,EAAE,YAD6B;AAEnCL,EAAAA,YAFmC;AAGnCM,EAAAA,QAAQ,EAAE,EAHyB;AAInCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBV,OAAhB,EAAyB,CAACW,KAAD,EAAQC,MAAR,KAAmB;AACxC,aAAOA,MAAM,CAACC,OAAP,CAAeT,UAAtB;AACH,KAFD;AAGAK,IAAAA,OAAO,CAACC,OAAR,CAAgBX,eAAe,CAACe,OAAhC,EAA0CH,KAAD,IAAW;AAChDA,MAAAA,KAAK,CAACT,OAAN,GAAgB,IAAhB;AACAS,MAAAA,KAAK,CAACR,KAAN,GAAc,IAAd;AACH,KAHD;AAIAM,IAAAA,OAAO,CAACC,OAAR,CAAgBX,eAAe,CAACgB,SAAhC,EAA2C,CAACJ,KAAD,EAAQE,OAAR,KAAoB;AAC3DF,MAAAA,KAAK,CAACT,OAAN,GAAgB,KAAhB;AACAS,MAAAA,KAAK,CAACP,UAAN,GAAmBS,OAAnB;AACH,KAHD;AAIAJ,IAAAA,OAAO,CAACC,OAAR,CAAgBX,eAAe,CAACiB,QAAhC,EAA0C,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACzDD,MAAAA,KAAK,CAACT,OAAN,GAAgB,KAAhB;AACAS,MAAAA,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACC,OAArB;AACH,KAHD;AAIH;AApBkC,CAAD,CAAtC;AAuBA,OAAO,MAAMI,iBAAiB,GAAGZ,kBAAkB,CAACa,OAA7C","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\nimport {fetchCategories} from '../thunks/categoriesThunk'\r\nimport {ICategories} from '@root/interfaces/ICategories'\r\nimport {HYDRATE} from \"next-redux-wrapper\";\r\n\r\n\r\nconst initialState: ICategories = {\r\n    isFetch: false,\r\n    error: null,\r\n    categories: {},\r\n};\r\n\r\nconst advertisementSlice = createSlice({\r\n    name: 'categories',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(HYDRATE, (state, action) => {\r\n            return action.payload.categories\r\n        })\r\n        builder.addCase(fetchCategories.pending, (state) => {\r\n            state.isFetch = true;\r\n            state.error = null;\r\n        })\r\n        builder.addCase(fetchCategories.fulfilled, (state, payload) => {\r\n            state.isFetch = false;\r\n            state.categories = payload;\r\n        })\r\n        builder.addCase(fetchCategories.rejected, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = action.payload;\r\n        })\r\n    }\r\n});\r\n\r\nexport const categoriesReducer = advertisementSlice.reducer;"]},"metadata":{},"sourceType":"module"}