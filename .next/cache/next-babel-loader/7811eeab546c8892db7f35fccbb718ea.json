{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { AncmntAutoForm } from \"./AncmntAutoForm\";\nimport { prepareCreateAncmnt } from \"@root/src/helpers\";\nimport { AccordionComponent } from \"./accordion_component/AccordionComponent\";\nimport { Auto_icon } from '@src/components/elements/icons';\nexport const AncmntAutoFormContainer = props => {\n  const {\n    createAncmnt,\n    values\n  } = props;\n  const {\n    adParams\n  } = values;\n  const data = prepareCreateAncmnt(createAncmnt.subCategory.data, adParams);\n  console.log(data);\n  const autoData = {\n    automobile: {\n      icon: Auto_icon,\n      manufacturer: data.manufacturer,\n      models: data.models,\n      body: data.body,\n      transmission: data.transmission,\n      drive: data.drive,\n      car_engine_capacity: data.car_engine_capacity,\n      car_engine_type: data.car_engine_type\n    }\n  };\n  const form = Object.keys(autoData).map((key, i) => {\n    return __jsx(AccordionComponent, {\n      key: i,\n      title: key,\n      icon: autoData[key].icon\n    });\n  });\n  return __jsx(AncmntAutoForm, _extends({}, props, {\n    form: form\n  }));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/announcement/create_ancmnt/ancmnt_form/ancmnt_auto_form/AncmntAutoFormContainer.tsx"],"names":["React","AncmntAutoForm","prepareCreateAncmnt","AccordionComponent","Auto_icon","AncmntAutoFormContainer","props","createAncmnt","values","adParams","data","subCategory","console","log","autoData","automobile","icon","manufacturer","models","body","transmission","drive","car_engine_capacity","car_engine_type","form","Object","keys","map","key","i"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAwC,OAAxC;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,SAAQC,mBAAR,QAAkC,mBAAlC;AAEA,SAAQC,kBAAR,QAAiC,0CAAjC;AACA,SAAQC,SAAR,QAAwB,gCAAxB;AASA,OAAO,MAAMC,uBAAqD,GAAIC,KAAD,IAAW;AAC5E,QAAM;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAyBF,KAA/B;AACA,QAAM;AAACG,IAAAA;AAAD,MAAaD,MAAnB;AACA,QAAME,IAAI,GAAGR,mBAAmB,CAACK,YAAY,CAACI,WAAb,CAAyBD,IAA1B,EAAgCD,QAAhC,CAAhC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,QAAMI,QAAQ,GAAG;AACbC,IAAAA,UAAU,EAAE;AACRC,MAAAA,IAAI,EAAEZ,SADE;AAERa,MAAAA,YAAY,EAAEP,IAAI,CAACO,YAFX;AAGRC,MAAAA,MAAM,EAAER,IAAI,CAACQ,MAHL;AAIRC,MAAAA,IAAI,EAAET,IAAI,CAACS,IAJH;AAKRC,MAAAA,YAAY,EAAEV,IAAI,CAACU,YALX;AAMRC,MAAAA,KAAK,EAAEX,IAAI,CAACW,KANJ;AAORC,MAAAA,mBAAmB,EAAEZ,IAAI,CAACY,mBAPlB;AAQRC,MAAAA,eAAe,EAAEb,IAAI,CAACa;AARd;AADC,GAAjB;AAaA,QAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYZ,QAAZ,EAAsBa,GAAtB,CAA0B,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC/C,WAAO,MAAC,kBAAD;AACH,MAAA,GAAG,EAAEA,CADF;AAEH,MAAA,KAAK,EAAED,GAFJ;AAGH,MAAA,IAAI,EAAEd,QAAQ,CAACc,GAAD,CAAR,CAAcZ;AAHjB,MAAP;AAKH,GANY,CAAb;AAQA,SACI,MAAC,cAAD,eACQV,KADR;AAEI,IAAA,IAAI,EAAEkB;AAFV,KADJ;AAMH,CAjCM","sourcesContent":["import React, {FC, SetStateAction} from \"react\";\r\nimport {AncmntAutoForm} from \"./AncmntAutoForm\";\r\nimport {prepareCreateAncmnt} from \"@root/src/helpers\";\r\nimport {CreateAncmntFields, CreateAncmntState} from \"@root/interfaces/Announcement\";\r\nimport {AccordionComponent} from \"./accordion_component/AccordionComponent\";\r\nimport {Auto_icon} from '@src/components/elements/icons';\r\n\r\n\r\ntype AncmntAutoFormPropsTypes = {\r\n    createAncmnt: CreateAncmntState;\r\n    values: CreateAncmntFields;\r\n    setValues: (values: SetStateAction<CreateAncmntFields>, shouldValidate?: boolean | undefined) => any;\r\n};\r\n\r\nexport const AncmntAutoFormContainer: FC<AncmntAutoFormPropsTypes> = (props) => {\r\n    const {createAncmnt, values} = props;\r\n    const {adParams} = values;\r\n    const data = prepareCreateAncmnt(createAncmnt.subCategory.data, adParams);\r\n    console.log(data)\r\n\r\n    const autoData = {\r\n        automobile: {\r\n            icon: Auto_icon,\r\n            manufacturer: data.manufacturer,\r\n            models: data.models,\r\n            body: data.body,\r\n            transmission: data.transmission,\r\n            drive: data.drive,\r\n            car_engine_capacity: data.car_engine_capacity,\r\n            car_engine_type: data.car_engine_type\r\n        }\r\n    };\r\n\r\n    const form = Object.keys(autoData).map((key, i) => {\r\n        return <AccordionComponent\r\n            key={i}\r\n            title={key}\r\n            icon={autoData[key].icon}\r\n        />\r\n    });\r\n\r\n    return (\r\n        <AncmntAutoForm\r\n            {...props}\r\n            form={form}\r\n        />\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}