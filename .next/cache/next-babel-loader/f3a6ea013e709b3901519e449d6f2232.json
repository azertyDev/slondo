{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { CustomMenu } from \"@src/components/elements/custom_menu/CustomMenu\";\nimport { useStyles } from './useStyles';\nexport const AdvrtSettingsBlock = props => {\n  const {\n    createAdvrtData,\n    values,\n    resetValues,\n    onBlur,\n    handleClickMenuItem\n  } = props;\n  useEffect(() => {\n    console.log('reset');\n    resetValues();\n  }, [createAdvrtData.id]);\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    spacing: 1,\n    className: classes.root\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"h5\"\n  }, __jsx(\"strong\", null, \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"))), Object.keys(createAdvrtData).map(key => {\n    if (Array.isArray(createAdvrtData[key]) && createAdvrtData[key].length) {\n      const newData = [{\n        id: null,\n        name: 'Не выбрано'\n      }, ...createAdvrtData[key]];\n      return listGenerator(newData, key);\n    }\n  }), Object.keys(createAdvrtData).map(key => values[key] && Object.keys(values[key]).map(innerKey => {\n    if (Array.isArray(values[key][innerKey]) && values[key][innerKey].length) {\n      const newData = [{\n        id: null,\n        name: 'Не выбрано'\n      }, ...values[key][innerKey]];\n      return listGenerator(newData, innerKey);\n    }\n  }))));\n\n  function listGenerator(createAdvrtData, key) {\n    return __jsx(Grid, {\n      item: true,\n      key: key,\n      xs: 12,\n      sm: 4\n    }, __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, __jsx(\"strong\", null, key)), __jsx(CustomMenu, {\n      valueName: values[key] ? values[key].name : createAdvrtData[0].name,\n      items: createAdvrtData,\n      onBlur: onBlur,\n      onClick: handleClickMenuItem(key)\n    }));\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/advrtForm/advrt_settings_block/AdvrtSettingsBlock.tsx"],"names":["React","useEffect","Grid","Typography","CustomMenu","useStyles","AdvrtSettingsBlock","props","createAdvrtData","values","resetValues","onBlur","handleClickMenuItem","console","log","id","classes","root","Object","keys","map","key","Array","isArray","length","newData","name","listGenerator","innerKey"],"mappings":"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","sourcesContent":["import React, {FC, useEffect} from \"react\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport {CustomMenu} from \"@src/components/elements/custom_menu/CustomMenu\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nexport const AdvrtSettingsBlock: FC<any> = (props) => {\r\n    const {createAdvrtData, values, resetValues, onBlur, handleClickMenuItem} = props;\r\n\r\n    useEffect(() => {\r\n        console.log('reset')\r\n        resetValues();\r\n    }, [createAdvrtData.id])\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Grid item container xs={12} spacing={1} className={classes.root}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\">\r\n                        <strong>Настройки объявления</strong>\r\n                    </Typography>\r\n                </Grid>\r\n                {\r\n                    Object.keys(createAdvrtData).map((key) => {\r\n                        if (Array.isArray(createAdvrtData[key]) && createAdvrtData[key].length) {\r\n                            const newData = [{id: null, name: 'Не выбрано'}, ...createAdvrtData[key]];\r\n                            return (\r\n                                listGenerator(newData, key)\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n                {\r\n                    Object.keys(createAdvrtData).map((key) => (\r\n                        values[key] && Object.keys(values[key]).map(innerKey => {\r\n                            if (Array.isArray(values[key][innerKey]) && values[key][innerKey].length) {\r\n                                const newData = [{id: null, name: 'Не выбрано'}, ...values[key][innerKey]];\r\n                                return listGenerator(newData, innerKey);\r\n                            }\r\n                        })\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n\r\n    function listGenerator(createAdvrtData, key) {\r\n        return (\r\n            <Grid\r\n                item\r\n                key={key}\r\n                xs={12}\r\n                sm={4}\r\n            >\r\n                <Typography variant=\"subtitle1\">\r\n                    <strong>{key}</strong>\r\n                </Typography>\r\n                <CustomMenu\r\n                    valueName={values[key] ? values[key].name : createAdvrtData[0].name}\r\n                    items={createAdvrtData}\r\n                    onBlur={onBlur}\r\n                    onClick={handleClickMenuItem(key)}\r\n                />\r\n            </Grid>\r\n        )\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}