{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Tab, Tabs, Typography } from \"@material-ui/core\";\nimport { i18n, Link } from \"@root/i18n\";\nimport { CustomTabPanel } from \"../custom_tab_panel/CustomTabPanel\";\nimport { Form, FormikProvider, useFormik } from \"formik\";\nimport { CustomFormikField } from \"../custom_formik_field/CustomFormikField\";\nimport { ButtonComponent } from \"../button/Button\";\nimport { fetchToken } from \"@src/redux/slices/authRegSlice\";\nimport { useStyles } from './useStyles';\nimport { authRegSchema } from \"@root/validation_schemas/authRegSchema\";\nconst initialInputsVals = {\n  phone: '',\n  password: ''\n};\nexport const AuthRegForm = props => {\n  const {\n    t\n  } = props;\n  const {\n    language\n  } = i18n;\n  const dispatch = useDispatch();\n  const {\n    isFetch,\n    error\n  } = useSelector(store => store.auth);\n  const {\n    0: tabValue,\n    1: setTabValue\n  } = useState(0);\n\n  const tabsHandler = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const loginReg = values => {\n    if (tabValue === 0) {\n      dispatch(fetchToken(values));\n    }\n  };\n\n  const onSubmit = (values, actions) => {\n    loginReg(values);\n    actions.resetForm();\n    props.handleCloseModal();\n  };\n\n  const formik = useFormik({\n    initialValues: initialInputsVals,\n    validationSchema: authRegSchema,\n    onSubmit\n  });\n  const {\n    errors,\n    touched\n  } = formik;\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: \"form-block\"\n  }, __jsx(\"div\", {\n    className: \"server-error\"\n  }, error && __jsx(Typography, {\n    variant: \"body2\",\n    className: \"error-text\"\n  }, t('auth_reg:serverError'))), __jsx(\"div\", {\n    className: \"tabs-container\"\n  }, __jsx(Tabs, {\n    value: tabValue,\n    onChange: tabsHandler,\n    indicatorColor: \"primary\",\n    className: \"tabs\"\n  }, __jsx(Tab, {\n    label: __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, t('auth_reg:signInTitle')),\n    value: 0\n  }), __jsx(Tab, {\n    label: __jsx(Typography, {\n      variant: \"subtitle1\"\n    }, t('auth_reg:signUpTitle')),\n    value: 1\n  })), __jsx(\"div\", {\n    className: \"tab-panels\"\n  }, __jsx(CustomTabPanel, {\n    value: tabValue,\n    index: 0,\n    className: \"sign-panel\"\n  }, __jsx(FormikProvider, {\n    value: formik\n  }, __jsx(Form, {\n    onSubmit: formik.handleSubmit\n  }, __jsx(\"div\", null, __jsx(CustomFormikField, {\n    name: \"phone\",\n    type: \"tel\",\n    labelText: t('auth_reg:enterPhone'),\n    placeholder: \"+ (998) __ ___ __ __\",\n    className: errors.phone && touched.phone ? 'error-border' : ''\n  }), __jsx(\"div\", {\n    className: \"validation-block\"\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    className: \"error-text\"\n  }, errors.phone && touched.phone ? errors.phone : ''))), __jsx(\"div\", null, __jsx(CustomFormikField, {\n    name: \"password\",\n    type: \"password\",\n    labelText: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    placeholder: t('auth_reg:enterPassword'),\n    className: errors.password && touched.password ? 'error-border' : ''\n  }), __jsx(\"div\", {\n    className: \"validation-block\"\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    className: \"error-text\"\n  }, errors.password && touched.password ? errors.password : ''), __jsx(\"a\", {\n    href: \"#\"\n  }, __jsx(Typography, {\n    variant: \"body2\"\n  }, t('auth_reg:forgetPassword'))))), __jsx(\"div\", {\n    className: classes.modalBtns\n  }, __jsx(ButtonComponent, {\n    className: \"signin-btn\",\n    type: \"submit\",\n    disabled: isFetch\n  }, t('common:signIn'))))), __jsx(\"div\", {\n    className: classes.agreement\n  }, __jsx(Typography, {\n    className: \"reg-agreement\",\n    variant: \"body2\"\n  }, \"\\u041D\\u0430\\u0436\\u0438\\u043C\\u0430\\u044F \\u043A\\u043D\\u043E\\u043F\\u043A\\u0443 \\u0412\\u043E\\u0439\\u0442\\u0438 \\u0432\\u044B \\u043F\\u0440\\u0438\\u043D\\u0438\\u043C\\u0430\\u0435\\u0442\\u0435 \\u0443\\u0441\\u043B\\u043E\\u0432\\u0438\\u044F \", ' ', __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, \"\\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u043E\\u043D\\u043D\\u043E\\u0433\\u043E \\u0441\\u043E\\u0433\\u043B\\u0430\\u0448\\u0435\\u043D\\u0438\\u044F\")), ` ${t('auth_reg:agreement.thirdPart')} `, __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, \"\\u043F\\u043E\\u043B\\u0438\\u0442\\u0438\\u043A\\u0438 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0434\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\")), language === 'uz' && ` ${t('auth_reg:agreement.fifthPart')}`))), __jsx(CustomTabPanel, {\n    value: tabValue,\n    index: 1,\n    className: \"reg-panel\"\n  }, __jsx(FormikProvider, {\n    value: formik\n  }, __jsx(Form, {\n    onSubmit: formik.handleSubmit\n  }, __jsx(\"div\", null, __jsx(CustomFormikField, {\n    name: \"phone\",\n    type: \"tel\",\n    placeholder: \"+ (998) __ ___ __ __\",\n    labelText: t('auth_reg:enterPhone'),\n    className: errors.phone && touched.phone ? 'error-border' : ''\n  }), __jsx(\"div\", {\n    className: \"validation-block\"\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    className: \"error-text\"\n  }, errors.phone && touched.phone ? errors.phone : ''))), __jsx(\"div\", {\n    className: classes.modalBtns\n  }, __jsx(ButtonComponent, {\n    className: \"reg-btn\",\n    type: \"submit\"\n  }, t('auth_reg:signUp'))))), __jsx(\"div\", {\n    className: classes.agreement\n  }, __jsx(Typography, {\n    className: \"reg-agreement\",\n    variant: \"body2\"\n  }, `${t('auth_reg:agreement.firstPart')} `, __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, `${t('auth_reg:agreement.secondPart')} `)), `${t('auth_reg:agreement.thirdPart')} `, __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, `${t('auth_reg:agreement.fourthPart')}`)), language === 'uz' && ` ${t('auth_reg:agreement.fifthPart')}`)))))));\n};","map":null,"metadata":{},"sourceType":"module"}