{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userAPI } from \"@src/api/api\";\nconst initialState = {\n  isFetch: false,\n  error: null,\n  list: []\n}; // Async thunk\n\nexport const fetchCategories = createAsyncThunk('categories/fetchCategories', async (lang, {\n  rejectWithValue\n}) => {\n  try {\n    return await userAPI.getCategories(lang);\n  } catch (e) {\n    return rejectWithValue(e.message);\n  }\n}); // Slice\n\nconst advertisementSlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchCategories.fulfilled, (state, action) => {\n      state.isFetch = false;\n      state.list = action.payload;\n    });\n    builder.addCase(fetchCategories.rejected, (state, action) => {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const categoriesReducer = advertisementSlice.reducer;","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/slices/categoriesSlice.ts"],"names":["createAsyncThunk","createSlice","userAPI","initialState","isFetch","error","list","fetchCategories","lang","rejectWithValue","getCategories","e","message","advertisementSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","categoriesReducer","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AAEA,SAAQC,OAAR,QAAsB,cAAtB;AAGA,MAAMC,YAAyB,GAAG;AAC9BC,EAAAA,OAAO,EAAE,KADqB;AAE9BC,EAAAA,KAAK,EAAE,IAFuB;AAG9BC,EAAAA,IAAI,EAAE;AAHwB,CAAlC,C,CAMA;;AACA,OAAO,MAAMC,eAAe,GAAGP,gBAAgB,CAC3C,4BAD2C,EAE3C,OAAOQ,IAAP,EAAa;AAACC,EAAAA;AAAD,CAAb,KAAmC;AAC/B,MAAI;AACA,WAAO,MAAMP,OAAO,CAACQ,aAAR,CAAsBF,IAAtB,CAAb;AACH,GAFD,CAEE,OAAOG,CAAP,EAAU;AACR,WAAOF,eAAe,CAACE,CAAC,CAACC,OAAH,CAAtB;AACH;AACJ,CAR0C,CAAxC,C,CAWP;;AACA,MAAMC,kBAAkB,GAAGZ,WAAW,CAAC;AACnCa,EAAAA,IAAI,EAAE,YAD6B;AAEnCX,EAAAA,YAFmC;AAGnCY,EAAAA,QAAQ,EAAE,EAHyB;AAInCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBX,eAAe,CAACY,OAAhC,EAA0CC,KAAD,IAAW;AAChDA,MAAAA,KAAK,CAAChB,OAAN,GAAgB,IAAhB;AACAgB,MAAAA,KAAK,CAACf,KAAN,GAAc,IAAd;AACH,KAHD;AAIAY,IAAAA,OAAO,CAACC,OAAR,CAAgBX,eAAe,CAACc,SAAhC,EAA2C,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC1DF,MAAAA,KAAK,CAAChB,OAAN,GAAgB,KAAhB;AACAgB,MAAAA,KAAK,CAACd,IAAN,GAAagB,MAAM,CAACC,OAApB;AACH,KAHD;AAIAN,IAAAA,OAAO,CAACC,OAAR,CAAgBX,eAAe,CAACiB,QAAhC,EAA0C,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AACzDF,MAAAA,KAAK,CAAChB,OAAN,GAAgB,KAAhB;AACAgB,MAAAA,KAAK,CAACf,KAAN,GAAciB,MAAM,CAACC,OAArB;AACH,KAHD;AAIH;AAjBkC,CAAD,CAAtC;AAoBA,OAAO,MAAME,iBAAiB,GAAGZ,kBAAkB,CAACa,OAA7C","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport {ICategories} from '@root/interfaces/ICategories'\r\nimport {userAPI} from \"@src/api/api\";\r\n\r\n\r\nconst initialState: ICategories = {\r\n    isFetch: false,\r\n    error: null,\r\n    list: [],\r\n};\r\n\r\n// Async thunk\r\nexport const fetchCategories = createAsyncThunk<any, string>(\r\n    'categories/fetchCategories',\r\n    async (lang, {rejectWithValue}) => {\r\n        try {\r\n            return await userAPI.getCategories(lang);\r\n        } catch (e) {\r\n            return rejectWithValue(e.message);\r\n        }\r\n    }\r\n);\r\n\r\n// Slice\r\nconst advertisementSlice = createSlice({\r\n    name: 'categories',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchCategories.pending, (state) => {\r\n            state.isFetch = true;\r\n            state.error = null;\r\n        })\r\n        builder.addCase(fetchCategories.fulfilled, (state, action) => {\r\n            state.isFetch = false;\r\n            state.list = action.payload;\r\n        })\r\n        builder.addCase(fetchCategories.rejected, (state, action) => {\r\n            state.isFetch = false;\r\n            state.error = action.payload;\r\n        })\r\n    }\r\n});\r\n\r\nexport const categoriesReducer = advertisementSlice.reducer;"]},"metadata":{},"sourceType":"module"}