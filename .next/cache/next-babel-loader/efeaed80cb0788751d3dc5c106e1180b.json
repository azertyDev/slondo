{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const dataPrepare = (data, adParams) => Object.keys(data).reduce((acc, key) => {\n  if (Array.isArray(data[key]) && key !== 'adsParams') {\n    acc[key] = data[key];\n\n    if (adParams !== undefined && adParams[key]) {\n      acc = _objectSpread(_objectSpread({}, acc), dataPrepare(adParams[key]));\n    }\n  }\n\n  return acc;\n}, {});","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/advrt_form/advrt_params/helpers.ts"],"names":["dataPrepare","data","adParams","Object","keys","reduce","acc","key","Array","isArray","undefined"],"mappings":";;;;;;AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,IAAD,EAAOC,QAAP,KACvBC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,MAAlB,CAAyB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnC,MAAIC,KAAK,CAACC,OAAN,CAAcR,IAAI,CAACM,GAAD,CAAlB,KAA4BA,GAAG,KAAK,WAAxC,EAAqD;AACjDD,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWN,IAAI,CAACM,GAAD,CAAf;;AACA,QAAIL,QAAQ,KAAKQ,SAAb,IAA0BR,QAAQ,CAACK,GAAD,CAAtC,EAA6C;AACzCD,MAAAA,GAAG,mCACIA,GADJ,GAEIN,WAAW,CAACE,QAAQ,CAACK,GAAD,CAAT,CAFf,CAAH;AAIH;AACJ;;AACD,SAAOD,GAAP;AACH,CAXD,EAWG,EAXH,CADG","sourcesContent":["export const dataPrepare = (data, adParams?) => (\r\n    Object.keys(data).reduce((acc, key) => {\r\n        if (Array.isArray(data[key]) && key !== 'adsParams') {\r\n            acc[key] = data[key];\r\n            if (adParams !== undefined && adParams[key]) {\r\n                acc = {\r\n                    ...acc,\r\n                    ...dataPrepare(adParams[key])\r\n                };\r\n            }\r\n        }\r\n        return acc;\r\n    }, {})\r\n);"]},"metadata":{},"sourceType":"module"}