{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\nimport Head from 'next/head';\nimport theme from '../src/theme';\nimport { wrapper } from '../src/redux/store';\nimport { Header } from '../src/components/header/Header';\nimport { Footer } from \"../src/components/footer/Footer\";\nimport { Trans, useTranslation } from '../i18n'; // Import css files\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nvar MyApp = function MyApp(props) {\n  _s();\n\n  var Component = props.Component;\n\n  var _useTranslation = useTranslation('common'),\n      t = _useTranslation.t;\n\n  useEffect(function () {\n    // Remove the server-side injected CSS.\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"My page\")), __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(CssBaseline, null), __jsx(Trans, {\n    t: t\n  }, __jsx(Header, props.pageProps), __jsx(Component, props.pageProps), __jsx(Footer, null))));\n}; //withRedux wrapper that passes the store to the App Component\n\n\n_s(MyApp, \"gFTQfOjFrWIHywdaK9O2l0LxRLc=\", false, function () {\n  return [useTranslation];\n});\n\n_c = MyApp;\nexport default _c2 = wrapper.withRedux(MyApp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/pages/_app.tsx"],"names":["React","useEffect","ThemeProvider","CssBaseline","Head","theme","wrapper","Header","Footer","Trans","useTranslation","MyApp","props","Component","t","jssStyles","document","querySelector","parentElement","removeChild","pageProps","withRedux"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,SAAnB,QAAmC,OAAnC;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,mBAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,MAAR,QAAqB,iCAArB;AACA,SAAQC,MAAR,QAAqB,iCAArB;AACA,SAAQC,KAAR,EAAeC,cAAf,QAAoC,SAApC,C,CAEA;;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;;AAEA,IAAMC,KAAmB,GAAG,SAAtBA,KAAsB,CAACC,KAAD,EAAW;AAAA;;AAAA,MAC5BC,SAD4B,GACfD,KADe,CAC5BC,SAD4B;;AAAA,wBAEvBH,cAAc,CAAC,QAAD,CAFS;AAAA,MAE5BI,CAF4B,mBAE5BA,CAF4B;;AAGnCb,EAAAA,SAAS,CAAC,YAAM;AACZ;AACA,QAAMc,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACXA,MAAAA,SAAS,CAACG,aAAV,CAAwBC,WAAxB,CAAoCJ,SAApC;AACH;AACJ,GANQ,EAMN,EANM,CAAT;AAOA,SACI,4BACI,MAAC,IAAD,QACI,+BADJ,CADJ,EAII,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEV;AAAtB,KACI,MAAC,WAAD,OADJ,EAEI,MAAC,KAAD;AAAO,IAAA,CAAC,EAAES;AAAV,KACI,MAAC,MAAD,EAAYF,KAAK,CAACQ,SAAlB,CADJ,EAEI,MAAC,SAAD,EAAeR,KAAK,CAACQ,SAArB,CAFJ,EAGI,MAAC,MAAD,OAHJ,CAFJ,CAJJ,CADJ;AAeH,CAzBD,C,CA2BA;;;GA3BMT,K;UAEUD,c;;;KAFVC,K;AA4BN,qBAAeL,OAAO,CAACe,SAAR,CAAkBV,KAAlB,CAAf","sourcesContent":["import React, {FC, useEffect} from 'react'\nimport {ThemeProvider, CssBaseline} from '@material-ui/core'\nimport Head from 'next/head'\nimport {AppProps} from 'next/app'\nimport theme from '../src/theme'\nimport {wrapper} from '../src/redux/store'\nimport {Header} from '../src/components/header/Header'\nimport {Footer} from \"../src/components/footer/Footer\"\nimport {Trans, useTranslation} from '../i18n'\n\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst MyApp: FC<AppProps> = (props) => {\n    const {Component} = props;\n    const {t} = useTranslation('common');\n    useEffect(() => {\n        // Remove the server-side injected CSS.\n        const jssStyles = document.querySelector('#jss-server-side');\n        if (jssStyles) {\n            jssStyles.parentElement.removeChild(jssStyles);\n        }\n    }, []);\n    return (\n        <>\n            <Head>\n                <title>My page</title>\n            </Head>\n            <ThemeProvider theme={theme}>\n                <CssBaseline/>\n                <Trans t={t}>\n                    <Header {...props.pageProps} />\n                    <Component {...props.pageProps} />\n                    <Footer/>\n                </Trans>\n            </ThemeProvider>\n        </>\n    );\n}\n\n//withRedux wrapper that passes the store to the App Component\nexport default wrapper.withRedux(MyApp)"]},"metadata":{},"sourceType":"module"}