{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nexport const setIsAuth = createAction('auth/setAuth', isAuth => ({\n  payload: isAuth\n}));\nexport const fetchTokenBegin = createAction('token/beginFetch');\nexport const fetchTokenSuccess = createAction('token/fetchSuccess');\nexport const fetchTokenFailure = createAction('token/fetchFailure');","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/actions/authActions.ts"],"names":["createAction","setIsAuth","isAuth","payload","fetchTokenBegin","fetchTokenSuccess","fetchTokenFailure"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,kBAA3B;AAGA,OAAO,MAAMC,SAAS,GAAGD,YAAY,CAAC,cAAD,EAAkBE,MAAD,KAAa;AAACC,EAAAA,OAAO,EAAED;AAAV,CAAb,CAAjB,CAA9B;AACP,OAAO,MAAME,eAAe,GAAGJ,YAAY,CAAC,kBAAD,CAApC;AACP,OAAO,MAAMK,iBAAiB,GAAGL,YAAY,CAAC,oBAAD,CAAtC;AACP,OAAO,MAAMM,iBAAiB,GAAGN,YAAY,CAAC,oBAAD,CAAtC","sourcesContent":["import {createAction} from '@reduxjs/toolkit'\r\n\r\n\r\nexport const setIsAuth = createAction('auth/setAuth', (isAuth) => ({payload: isAuth}));\r\nexport const fetchTokenBegin = createAction('token/beginFetch');\r\nexport const fetchTokenSuccess = createAction('token/fetchSuccess');\r\nexport const fetchTokenFailure = createAction('token/fetchFailure');\r\n"]},"metadata":{},"sourceType":"module"}