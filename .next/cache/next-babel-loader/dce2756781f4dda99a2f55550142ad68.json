{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Hidden, Container, Typography } from '@material-ui/core';\nimport { userAPI } from '@src/api/api';\nimport { AdvrtForm } from './advrt_form/AdvrtForm';\nimport { SuccessAdvrt } from './success_advrt/SuccessAdvrt';\nimport { createAdvrtSchema } from \"@root/validation_schemas/createAdvrtSchema\";\nimport { useFormik, FormikProvider } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { MainLayout } from \"@src/components/MainLayout\"; // styles\n\nimport { useStyles } from './useStyles';\nvar initFields = {\n  title: '',\n  price: '',\n  safe_deal: false,\n  delivery: false,\n  exchange: false,\n  location: null,\n  files: [],\n  description: '',\n  phone: ''\n};\nexport var CreateAdvrt = function CreateAdvrt() {\n  _s();\n\n  var _useSelector = useSelector(function (store) {\n    return store;\n  }),\n      createAdvrt = _useSelector.createAdvrt,\n      locations = _useSelector.locations;\n\n  var _useState = useState(false),\n      isPreview = _useState[0],\n      setIsPreview = _useState[1];\n\n  var _useState2 = useState(false),\n      isSuccess = _useState2[0],\n      setIsSuccess = _useState2[1];\n\n  var prepareData = function prepareData(data) {\n    var form = new FormData();\n\n    var safe_deal = data.safe_deal,\n        delivery = data.delivery,\n        exchange = data.exchange,\n        location = data.location,\n        files = data.files,\n        otherValues = _objectWithoutProperties(data, [\"safe_deal\", \"delivery\", \"exchange\", \"location\", \"files\"]);\n\n    form.set('ads_type_id', createAdvrt.adType.id.toString());\n    form.set('parent_categories_id', createAdvrt.category.id.toString()); // form.set('ads_type_id', adType.id);\n    // form.set('ads_type_id', adType.id);\n    // form.set('ads_type_id', adType.id);\n    // form.set('ads_type_id', adType.id);\n    // form.set('ads_type_id', adType.id);\n    // form.set('ads_type_id', adType.id);\n\n    return form;\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (isPreview) {\n                _context.next = 5;\n                break;\n              }\n\n              setIsPreview(true);\n              _context.next = 10;\n              break;\n\n            case 5:\n              data = prepareData(values);\n              _context.next = 8;\n              return userAPI.createAdvrt(data);\n\n            case 8:\n              setIsSuccess(true);\n              console.log('submit');\n\n            case 10:\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var formik = useFormik({\n    initialValues: initFields,\n    validationSchema: createAdvrtSchema,\n    onSubmit: onSubmit\n  });\n  var setValues = formik.setValues,\n      values = formik.values,\n      errors = formik.errors,\n      setErrors = formik.setErrors,\n      touched = formik.touched,\n      handleBlur = formik.handleBlur;\n\n  var handlePreview = function handlePreview(value) {\n    return function () {\n      setIsPreview(value);\n    };\n  };\n\n  var handleCheckboxChange = function handleCheckboxChange(valName) {\n    return function (_ref2) {\n      var target = _ref2.target;\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valName, target.checked)));\n    };\n  };\n\n  var handleParamsCheckbox = function handleParamsCheckbox(valueName, value) {\n    return function () {\n      if (values[valueName]) {\n        if (values[valueName].some(function (val) {\n          return val.id === value.id;\n        })) {\n          values[valueName].map(function (val, index) {\n            if (val.id === value.id) {\n              values[valueName].splice(index, 1);\n            }\n          });\n          setValues(_objectSpread({}, values));\n        } else {\n          setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, [].concat(_toConsumableArray(values[valueName]), [value]))));\n        }\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, [value])));\n      }\n    };\n  };\n\n  var handleMenuItem = function handleMenuItem(valueName) {\n    return function (newValue, setAnchor) {\n      return function () {\n        setAnchor(null);\n        setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, newValue))); // Reset sub props in values\n\n        Object.keys(newValue).map(function (key) {\n          if (values[key]) {\n            var _objectSpread6;\n\n            setValues(_objectSpread(_objectSpread({}, values), {}, (_objectSpread6 = {}, _defineProperty(_objectSpread6, valueName, newValue), _defineProperty(_objectSpread6, key, _objectSpread({\n              id: null,\n              name: 'Не выбрано'\n            }, newValue[key])), _objectSpread6)));\n          }\n        });\n      };\n    };\n  };\n\n  var handleListItem = function handleListItem(valueName, value) {\n    return function () {\n      if (values[valueName] && values[valueName].id === value.id) {\n        delete values[valueName];\n        setValues(_objectSpread({}, values));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, value)));\n      }\n    };\n  };\n\n  useEffect(function () {\n    setErrors({});\n    setValues(_objectSpread({}, initFields));\n    isPreview && setIsPreview(false);\n  }, [createAdvrt.data.id, createAdvrt.data.name]);\n  console.log(values);\n  var classes = useStyles();\n  return __jsx(MainLayout, null, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9\n  }, __jsx(FormikProvider, {\n    value: formik\n  }, __jsx(\"form\", {\n    onSubmit: formik.handleSubmit\n  }, isSuccess ? __jsx(SuccessAdvrt, null) : __jsx(AdvrtForm, {\n    locations: locations,\n    isPreview: isPreview,\n    setIsPreview: setIsPreview,\n    createAdvrt: createAdvrt,\n    errors: errors,\n    touched: touched,\n    values: values,\n    setValues: setValues,\n    handleBlur: handleBlur,\n    handleMenuItem: handleMenuItem,\n    handleListItem: handleListItem,\n    handleParamsCheckbox: handleParamsCheckbox,\n    handleCheckboxChange: handleCheckboxChange\n  }), __jsx(\"div\", {\n    className: classes.nextButtonBlock\n  }, isPreview && __jsx(ButtonComponent, {\n    className: classes.nextButton,\n    onClick: handlePreview(false)\n  }, __jsx(Typography, null, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")), __jsx(ButtonComponent, {\n    type: \"submit\",\n    className: classes.nextButton\n  }, __jsx(Typography, null, isPreview ? 'Создать' : 'Далее')))))), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 3,\n    container: true,\n    justify: \"flex-end\",\n    className: classes.adBanner\n  }, __jsx(Grid, {\n    item: true,\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"right-banner\"\n  })))))));\n};\n\n_s(CreateAdvrt, \"ifKxh8jXpoU7pHs1La9y+FANXR4=\", false, function () {\n  return [useSelector, useFormik, useStyles];\n});\n\n_c = CreateAdvrt;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdvrt\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/CreateAdvrt.tsx"],"names":["React","useEffect","useState","Grid","Hidden","Container","Typography","userAPI","AdvrtForm","SuccessAdvrt","createAdvrtSchema","useFormik","FormikProvider","useSelector","ButtonComponent","MainLayout","useStyles","initFields","title","price","safe_deal","delivery","exchange","location","files","description","phone","CreateAdvrt","store","createAdvrt","locations","isPreview","setIsPreview","isSuccess","setIsSuccess","prepareData","data","form","FormData","otherValues","set","adType","id","toString","category","onSubmit","values","console","log","formik","initialValues","validationSchema","setValues","errors","setErrors","touched","handleBlur","handlePreview","value","handleCheckboxChange","valName","target","checked","handleParamsCheckbox","valueName","some","val","map","index","splice","handleMenuItem","newValue","setAnchor","Object","keys","key","name","handleListItem","classes","handleSubmit","nextButtonBlock","nextButton","adBanner"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {Grid, Hidden, Container, Typography} from '@material-ui/core';\r\nimport {userAPI} from '@src/api/api';\r\nimport {AdvrtForm} from './advrt_form/AdvrtForm';\r\nimport {SuccessAdvrt} from './success_advrt/SuccessAdvrt';\r\nimport {CreateAdFields} from \"@root/interfaces/Advertisement\";\r\nimport {createAdvrtSchema} from \"@root/validation_schemas/createAdvrtSchema\";\r\nimport {useFormik, FormikProvider} from \"formik\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport {MainLayout} from \"@src/components/MainLayout\";\r\n// styles\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nconst initFields: CreateAdFields = {\r\n    title: '',\r\n    price: '',\r\n    safe_deal: false,\r\n    delivery: false,\r\n    exchange: false,\r\n    location: null,\r\n    files: [],\r\n    description: '',\r\n    phone: '',\r\n};\r\n\r\nexport const CreateAdvrt: FC<void> = () => {\r\n    const {createAdvrt, locations} = useSelector((store: RootState) => store);\r\n\r\n    const [isPreview, setIsPreview] = useState(false);\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n    const prepareData = (data: CreateAdFields) => {\r\n        const form = new FormData();\r\n        const {\r\n            safe_deal,\r\n            delivery,\r\n            exchange,\r\n            location,\r\n            files,\r\n            ...otherValues\r\n        } = data;\r\n\r\n        form.set('ads_type_id', createAdvrt.adType.id.toString());\r\n        form.set('parent_categories_id', createAdvrt.category.id.toString());\r\n        // form.set('ads_type_id', adType.id);\r\n        // form.set('ads_type_id', adType.id);\r\n        // form.set('ads_type_id', adType.id);\r\n        // form.set('ads_type_id', adType.id);\r\n        // form.set('ads_type_id', adType.id);\r\n        // form.set('ads_type_id', adType.id);\r\n        return form;\r\n    };\r\n\r\n    const onSubmit = async (values: CreateAdFields) => {\r\n        try {\r\n            if (!isPreview) {\r\n                setIsPreview(true);\r\n            } else {\r\n                const data = prepareData(values);\r\n                await userAPI.createAdvrt(data);\r\n                setIsSuccess(true);\r\n                console.log('submit');\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initFields,\r\n        validationSchema: createAdvrtSchema,\r\n        onSubmit\r\n    });\r\n\r\n    const {\r\n        setValues,\r\n        values,\r\n        errors,\r\n        setErrors,\r\n        touched,\r\n        handleBlur,\r\n    } = formik;\r\n\r\n    const handlePreview = (value) => () => {\r\n        setIsPreview(value)\r\n    };\r\n\r\n    const handleCheckboxChange = (valName) => ({target}) => {\r\n        setValues({...values, [valName]: target.checked});\r\n    };\r\n\r\n    const handleParamsCheckbox = (valueName, value) => () => {\r\n        if (values[valueName]) {\r\n            if (values[valueName].some(val => val.id === value.id)) {\r\n                values[valueName].map((val, index) => {\r\n                    if (val.id === value.id) {\r\n                        values[valueName].splice(index, 1)\r\n                    }\r\n                });\r\n                setValues({...values});\r\n            } else {\r\n                setValues({\r\n                        ...values,\r\n                        [valueName]: [...values[valueName], value]\r\n                    }\r\n                );\r\n            }\r\n        } else {\r\n            setValues({...values, [valueName]: [value]});\r\n        }\r\n    };\r\n\r\n    const handleMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n        setAnchor(null);\r\n\r\n        setValues({\r\n            ...values,\r\n            [valueName]: newValue\r\n        });\r\n\r\n        // Reset sub props in values\r\n        Object.keys(newValue).map(key => {\r\n            if (values[key]) {\r\n                setValues({\r\n                    ...values,\r\n                    [valueName]: newValue,\r\n                    [key]: {id: null, name: 'Не выбрано', ...newValue[key]}\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleListItem = (valueName, value) => () => {\r\n        if (values[valueName] && values[valueName].id === value.id) {\r\n            delete values[valueName];\r\n\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                [valueName]: value\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setErrors({});\r\n        setValues({...initFields});\r\n        isPreview && setIsPreview(false);\r\n    }, [createAdvrt.data.id, createAdvrt.data.name]);\r\n\r\n    console.log(values)\r\n    const classes = useStyles();\r\n    return (\r\n        <MainLayout>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} md={9}>\r\n                        <FormikProvider value={formik}>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                {\r\n                                    isSuccess\r\n                                        ? <SuccessAdvrt/>\r\n                                        : (\r\n                                            <AdvrtForm\r\n                                                locations={locations}\r\n                                                isPreview={isPreview}\r\n                                                setIsPreview={setIsPreview}\r\n                                                createAdvrt={createAdvrt}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                values={values}\r\n                                                setValues={setValues}\r\n                                                handleBlur={handleBlur}\r\n                                                handleMenuItem={handleMenuItem}\r\n                                                handleListItem={handleListItem}\r\n                                                handleParamsCheckbox={handleParamsCheckbox}\r\n                                                handleCheckboxChange={handleCheckboxChange}\r\n                                            />\r\n                                        )\r\n                                }\r\n                                <div className={classes.nextButtonBlock}>\r\n                                    {\r\n                                        isPreview && (\r\n                                            <ButtonComponent\r\n                                                className={classes.nextButton}\r\n                                                onClick={handlePreview(false)}\r\n                                            >\r\n                                                <Typography>\r\n                                                    Назад\r\n                                                </Typography>\r\n                                            </ButtonComponent>\r\n                                        )\r\n                                    }\r\n                                    <ButtonComponent\r\n                                        type='submit'\r\n                                        className={classes.nextButton}\r\n                                    >\r\n                                        <Typography>\r\n                                            {\r\n                                                isPreview\r\n                                                    ? 'Создать'\r\n                                                    : 'Далее'\r\n                                            }\r\n                                        </Typography>\r\n                                    </ButtonComponent>\r\n                                </div>\r\n                            </form>\r\n                        </FormikProvider>\r\n                    </Grid>\r\n                    <Hidden smDown>\r\n                        <Grid\r\n                            item\r\n                            md={3}\r\n                            container\r\n                            justify=\"flex-end\"\r\n                            className={classes.adBanner}\r\n                        >\r\n                            <Grid item md={12}>\r\n                                <div className=\"right-banner\"/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Hidden>\r\n                </Grid>\r\n            </Container>\r\n        </MainLayout>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}