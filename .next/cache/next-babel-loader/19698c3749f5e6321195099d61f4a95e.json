{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { FormikProvider } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { AncmntLotForm } from './AncmntLotForm';\nexport var autoSelectKeys = ['condition', 'area'];\nexport var textFieldKeys = ['area'];\nvar numberRegEx = /^[0-9]*$/;\nexport var AncmntLotFormContainer = function AncmntLotFormContainer(props) {\n  _s();\n\n  var _useSelector = useSelector(function (store) {\n    return store;\n  }),\n      locations = _useSelector.locations;\n\n  var _props$formik = props.formik,\n      values = _props$formik.values,\n      setValues = _props$formik.setValues,\n      errors = _props$formik.errors,\n      touched = _props$formik.touched,\n      setTouched = _props$formik.setTouched,\n      handleBlur = _props$formik.handleBlur,\n      handleSubmit = _props$formik.handleSubmit;\n  var adParams = values.adParams;\n\n  var handleCheckboxChange = function handleCheckboxChange(valName) {\n    return function (_ref) {\n      var target = _ref.target;\n      var isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price'].some(function (fieldName) {\n        return fieldName === valName;\n      });\n\n      if (isAuctionField) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, _defineProperty({}, valName, target.checked))\n        }));\n      } else if (valName === 'price_by_now') {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n            price_by_now: {\n              isActive: target.checked,\n              value: values.auction.price_by_now.value\n            }\n          })\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valName, target.checked)));\n      }\n    };\n  };\n\n  var handleParamsCheckbox = function handleParamsCheckbox(valueName, value) {\n    return function () {\n      if (adParams[valueName]) {\n        if (adParams[valueName].some(function (val) {\n          return val.id === value.id;\n        })) {\n          adParams[valueName].map(function (val, index) {\n            if (val.id === value.id) {\n              adParams[valueName].splice(index, 1);\n            }\n          });\n        } else {\n          adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, [].concat(_toConsumableArray(adParams[valueName]), [value])));\n        }\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, [value]));\n      }\n\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        adParams: adParams\n      }));\n    };\n  };\n\n  var handleMenuItem = function handleMenuItem(valueName) {\n    return function (newValue, setAnchor) {\n      return function () {\n        setAnchor(null);\n\n        if (valueName === 'currency') {\n          setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, newValue)));\n        } else if (valueName === 'duration') {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            auction: _objectSpread(_objectSpread({}, values.auction), {}, _defineProperty({}, valueName, newValue))\n          }));\n        } else {\n          // Reset sub props in values\n          Object.keys(newValue).map(function (key) {\n            if (adParams[key]) {\n              adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, key, {\n                id: null,\n                name: 'Не выбрано'\n              }));\n            }\n\n            setValues(_objectSpread(_objectSpread({}, values), {}, {\n              adParams: _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, newValue))\n            }));\n          });\n        }\n      };\n    };\n  };\n\n  var handleListItem = function handleListItem(valueName, value) {\n    return function () {\n      if (adParams[valueName] && adParams[valueName].id === value.id) {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, {\n          id: null,\n          name: 'Не выбрано'\n        }));\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, value));\n      }\n\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        adParams: adParams\n      }));\n    };\n  };\n\n  var handleInput = function handleInput(valueName) {\n    return function (_ref2) {\n      var target = _ref2.target;\n\n      if (numberRegEx.test(target.value)) {\n        if (valueName === 'price') {\n          setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valueName, target.value)));\n        } else {\n          adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, target.value));\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            adParams: adParams\n          }));\n        }\n      }\n    };\n  };\n\n  var handleAuctionInput = function handleAuctionInput(valName) {\n    return function (_ref3) {\n      var target = _ref3.target;\n\n      if (numberRegEx.test(target.value)) {\n        if (valName === 'price_by_now') {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            auction: _objectSpread(_objectSpread({}, values.auction), {}, _defineProperty({}, valName, {\n              isActive: true,\n              value: target.value\n            }))\n          }));\n        } else {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            auction: _objectSpread(_objectSpread({}, values.auction), {}, _defineProperty({}, valName, target.value))\n          }));\n        }\n      }\n    };\n  };\n\n  var handleSwitch = function handleSwitch(_, value) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n        isActive: value\n      })\n    }));\n  };\n\n  var handleWeekDay = function handleWeekDay(value) {\n    return function () {\n      if (values.avalTime.week.some(function (val) {\n        return val.id === value.id;\n      })) {\n        values.avalTime.week.map(function (val, index) {\n          if (val.id === value.id) {\n            values.avalTime.week.splice(index, 1);\n          }\n        });\n        setValues(_objectSpread({}, values));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n            week: [].concat(_toConsumableArray(values.avalTime.week), [value])\n          })\n        }));\n      }\n    };\n  };\n\n  var handleTime = function handleTime(_ref4) {\n    var target = _ref4.target;\n    var value = target.value;\n    var regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\n    var isValid = regEx.test(value);\n\n    if (isValid) {\n      value = value.replace(/^:(.+)/, function (m) {\n        return \"00\".concat(m);\n      }).replace(/(.+):$/, function (m) {\n        return \"\".concat(m, \"00\");\n      });\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, _defineProperty({}, target.name, value))\n      }));\n    }\n  };\n\n  return __jsx(FormikProvider, {\n    value: props.formik\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(AncmntLotForm, _extends({}, props, {\n    errors: errors,\n    touched: touched,\n    setTouched: setTouched,\n    values: values,\n    setValues: setValues,\n    locations: locations,\n    handleBlur: handleBlur,\n    handleTime: handleTime,\n    handleInput: handleInput,\n    handleSwitch: handleSwitch,\n    handleWeekDay: handleWeekDay,\n    handleListItem: handleListItem,\n    handleMenuItem: handleMenuItem,\n    handleAuctionInput: handleAuctionInput,\n    handleParamsCheckbox: handleParamsCheckbox,\n    handleCheckboxChange: handleCheckboxChange\n  }))));\n};\n\n_s(AncmntLotFormContainer, \"ZFmjFBT7yWnOsHasemC59VJKYL0=\", false, function () {\n  return [useSelector];\n});\n\n_c = AncmntLotFormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AncmntLotFormContainer\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/announcement/create_ancmnt_lot/ancmnt_lot_form/AncmntLotFormContainer.tsx"],"names":["React","FormikProvider","useSelector","AncmntLotForm","autoSelectKeys","textFieldKeys","numberRegEx","AncmntLotFormContainer","props","store","locations","formik","values","setValues","errors","touched","setTouched","handleBlur","handleSubmit","adParams","handleCheckboxChange","valName","target","isAuctionField","some","fieldName","auction","checked","price_by_now","isActive","value","handleParamsCheckbox","valueName","val","id","map","index","splice","handleMenuItem","newValue","setAnchor","Object","keys","key","name","handleListItem","handleInput","test","handleAuctionInput","handleSwitch","_","avalTime","handleWeekDay","week","handleTime","regEx","isValid","replace","m"],"mappings":"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","sourcesContent":["import React, {FC} from 'react';\r\nimport {FormikProvider} from \"formik\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AncmntLotForm} from './AncmntLotForm';\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\n\r\n\r\nexport const autoSelectKeys = ['condition', 'area'];\r\nexport const textFieldKeys = ['area'];\r\n\r\nconst numberRegEx = /^[0-9]*$/;\r\n\r\nexport const AncmntLotFormContainer: FC<any> = (props) => {\r\n    const {locations} = useSelector((store: RootState) => store);\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        touched,\r\n        setTouched,\r\n        handleBlur,\r\n        handleSubmit,\r\n    } = props.formik;\r\n\r\n    let {adParams} = values;\r\n\r\n    const handleCheckboxChange = (valName) => ({target}) => {\r\n        const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price']\r\n            .some(fieldName => fieldName === valName);\r\n\r\n        if (isAuctionField) {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valName]: target.checked\r\n                }\r\n            });\r\n        } else if (valName === 'price_by_now') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    price_by_now: {\r\n                        isActive: target.checked,\r\n                        value: values.auction.price_by_now.value\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            setValues({...values, [valName]: target.checked});\r\n        }\r\n    };\r\n\r\n    const handleParamsCheckbox = (valueName, value) => () => {\r\n        if (adParams[valueName]) {\r\n            if (adParams[valueName].some(val => val.id === value.id)) {\r\n                adParams[valueName].map((val, index) => {\r\n                    if (val.id === value.id) {\r\n                        adParams[valueName].splice(index, 1);\r\n                    }\r\n                });\r\n            } else {\r\n                adParams = {\r\n                    ...adParams,\r\n                    [valueName]: [...adParams[valueName], value]\r\n                };\r\n            }\r\n        } else {\r\n            adParams = {...adParams, [valueName]: [value]};\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n        setAnchor(null);\r\n\r\n        if (valueName === 'currency') {\r\n            setValues({\r\n                ...values,\r\n                [valueName]: newValue\r\n            });\r\n        } else if (valueName === 'duration') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valueName]: newValue\r\n                }\r\n            });\r\n        } else {\r\n            // Reset sub props in values\r\n            Object.keys(newValue).map(key => {\r\n                if (adParams[key]) {\r\n                    adParams = {\r\n                        ...adParams,\r\n                        [key]: {id: null, name: 'Не выбрано'}\r\n                    };\r\n                }\r\n                setValues({\r\n                    ...values,\r\n                    adParams: {\r\n                        ...adParams,\r\n                        [valueName]: newValue\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleListItem = (valueName, value) => () => {\r\n        if (adParams[valueName] && adParams[valueName].id === value.id) {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: {id: null, name: 'Не выбрано'}\r\n            };\r\n        } else {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: value\r\n            };\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleInput = (valueName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valueName === 'price') {\r\n                setValues({...values, [valueName]: target.value})\r\n            } else {\r\n                adParams = {...adParams, [valueName]: target.value};\r\n                setValues({...values, adParams})\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleAuctionInput = (valName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valName === 'price_by_now') {\r\n                setValues({\r\n                    ...values,\r\n                    auction: {\r\n                        ...values.auction,\r\n                        [valName]: {\r\n                            isActive: true,\r\n                            value: target.value\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    auction: {\r\n                        ...values.auction,\r\n                        [valName]: target.value\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSwitch = (_, value) => {\r\n        setValues({\r\n            ...values,\r\n            avalTime: {\r\n                ...values.avalTime,\r\n                isActive: value\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleWeekDay = (value) => () => {\r\n        if (values.avalTime.week.some(val => val.id === value.id)) {\r\n            values.avalTime.week.map((val, index) => {\r\n                if (val.id === value.id) {\r\n                    values.avalTime.week.splice(index, 1)\r\n                }\r\n            });\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    week: [\r\n                        ...values.avalTime.week,\r\n                        value\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTime = ({target}) => {\r\n        let {value} = target;\r\n        const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\r\n        const isValid = regEx.test(value);\r\n\r\n        if (isValid) {\r\n            value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    [target.name]: value\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormikProvider value={props.formik}>\r\n            <form onSubmit={handleSubmit}>\r\n                <AncmntLotForm\r\n                    {...props}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    setTouched={setTouched}\r\n                    values={values}\r\n                    setValues={setValues}\r\n                    locations={locations}\r\n                    handleBlur={handleBlur}\r\n                    handleTime={handleTime}\r\n                    handleInput={handleInput}\r\n                    handleSwitch={handleSwitch}\r\n                    handleWeekDay={handleWeekDay}\r\n                    handleListItem={handleListItem}\r\n                    handleMenuItem={handleMenuItem}\r\n                    handleAuctionInput={handleAuctionInput}\r\n                    handleParamsCheckbox={handleParamsCheckbox}\r\n                    handleCheckboxChange={handleCheckboxChange}\r\n                />\r\n            </form>\r\n        </FormikProvider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}