{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useFormik, FormikProvider } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { AdvrtForm } from './AdvrtForm';\nimport { createAdvrtSchema, isRequired } from \"@root/validation_schemas/createAdvrtSchema\";\nimport { dataPrepare } from \"@src/components/advertisement/create_advrt/advrt_form/advrt_params/helpers\";\nexport const autoSelectKeys = ['condition', 'area'];\nexport const textFieldKeys = ['area'];\nconst numberRegEx = /^[0-9]*$/;\nconst initFields = {\n  title: '',\n  safe_deal: false,\n  delivery: false,\n  exchange: false,\n  location: null,\n  files: [],\n  description: '',\n  phone: '',\n  price: '',\n  currency: {\n    id: null,\n    name: ''\n  },\n  avalTime: {\n    isActive: false,\n    start_time: '00:00',\n    end_time: '00:00',\n    week: [{\n      id: 1,\n      name: 'Пн'\n    }, {\n      id: 2,\n      name: 'Вт'\n    }, {\n      id: 3,\n      name: 'Ср'\n    }, {\n      id: 4,\n      name: 'Чт'\n    }, {\n      id: 5,\n      name: 'Пт'\n    }, {\n      id: 6,\n      name: 'Сб'\n    }, {\n      id: 7,\n      name: 'Вс'\n    }]\n  },\n  auction: {\n    duration: {\n      id: null,\n      expiration_at: null\n    },\n    offer_the_price: false,\n    auto_renewal: false,\n    reserve_price: '',\n    price_by_now: {\n      isActive: false,\n      value: ''\n    },\n    display_phone: false\n  },\n  adParams: {\n    safety: [],\n    multimedia: [],\n    assistant: [],\n    exterior: [],\n    car_climate: [],\n    airbags: []\n  }\n};\nexport const AdvrtFormContainer = props => {\n  const {\n    createAdvrt,\n    setIsForm\n  } = props;\n  const {\n    adType,\n    category,\n    subCategory\n  } = createAdvrt;\n  const {\n    locations\n  } = useSelector(store => store);\n  const {\n    0: isPreview,\n    1: setIsPreview\n  } = useState(false);\n  const {\n    0: isSuccess,\n    1: setIsSuccess\n  } = useState(false);\n\n  const preparedData = data => {\n    const form = new FormData();\n    const {\n      avalTime,\n      location,\n      files,\n      adParams,\n      auction\n    } = data;\n    form.set('ads_type_id', adType.id.toString());\n    form.set('parent_categories_id', category.id.toString());\n\n    if (subCategory.id) {\n      form.set('child_categories_id', subCategory.id.toString());\n    }\n\n    form.set('title', data.title);\n    form.set('safe_deal', Number(data.safe_deal).toString());\n    form.set('delivery', Number(data.delivery).toString());\n    form.set('exchange', Number(data.exchange).toString());\n    form.set('phone', data.phone);\n    form.set('description', data.description);\n    form.set('price', data.price);\n    form.set('currency_id', data.currency.id.toString());\n    files.forEach(({\n      file\n    }) => form.append('files[]', file, file.name));\n\n    if (avalTime.isActive) {\n      avalTime.week.forEach((day, i) => form.append(`week[${i}]`, day.id.toString()));\n      form.set('start_time', avalTime.start_time.toString());\n      form.set('end_time', avalTime.end_time.toString());\n    }\n\n    for (const key in location) {\n      if (typeof location[key] === 'number') {\n        form.set(key, Number(location[key]).toString());\n      }\n    }\n\n    for (let key in adParams) {\n      const value = adParams[key];\n\n      if (value) {\n        if (typeof value === 'string') {\n          const validKey = key.replace('_value', '');\n\n          if (textFieldKeys.some(k => k === validKey)) {\n            key = validKey;\n          }\n\n          form.set(key, value);\n        } else if (Array.isArray(value)) {\n          value.forEach((value, i) => form.append(`${key}[${i}]`, value.id));\n        } else {\n          if (value.id) {\n            switch (key) {\n              case 'models':\n                key = 'model';\n                break;\n\n              case 'colors':\n                key = 'color';\n            }\n\n            form.set(`${key}_id`, value.id);\n          }\n        }\n      }\n    }\n\n    if (adType.id !== 1) {\n      form.set('duration_id', auction.duration.id.toString());\n      form.set('display_phone', Number(auction.display_phone).toString());\n\n      if (adType.id === 3) {\n        form.set('reserve_price', auction.reserve_price);\n        form.set('auto_renewal', Number(auction.auto_renewal).toString());\n        form.set('offer_the_price', Number(auction.offer_the_price).toString());\n\n        if (auction.price_by_now.isActive) {\n          form.set('price_by_now', auction.price_by_now.value);\n        }\n      }\n    }\n\n    for (const key of form.entries()) {\n      console.log(key[0] + '-' + key[1]);\n    }\n\n    return form;\n  };\n\n  const onSubmit = async values => {\n    try {\n      if (!isPreview) {\n        setIsPreview(true);\n      } else {\n        const data = preparedData(values); // await userAPI.createAdvrt(data);\n\n        setIsSuccess(true);\n        setIsPreview(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: initFields,\n    validationSchema: createAdvrtSchema,\n    onSubmit\n  });\n  const {\n    values,\n    errors,\n    touched,\n    setValues,\n    setErrors,\n    setTouched,\n    handleBlur,\n    handleSubmit\n  } = formik; // eslint-disable-next-line prefer-const\n\n  let {\n    adParams,\n    auction\n  } = values;\n\n  const handleBackBtn = () => {\n    if (isPreview) {\n      setIsPreview(false);\n    } else {\n      setIsForm(false);\n      setIsSuccess(false);\n    }\n  };\n\n  const handleCheckboxChange = valName => ({\n    target\n  }) => {\n    const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price'].some(fieldName => fieldName === valName);\n\n    if (isAuctionField) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          [valName]: target.checked\n        })\n      }));\n    } else if (valName === 'price_by_now') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, auction), {}, {\n          price_by_now: {\n            isActive: target.checked,\n            value: auction.price_by_now.value\n          }\n        })\n      }));\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        [valName]: target.checked\n      }));\n    }\n  };\n\n  const handleParamsCheckbox = (valueName, value) => () => {\n    if (adParams[valueName]) {\n      if (adParams[valueName].some(val => val.id === value.id)) {\n        adParams[valueName].map((val, index) => {\n          if (val.id === value.id) {\n            adParams[valueName].splice(index, 1);\n          }\n        });\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n          [valueName]: [...adParams[valueName], value]\n        });\n      }\n    } else {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: [value]\n      });\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      adParams\n    }));\n  };\n\n  const handleMenuItem = valueName => (newValue, setAnchor) => () => {\n    setAnchor(null);\n\n    if (valueName === 'currency') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        [valueName]: newValue\n      }));\n    } else if (valueName === 'duration') {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n          [valueName]: newValue\n        })\n      }));\n    } else {\n      // Reset sub props in values\n      Object.keys(newValue).map(key => {\n        if (adParams[key]) {\n          adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n            [key]: {\n              id: null,\n              name: 'Не выбрано'\n            }\n          });\n        }\n\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          adParams: _objectSpread(_objectSpread({}, adParams), {}, {\n            [valueName]: newValue\n          })\n        }));\n      });\n    }\n  };\n\n  const handleListItem = (valueName, value) => () => {\n    if (adParams[valueName] && adParams[valueName].id === value.id) {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: {\n          id: null,\n          name: 'Не выбрано'\n        }\n      });\n    } else {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: value\n      });\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      adParams\n    }));\n  };\n\n  const handleParamsInput = valueName => ({\n    target\n  }) => {\n    if (numberRegEx.test(target.value)) {\n      adParams = _objectSpread(_objectSpread({}, adParams), {}, {\n        [valueName]: target.value\n      });\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        adParams\n      }));\n    }\n  };\n\n  const handleAuctionInput = valName => ({\n    target\n  }) => {\n    if (numberRegEx.test(target.value)) {\n      if (valName === 'price_by_now') {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n            [valName]: {\n              isActive: true,\n              value: target.value\n            }\n          })\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          auction: _objectSpread(_objectSpread({}, values.auction), {}, {\n            [valName]: target.value\n          })\n        }));\n      }\n    }\n  };\n\n  const handleSwitch = (_, value) => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n        isActive: value\n      })\n    }));\n  };\n\n  const handleWeekDay = value => () => {\n    if (values.avalTime.week.some(val => val.id === value.id)) {\n      values.avalTime.week.map((val, index) => {\n        if (val.id === value.id) {\n          values.avalTime.week.splice(index, 1);\n        }\n      });\n      setValues(_objectSpread({}, values));\n    } else {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n          week: [...values.avalTime.week, value]\n        })\n      }));\n    }\n  };\n\n  const handleTime = ({\n    target\n  }) => {\n    let {\n      value\n    } = target;\n    const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\n    const isValid = regEx.test(value);\n\n    if (isValid) {\n      value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n          [target.name]: value\n        })\n      }));\n    }\n  };\n\n  const setReqValues = () => {\n    const reqVals = {};\n    const reqParamsVals = {};\n    const adParamsVals = dataPrepare(subCategory.data, adParams);\n\n    if (category.id === 11) {\n      reqVals['price'] = '0';\n    }\n\n    if (adType.currency.length !== 0) {\n      reqVals['currency'] = adType.currency.filter(cur => cur.name === 'sum')[0];\n    }\n\n    if (adType.id !== 1) {\n      reqVals['auction'] = _objectSpread(_objectSpread({}, values.auction), {}, {\n        duration: adType.expired[0]\n      });\n    }\n\n    Object.keys(adParamsVals).forEach(key => {\n      if (isRequired(key) && adParams[key] === undefined) {\n        if (key === 'manufacturer' && subCategory.id == 1) {\n          reqParamsVals['models'] = {\n            id: null,\n            name: 'Не выбрано'\n          };\n        }\n\n        if (Array.isArray(adParamsVals[key])) {\n          reqParamsVals[key] = {\n            id: null,\n            name: 'Не выбрано'\n          };\n        } else {\n          reqParamsVals[key] = adParamsVals[key];\n        }\n      } else if (autoSelectKeys.some(k => k === key)) {\n        if (textFieldKeys.some(k => k === key)) {\n          reqParamsVals[`${key}_value`] = '';\n        }\n\n        reqParamsVals[key] = adParamsVals[key][0];\n      }\n    });\n    setValues(_objectSpread(_objectSpread(_objectSpread({}, initFields), reqVals), {}, {\n      adParams: _objectSpread(_objectSpread({}, adParams), reqParamsVals)\n    }));\n  };\n\n  useEffect(() => {\n    setReqValues();\n    setErrors({});\n  }, [subCategory.id, subCategory.name, Object.keys(adParams).length]);\n  console.log(createAdvrt);\n  console.log(values, errors);\n  return __jsx(FormikProvider, {\n    value: formik\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(AdvrtForm, {\n    isSuccess: isSuccess,\n    locations: locations,\n    isPreview: isPreview,\n    setIsPreview: setIsPreview,\n    createAdvrt: createAdvrt,\n    errors: errors,\n    touched: touched,\n    setTouched: setTouched,\n    values: values,\n    setValues: setValues,\n    handleBlur: handleBlur,\n    handleTime: handleTime,\n    handleSwitch: handleSwitch,\n    handleWeekDay: handleWeekDay,\n    handleBackBtn: handleBackBtn,\n    handleMenuItem: handleMenuItem,\n    handleListItem: handleListItem,\n    handleParamsInput: handleParamsInput,\n    handleAuctionInput: handleAuctionInput,\n    handleParamsCheckbox: handleParamsCheckbox,\n    handleCheckboxChange: handleCheckboxChange\n  })));\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/advrt_form/AdvrtFormContainer.tsx"],"names":["React","useEffect","useState","useFormik","FormikProvider","useSelector","AdvrtForm","createAdvrtSchema","isRequired","dataPrepare","autoSelectKeys","textFieldKeys","numberRegEx","initFields","title","safe_deal","delivery","exchange","location","files","description","phone","price","currency","id","name","avalTime","isActive","start_time","end_time","week","auction","duration","expiration_at","offer_the_price","auto_renewal","reserve_price","price_by_now","value","display_phone","adParams","safety","multimedia","assistant","exterior","car_climate","airbags","AdvrtFormContainer","props","createAdvrt","setIsForm","adType","category","subCategory","locations","store","isPreview","setIsPreview","isSuccess","setIsSuccess","preparedData","data","form","FormData","set","toString","Number","forEach","file","append","day","i","key","validKey","replace","some","k","Array","isArray","entries","console","log","onSubmit","values","e","formik","initialValues","validationSchema","errors","touched","setValues","setErrors","setTouched","handleBlur","handleSubmit","handleBackBtn","handleCheckboxChange","valName","target","isAuctionField","fieldName","checked","handleParamsCheckbox","valueName","val","map","index","splice","handleMenuItem","newValue","setAnchor","Object","keys","handleListItem","handleParamsInput","test","handleAuctionInput","handleSwitch","_","handleWeekDay","handleTime","regEx","isValid","m","setReqValues","reqVals","reqParamsVals","adParamsVals","length","filter","cur","expired","undefined"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {useFormik, FormikProvider} from \"formik\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {userAPI} from '@src/api/api';\r\nimport {AdvrtForm} from './AdvrtForm';\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {CreateAdFields} from \"@root/interfaces/Advertisement\";\r\nimport {createAdvrtSchema, isRequired} from \"@root/validation_schemas/createAdvrtSchema\";\r\nimport {dataPrepare} from \"@src/components/advertisement/create_advrt/advrt_form/advrt_params/helpers\";\r\n\r\n\r\nexport const autoSelectKeys = [\r\n    'condition',\r\n    'area'\r\n];\r\n\r\nexport const textFieldKeys = [\r\n    'area'\r\n];\r\n\r\nconst numberRegEx = /^[0-9]*$/;\r\n\r\nconst initFields: CreateAdFields = {\r\n    title: '',\r\n    safe_deal: false,\r\n    delivery: false,\r\n    exchange: false,\r\n    location: null,\r\n    files: [],\r\n    description: '',\r\n    phone: '',\r\n    price: '',\r\n    currency: {\r\n        id: null,\r\n        name: ''\r\n    },\r\n    avalTime: {\r\n        isActive: false,\r\n        start_time: '00:00',\r\n        end_time: '00:00',\r\n        week: [\r\n            {id: 1, name: 'Пн'},\r\n            {id: 2, name: 'Вт'},\r\n            {id: 3, name: 'Ср'},\r\n            {id: 4, name: 'Чт'},\r\n            {id: 5, name: 'Пт'},\r\n            {id: 6, name: 'Сб'},\r\n            {id: 7, name: 'Вс'}\r\n        ],\r\n    },\r\n    auction: {\r\n        duration: {\r\n            id: null,\r\n            expiration_at: null\r\n        },\r\n        offer_the_price: false,\r\n        auto_renewal: false,\r\n        reserve_price: '',\r\n        price_by_now: {\r\n            isActive: false,\r\n            value: ''\r\n        },\r\n        display_phone: false,\r\n    },\r\n    adParams: {\r\n        safety: [],\r\n        multimedia: [],\r\n        assistant: [],\r\n        exterior: [],\r\n        car_climate: [],\r\n        airbags: [],\r\n    }\r\n};\r\n\r\nexport const AdvrtFormContainer: FC<any> = (props) => {\r\n    const {createAdvrt, setIsForm} = props;\r\n    const {adType, category, subCategory} = createAdvrt;\r\n\r\n    const {locations} = useSelector((store: RootState) => store);\r\n\r\n    const [isPreview, setIsPreview] = useState(false);\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n    const preparedData = (data: CreateAdFields) => {\r\n        const form = new FormData();\r\n        const {\r\n            avalTime,\r\n            location,\r\n            files,\r\n            adParams,\r\n            auction\r\n        } = data;\r\n\r\n        form.set('ads_type_id', adType.id.toString());\r\n        form.set('parent_categories_id', category.id.toString());\r\n        if (subCategory.id) {\r\n            form.set('child_categories_id', subCategory.id.toString());\r\n        }\r\n        form.set('title', data.title);\r\n        form.set('safe_deal', Number(data.safe_deal).toString());\r\n        form.set('delivery', Number(data.delivery).toString());\r\n        form.set('exchange', Number(data.exchange).toString());\r\n        form.set('phone', data.phone);\r\n        form.set('description', data.description);\r\n        form.set('price', data.price);\r\n        form.set('currency_id', data.currency.id.toString());\r\n\r\n        files.forEach(({file}: any) => form.append('files[]', file, file.name));\r\n\r\n        if (avalTime.isActive) {\r\n            avalTime.week.forEach((day, i) => (\r\n                form.append(`week[${i}]`, day.id.toString())\r\n            ));\r\n            form.set('start_time', avalTime.start_time.toString());\r\n            form.set('end_time', avalTime.end_time.toString());\r\n        }\r\n\r\n        for (const key in location) {\r\n            if (typeof location[key] === 'number') {\r\n                form.set(key, Number(location[key]).toString());\r\n            }\r\n        }\r\n\r\n        for (let key in adParams) {\r\n            const value = adParams[key];\r\n            if (value) {\r\n                if (typeof value === 'string') {\r\n                    const validKey = key.replace('_value', '');\r\n                    if (textFieldKeys.some(k => k === validKey)) {\r\n                        key = validKey;\r\n                    }\r\n                    form.set(key, value);\r\n                } else if (Array.isArray(value)) {\r\n                    value.forEach((value, i) => (\r\n                        form.append(`${key}[${i}]`, value.id))\r\n                    )\r\n                } else {\r\n                    if (value.id) {\r\n                        switch (key) {\r\n                            case 'models' :\r\n                                key = 'model';\r\n                                break;\r\n                            case 'colors' :\r\n                                key = 'color';\r\n                        }\r\n                        form.set(`${key}_id`, value.id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (adType.id !== 1) {\r\n            form.set('duration_id', auction.duration.id.toString());\r\n            form.set('display_phone', Number(auction.display_phone).toString());\r\n            if (adType.id === 3) {\r\n                form.set('reserve_price', auction.reserve_price);\r\n                form.set('auto_renewal', Number(auction.auto_renewal).toString());\r\n                form.set('offer_the_price', Number(auction.offer_the_price).toString());\r\n                if (auction.price_by_now.isActive) {\r\n                    form.set('price_by_now', auction.price_by_now.value);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const key of form.entries()) {\r\n            console.log(key[0] + '-' + key[1]);\r\n        }\r\n\r\n        return form;\r\n    };\r\n\r\n    const onSubmit = async (values: CreateAdFields) => {\r\n        try {\r\n            if (!isPreview) {\r\n                setIsPreview(true);\r\n            } else {\r\n                const data = preparedData(values);\r\n                // await userAPI.createAdvrt(data);\r\n                setIsSuccess(true);\r\n                setIsPreview(false);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initFields,\r\n        validationSchema: createAdvrtSchema,\r\n        onSubmit\r\n    });\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        touched,\r\n        setValues,\r\n        setErrors,\r\n        setTouched,\r\n        handleBlur,\r\n        handleSubmit,\r\n    } = formik;\r\n\r\n    // eslint-disable-next-line prefer-const\r\n    let {adParams, auction} = values;\r\n\r\n    const handleBackBtn = () => {\r\n        if (isPreview) {\r\n            setIsPreview(false);\r\n        } else {\r\n            setIsForm(false);\r\n            setIsSuccess(false);\r\n        }\r\n    };\r\n\r\n    const handleCheckboxChange = (valName) => ({target}) => {\r\n        const isAuctionField = ['auto_renewal', 'display_phone', 'offer_the_price']\r\n            .some(fieldName => fieldName === valName);\r\n\r\n        if (isAuctionField) {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valName]: target.checked\r\n                }\r\n            });\r\n        } else if (valName === 'price_by_now') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...auction,\r\n                    price_by_now: {\r\n                        isActive: target.checked,\r\n                        value: auction.price_by_now.value\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            setValues({...values, [valName]: target.checked});\r\n        }\r\n    };\r\n\r\n    const handleParamsCheckbox = (valueName, value) => () => {\r\n        if (adParams[valueName]) {\r\n            if (adParams[valueName].some(val => val.id === value.id)) {\r\n                adParams[valueName].map((val, index) => {\r\n                    if (val.id === value.id) {\r\n                        adParams[valueName].splice(index, 1);\r\n                    }\r\n                });\r\n            } else {\r\n                adParams = {\r\n                    ...adParams,\r\n                    [valueName]: [...adParams[valueName], value]\r\n                };\r\n            }\r\n        } else {\r\n            adParams = {...adParams, [valueName]: [value]};\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n        setAnchor(null);\r\n\r\n        if (valueName === 'currency') {\r\n            setValues({\r\n                ...values,\r\n                [valueName]: newValue\r\n            });\r\n        } else if (valueName === 'duration') {\r\n            setValues({\r\n                ...values,\r\n                auction: {\r\n                    ...values.auction,\r\n                    [valueName]: newValue\r\n                }\r\n            });\r\n        } else {\r\n            // Reset sub props in values\r\n            Object.keys(newValue).map(key => {\r\n                if (adParams[key]) {\r\n                    adParams = {\r\n                        ...adParams,\r\n                        [key]: {id: null, name: 'Не выбрано'}\r\n                    };\r\n                }\r\n                setValues({\r\n                    ...values,\r\n                    adParams: {\r\n                        ...adParams,\r\n                        [valueName]: newValue\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleListItem = (valueName, value) => () => {\r\n        if (adParams[valueName] && adParams[valueName].id === value.id) {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: {id: null, name: 'Не выбрано'}\r\n            };\r\n        } else {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: value\r\n            };\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleParamsInput = (valueName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            adParams = {...adParams, [valueName]: target.value};\r\n            setValues({...values, adParams})\r\n        }\r\n    };\r\n\r\n    const handleAuctionInput = (valName) => ({target}) => {\r\n        if (numberRegEx.test(target.value)) {\r\n            if (valName === 'price_by_now') {\r\n                setValues({\r\n                    ...values,\r\n                    auction: {\r\n                        ...values.auction,\r\n                        [valName]: {\r\n                            isActive: true,\r\n                            value: target.value\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    auction: {\r\n                        ...values.auction,\r\n                        [valName]: target.value\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSwitch = (_, value) => {\r\n        setValues({\r\n            ...values,\r\n            avalTime: {\r\n                ...values.avalTime,\r\n                isActive: value\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleWeekDay = (value) => () => {\r\n        if (values.avalTime.week.some(val => val.id === value.id)) {\r\n            values.avalTime.week.map((val, index) => {\r\n                if (val.id === value.id) {\r\n                    values.avalTime.week.splice(index, 1)\r\n                }\r\n            });\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    week: [\r\n                        ...values.avalTime.week,\r\n                        value\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTime = ({target}) => {\r\n        let {value} = target;\r\n        const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\r\n        const isValid = regEx.test(value);\r\n\r\n        if (isValid) {\r\n            value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    [target.name]: value\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const setReqValues = () => {\r\n        const reqVals = {};\r\n        const reqParamsVals = {};\r\n\r\n        const adParamsVals = dataPrepare(subCategory.data, adParams);\r\n\r\n        if (category.id === 11) {\r\n            reqVals['price'] = '0';\r\n        }\r\n\r\n        if (adType.currency.length !== 0) {\r\n            reqVals['currency'] = adType.currency.filter(cur => cur.name === 'sum')[0];\r\n        }\r\n\r\n        if (adType.id !== 1) {\r\n            reqVals['auction'] = {\r\n                ...values.auction,\r\n                duration: adType.expired[0]\r\n            };\r\n        }\r\n\r\n        Object.keys(adParamsVals).forEach(key => {\r\n            if (isRequired(key) && adParams[key] === undefined) {\r\n                if (key === 'manufacturer' && subCategory.id == 1) {\r\n                    reqParamsVals['models'] = {id: null, name: 'Не выбрано'};\r\n                }\r\n                if (Array.isArray(adParamsVals[key])) {\r\n                    reqParamsVals[key] = {id: null, name: 'Не выбрано'};\r\n                } else {\r\n                    reqParamsVals[key] = adParamsVals[key];\r\n                }\r\n            } else if (autoSelectKeys.some(k => k === key)) {\r\n                if (textFieldKeys.some(k => k === key)) {\r\n                    reqParamsVals[`${key}_value`] = '';\r\n                }\r\n                reqParamsVals[key] = adParamsVals[key][0];\r\n            }\r\n        });\r\n\r\n        setValues({\r\n            ...initFields,\r\n            ...reqVals,\r\n            adParams: {\r\n                ...adParams,\r\n                ...reqParamsVals\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setReqValues();\r\n        setErrors({});\r\n    }, [\r\n        subCategory.id,\r\n        subCategory.name,\r\n        Object.keys(adParams).length\r\n    ]);\r\n\r\n    console.log(createAdvrt)\r\n    console.log(values, errors)\r\n    return (\r\n        <FormikProvider value={formik}>\r\n            <form onSubmit={handleSubmit}>\r\n                <AdvrtForm\r\n                    isSuccess={isSuccess}\r\n                    locations={locations}\r\n                    isPreview={isPreview}\r\n                    setIsPreview={setIsPreview}\r\n                    createAdvrt={createAdvrt}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    setTouched={setTouched}\r\n                    values={values}\r\n                    setValues={setValues}\r\n                    handleBlur={handleBlur}\r\n                    handleTime={handleTime}\r\n                    handleSwitch={handleSwitch}\r\n                    handleWeekDay={handleWeekDay}\r\n                    handleBackBtn={handleBackBtn}\r\n                    handleMenuItem={handleMenuItem}\r\n                    handleListItem={handleListItem}\r\n                    handleParamsInput={handleParamsInput}\r\n                    handleAuctionInput={handleAuctionInput}\r\n                    handleParamsCheckbox={handleParamsCheckbox}\r\n                    handleCheckboxChange={handleCheckboxChange}\r\n                />\r\n            </form>\r\n        </FormikProvider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}