{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userAPI } from \"@src/api/api\";\nconst initialState = {\n  isFetch: false,\n  error: null,\n  data: []\n};\nexport const fetchLocations = createAsyncThunk('locations/fetchLocations', async (lang, {\n  rejectWithValue\n}) => {\n  try {\n    return await userAPI.getLocations(lang);\n  } catch (e) {\n    return rejectWithValue(e.message);\n  }\n});\nconst locationsSlice = createSlice({\n  name: 'locations',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchLocations.pending, state => {\n      state.isFetch = true;\n      state.error = null;\n    });\n    builder.addCase(fetchLocations.fulfilled, (state, action) => {\n      state.isFetch = false;\n      state.error = null;\n      state.data = action.payload;\n    });\n    builder.addCase(fetchLocations.rejected, (state, action) => {\n      state.isFetch = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const locationsReducer = locationsSlice.reducer;","map":null,"metadata":{},"sourceType":"module"}