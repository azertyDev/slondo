{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Hidden, Container, Typography } from '@material-ui/core';\nimport { userAPI } from '@src/api/api';\nimport { AdvrtForm } from './advrt_form/AdvrtForm';\nimport { SuccessAdvrt } from './success_advrt/SuccessAdvrt';\nimport { createAdvrtSchema } from \"@root/validation_schemas/createAdvrtSchema\";\nimport { useFormik, FormikProvider } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { ButtonComponent } from \"@src/components/elements/button/Button\";\nimport { MainLayout } from \"@src/components/MainLayout\";\nimport { useStyles } from './useStyles';\nvar initFields = {\n  title: '',\n  price: '',\n  safe_deal: false,\n  delivery: false,\n  exchange: false,\n  location: null,\n  files: [],\n  description: '',\n  phone: '',\n  avalTime: {\n    isActive: false,\n    start_time: '00:00',\n    end_time: '00:00',\n    week: [{\n      id: 1,\n      name: 'Пн'\n    }, {\n      id: 2,\n      name: 'Вт'\n    }, {\n      id: 3,\n      name: 'Ср'\n    }, {\n      id: 4,\n      name: 'Чт'\n    }, {\n      id: 5,\n      name: 'Пт'\n    }, {\n      id: 6,\n      name: 'Сб'\n    }, {\n      id: 7,\n      name: 'Вс'\n    }]\n  },\n  // auction: {\n  //     duration_id: null,\n  //     offer_the_price: null,\n  //     auto_renewal: false,\n  //     display_phone: false,\n  //     reserve_price: null,\n  //     price_by_now: {\n  //         isActive: false,\n  //         price: ''\n  //     }\n  // },\n  adParams: {}\n};\nexport var CreateAdvrt = function CreateAdvrt() {\n  _s();\n\n  var _useSelector = useSelector(function (store) {\n    return store;\n  }),\n      createAdvrt = _useSelector.createAdvrt,\n      locations = _useSelector.locations;\n\n  var _useState = useState(false),\n      isPreview = _useState[0],\n      setIsPreview = _useState[1];\n\n  var _useState2 = useState(false),\n      isSuccess = _useState2[0],\n      setIsSuccess = _useState2[1];\n\n  var prepareData = function prepareData(data) {\n    var form = new FormData();\n\n    var avalTime = data.avalTime,\n        safe_deal = data.safe_deal,\n        delivery = data.delivery,\n        exchange = data.exchange,\n        location = data.location,\n        files = data.files,\n        otherValues = _objectWithoutProperties(data, [\"avalTime\", \"safe_deal\", \"delivery\", \"exchange\", \"location\", \"files\"]);\n\n    form.set('ads_type_id', createAdvrt.adType.id.toString());\n    form.set('safe_deal', Number(safe_deal).toString());\n    form.set('delivery', Number(delivery).toString());\n    form.set('exchange', Number(exchange).toString());\n    form.set('parent_categories_id', createAdvrt.category.id.toString());\n    files.forEach(function (_ref) {\n      var file = _ref.file;\n      return form.append('files[]', file, file.name);\n    });\n\n    if (avalTime.isActive) {\n      avalTime.week.forEach(function (day, i) {\n        return form.append(\"week[\".concat(i, \"]\"), day.id.toString());\n      });\n      form.set('start_time', avalTime.start_time.toString());\n      form.set('end_time', avalTime.end_time.toString());\n    }\n\n    for (var key in location) {\n      if (typeof location[key] === 'number') {\n        form.set(key, Number(location[key]).toString());\n      }\n    }\n\n    var _loop = function _loop(_key2) {\n      var value = otherValues[_key2];\n\n      if (value) {\n        if (typeof value === 'string') {\n          form.set(_key2, value);\n        } else if (Array.isArray(value)) {\n          value.forEach(function (value, i) {\n            return form.append(\"\".concat(_key2, \"[\").concat(i, \"]\"), value.id);\n          });\n        } else {\n          if (value.id) {\n            switch (_key2) {\n              case 'models':\n                _key2 = 'model';\n                break;\n\n              case 'colors':\n                _key2 = 'color';\n                break;\n            }\n\n            form.set(\"\".concat(_key2, \"_id\"), value.id);\n          }\n        }\n      }\n\n      _key = _key2;\n    };\n\n    for (var _key in otherValues) {\n      _loop(_key);\n    } // for (const key of form.entries()) {\n    //     console.log(key[0] + '-' + key[1]);\n    // }\n\n\n    return form;\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (isPreview) {\n                _context.next = 5;\n                break;\n              }\n\n              setIsPreview(true);\n              _context.next = 9;\n              break;\n\n            case 5:\n              data = prepareData(values);\n              _context.next = 8;\n              return userAPI.createAdvrt(data);\n\n            case 8:\n              // setIsSuccess(true);\n              console.log('success');\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var formik = useFormik({\n    initialValues: initFields,\n    validationSchema: createAdvrtSchema,\n    onSubmit: onSubmit\n  });\n  var values = formik.values,\n      setValues = formik.setValues,\n      errors = formik.errors,\n      setErrors = formik.setErrors,\n      touched = formik.touched,\n      handleBlur = formik.handleBlur;\n  var adParams = values.adParams;\n\n  var handlePreview = function handlePreview(value) {\n    return function () {\n      setIsPreview(value);\n    };\n  };\n\n  var handleCheckboxChange = function handleCheckboxChange(valName) {\n    return function (_ref3) {\n      var target = _ref3.target;\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, valName, target.checked)));\n    };\n  };\n\n  console.log(adParams);\n\n  var handleParamsCheckbox = function handleParamsCheckbox(valueName, value) {\n    return function () {\n      if (adParams[valueName]) {\n        if (adParams[valueName].some(function (val) {\n          return val.id === value.id;\n        })) {\n          adParams[valueName].map(function (val, index) {\n            if (val.id === value.id) {\n              adParams[valueName].splice(index, 1);\n            }\n          });\n        } else {\n          adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, [].concat(_toConsumableArray(adParams[valueName]), [value])));\n        }\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, [value]));\n      }\n\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        adParams: adParams\n      }));\n    };\n  };\n\n  var handleMenuItem = function handleMenuItem(valueName) {\n    return function (newValue, setAnchor) {\n      return function () {\n        setAnchor(null); // Reset sub props in values\n\n        Object.keys(newValue).map(function (key) {\n          if (adParams[key]) {\n            adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, key, {\n              id: null,\n              name: 'Не выбрано'\n            }));\n          }\n\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            adParams: _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, newValue))\n          }));\n        });\n      };\n    };\n  };\n\n  var handleListItem = function handleListItem(valueName, value) {\n    return function () {\n      if (adParams[valueName] && adParams[valueName].id === value.id) {\n        delete adParams[valueName];\n      } else {\n        adParams = _objectSpread(_objectSpread({}, adParams), {}, _defineProperty({}, valueName, value));\n      }\n\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        adParams: adParams\n      }));\n    };\n  };\n\n  var handleSwitch = function handleSwitch(_, value) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n        isActive: value\n      })\n    }));\n  };\n\n  var handleWeekDay = function handleWeekDay(value) {\n    return function () {\n      if (values.avalTime.week.some(function (val) {\n        return val.id === value.id;\n      })) {\n        values.avalTime.week.map(function (val, index) {\n          if (val.id === value.id) {\n            values.avalTime.week.splice(index, 1);\n          }\n        });\n        setValues(_objectSpread({}, values));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, {\n            week: [].concat(_toConsumableArray(values.avalTime.week), [value])\n          })\n        }));\n      }\n    };\n  };\n\n  var handleTime = function handleTime(_ref4) {\n    var target = _ref4.target;\n    var value = target.value;\n    var regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\n    var isValid = regEx.test(value);\n\n    if (isValid) {\n      value = value.replace(/^:(.+)/, function (m) {\n        return \"00\".concat(m);\n      }).replace(/(.+):$/, function (m) {\n        return \"\".concat(m, \"00\");\n      });\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        avalTime: _objectSpread(_objectSpread({}, values.avalTime), {}, _defineProperty({}, target.name, value))\n      }));\n    }\n  };\n\n  useEffect(function () {\n    setErrors({});\n    setValues(_objectSpread({}, initFields));\n    isPreview && setIsPreview(false);\n  }, [createAdvrt.data.id, createAdvrt.data.name]); // console.log(values, errors)\n\n  var classes = useStyles();\n  return __jsx(MainLayout, null, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9\n  }, __jsx(FormikProvider, {\n    value: formik\n  }, __jsx(\"form\", {\n    onSubmit: formik.handleSubmit\n  }, isSuccess ? __jsx(SuccessAdvrt, null) : __jsx(AdvrtForm, {\n    locations: locations,\n    isPreview: isPreview,\n    setIsPreview: setIsPreview,\n    createAdvrt: createAdvrt,\n    errors: errors,\n    touched: touched,\n    values: values,\n    setValues: setValues,\n    handleBlur: handleBlur,\n    handleTime: handleTime,\n    handleSwitch: handleSwitch,\n    handleWeekDay: handleWeekDay,\n    handleMenuItem: handleMenuItem,\n    handleListItem: handleListItem,\n    handleParamsCheckbox: handleParamsCheckbox,\n    handleCheckboxChange: handleCheckboxChange\n  }), __jsx(\"div\", {\n    className: classes.nextButtonBlock\n  }, isPreview && __jsx(ButtonComponent, {\n    className: classes.nextButton,\n    onClick: handlePreview(false)\n  }, __jsx(Typography, null, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")), __jsx(ButtonComponent, {\n    type: \"submit\",\n    disabled: !(createAdvrt.adType.id && createAdvrt.category.id),\n    className: classes.nextButton\n  }, __jsx(Typography, null, isPreview ? 'Создать' : 'Далее')))))), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 3,\n    container: true,\n    justify: \"flex-end\",\n    className: classes.adBanner\n  }, __jsx(Grid, {\n    item: true,\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"right-banner\"\n  })))))));\n};\n\n_s(CreateAdvrt, \"ifKxh8jXpoU7pHs1La9y+FANXR4=\", false, function () {\n  return [useSelector, useFormik, useStyles];\n});\n\n_c = CreateAdvrt;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdvrt\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/advertisement/create_advrt/CreateAdvrt.tsx"],"names":["React","useEffect","useState","Grid","Hidden","Container","Typography","userAPI","AdvrtForm","SuccessAdvrt","createAdvrtSchema","useFormik","FormikProvider","useSelector","ButtonComponent","MainLayout","useStyles","initFields","title","price","safe_deal","delivery","exchange","location","files","description","phone","avalTime","isActive","start_time","end_time","week","id","name","adParams","CreateAdvrt","store","createAdvrt","locations","isPreview","setIsPreview","isSuccess","setIsSuccess","prepareData","data","form","FormData","otherValues","set","adType","toString","Number","category","forEach","file","append","day","i","key","value","Array","isArray","onSubmit","values","console","log","formik","initialValues","validationSchema","setValues","errors","setErrors","touched","handleBlur","handlePreview","handleCheckboxChange","valName","target","checked","handleParamsCheckbox","valueName","some","val","map","index","splice","handleMenuItem","newValue","setAnchor","Object","keys","handleListItem","handleSwitch","_","handleWeekDay","handleTime","regEx","isValid","test","replace","m","classes","handleSubmit","nextButtonBlock","nextButton","adBanner"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAkD,mBAAlD;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,YAAR,QAA2B,8BAA3B;AAEA,SAAQC,iBAAR,QAAgC,4CAAhC;AACA,SAAQC,SAAR,EAAmBC,cAAnB,QAAwC,QAAxC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAAQC,eAAR,QAA8B,wCAA9B;AACA,SAAQC,UAAR,QAAyB,4BAAzB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,IAAMC,UAA0B,GAAG;AAC/BC,EAAAA,KAAK,EAAE,EADwB;AAE/BC,EAAAA,KAAK,EAAE,EAFwB;AAG/BC,EAAAA,SAAS,EAAE,KAHoB;AAI/BC,EAAAA,QAAQ,EAAE,KAJqB;AAK/BC,EAAAA,QAAQ,EAAE,KALqB;AAM/BC,EAAAA,QAAQ,EAAE,IANqB;AAO/BC,EAAAA,KAAK,EAAE,EAPwB;AAQ/BC,EAAAA,WAAW,EAAE,EARkB;AAS/BC,EAAAA,KAAK,EAAE,EATwB;AAU/BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,UAAU,EAAE,OAFN;AAGNC,IAAAA,QAAQ,EAAE,OAHJ;AAINC,IAAAA,IAAI,EAAE,CACF;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KADE,EAEF;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KAFE,EAGF;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KAHE,EAIF;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KAJE,EAKF;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KALE,EAMF;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KANE,EAOF;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KAPE;AAJA,GAVqB;AAwB/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE;AAnCqB,CAAnC;AAsCA,OAAO,IAAMC,WAAqB,GAAG,SAAxBA,WAAwB,GAAM;AAAA;;AAAA,qBACNtB,WAAW,CAAC,UAACuB,KAAD;AAAA,WAAsBA,KAAtB;AAAA,GAAD,CADL;AAAA,MAChCC,WADgC,gBAChCA,WADgC;AAAA,MACnBC,SADmB,gBACnBA,SADmB;;AAAA,kBAGLpC,QAAQ,CAAC,KAAD,CAHH;AAAA,MAGhCqC,SAHgC;AAAA,MAGrBC,YAHqB;;AAAA,mBAILtC,QAAQ,CAAC,KAAD,CAJH;AAAA,MAIhCuC,SAJgC;AAAA,MAIrBC,YAJqB;;AAMvC,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAA0B;AAC1C,QAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;;AAD0C,QAGtCnB,QAHsC,GAUtCiB,IAVsC,CAGtCjB,QAHsC;AAAA,QAItCP,SAJsC,GAUtCwB,IAVsC,CAItCxB,SAJsC;AAAA,QAKtCC,QALsC,GAUtCuB,IAVsC,CAKtCvB,QALsC;AAAA,QAMtCC,QANsC,GAUtCsB,IAVsC,CAMtCtB,QANsC;AAAA,QAOtCC,QAPsC,GAUtCqB,IAVsC,CAOtCrB,QAPsC;AAAA,QAQtCC,KARsC,GAUtCoB,IAVsC,CAQtCpB,KARsC;AAAA,QASnCuB,WATmC,4BAUtCH,IAVsC;;AAY1CC,IAAAA,IAAI,CAACG,GAAL,CAAS,aAAT,EAAwBX,WAAW,CAACY,MAAZ,CAAmBjB,EAAnB,CAAsBkB,QAAtB,EAAxB;AACAL,IAAAA,IAAI,CAACG,GAAL,CAAS,WAAT,EAAsBG,MAAM,CAAC/B,SAAD,CAAN,CAAkB8B,QAAlB,EAAtB;AACAL,IAAAA,IAAI,CAACG,GAAL,CAAS,UAAT,EAAqBG,MAAM,CAAC9B,QAAD,CAAN,CAAiB6B,QAAjB,EAArB;AACAL,IAAAA,IAAI,CAACG,GAAL,CAAS,UAAT,EAAqBG,MAAM,CAAC7B,QAAD,CAAN,CAAiB4B,QAAjB,EAArB;AACAL,IAAAA,IAAI,CAACG,GAAL,CAAS,sBAAT,EAAiCX,WAAW,CAACe,QAAZ,CAAqBpB,EAArB,CAAwBkB,QAAxB,EAAjC;AAEA1B,IAAAA,KAAK,CAAC6B,OAAN,CAAc;AAAA,UAAEC,IAAF,QAAEA,IAAF;AAAA,aACVT,IAAI,CAACU,MAAL,CAAY,SAAZ,EAAuBD,IAAvB,EAA6BA,IAAI,CAACrB,IAAlC,CADU;AAAA,KAAd;;AAIA,QAAIN,QAAQ,CAACC,QAAb,EAAuB;AACnBD,MAAAA,QAAQ,CAACI,IAAT,CAAcsB,OAAd,CAAsB,UAACG,GAAD,EAAMC,CAAN;AAAA,eAClBZ,IAAI,CAACU,MAAL,gBAAoBE,CAApB,QAA0BD,GAAG,CAACxB,EAAJ,CAAOkB,QAAP,EAA1B,CADkB;AAAA,OAAtB;AAGAL,MAAAA,IAAI,CAACG,GAAL,CAAS,YAAT,EAAuBrB,QAAQ,CAACE,UAAT,CAAoBqB,QAApB,EAAvB;AACAL,MAAAA,IAAI,CAACG,GAAL,CAAS,UAAT,EAAqBrB,QAAQ,CAACG,QAAT,CAAkBoB,QAAlB,EAArB;AACH;;AAED,SAAK,IAAMQ,GAAX,IAAkBnC,QAAlB,EAA4B;AACxB,UAAI,OAAOA,QAAQ,CAACmC,GAAD,CAAf,KAAyB,QAA7B,EAAuC;AACnCb,QAAAA,IAAI,CAACG,GAAL,CAASU,GAAT,EAAcP,MAAM,CAAC5B,QAAQ,CAACmC,GAAD,CAAT,CAAN,CAAsBR,QAAtB,EAAd;AACH;AACJ;;AAlCyC;AAqCtC,UAAMS,KAAK,GAAGZ,WAAW,CAACW,KAAD,CAAzB;;AACA,UAAIC,KAAJ,EAAW;AACP,YAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3Bd,UAAAA,IAAI,CAACG,GAAL,CAASU,KAAT,EAAcC,KAAd;AACH,SAFD,MAEO,IAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AAC7BA,UAAAA,KAAK,CAACN,OAAN,CAAc,UAACM,KAAD,EAAQF,CAAR;AAAA,mBACVZ,IAAI,CAACU,MAAL,WAAeG,KAAf,cAAsBD,CAAtB,QAA4BE,KAAK,CAAC3B,EAAlC,CADU;AAAA,WAAd;AAGH,SAJM,MAIA;AACH,cAAI2B,KAAK,CAAC3B,EAAV,EAAc;AACV,oBAAQ0B,KAAR;AACI,mBAAK,QAAL;AACIA,gBAAAA,KAAG,GAAG,OAAN;AACA;;AACJ,mBAAK,QAAL;AACIA,gBAAAA,KAAG,GAAG,OAAN;AACA;AANR;;AAQAb,YAAAA,IAAI,CAACG,GAAL,WAAYU,KAAZ,UAAsBC,KAAK,CAAC3B,EAA5B;AACH;AACJ;AACJ;;AA1DqC;AAAA;;AAoC1C,SAAK,IAAI0B,IAAT,IAAgBX,WAAhB,EAA6B;AAAA,YAApBW,IAAoB;AAuB5B,KA3DyC,CA6D1C;AACA;AACA;;;AAEA,WAAOb,IAAP;AACH,GAlED;;AAoEA,MAAMiB,QAAQ;AAAA,yEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAEJxB,SAFI;AAAA;AAAA;AAAA;;AAGLC,cAAAA,YAAY,CAAC,IAAD,CAAZ;AAHK;AAAA;;AAAA;AAKCI,cAAAA,IALD,GAKQD,WAAW,CAACoB,MAAD,CALnB;AAAA;AAAA,qBAMCxD,OAAO,CAAC8B,WAAR,CAAoBO,IAApB,CAND;;AAAA;AAOL;AACAoB,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AARK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWTD,cAAAA,OAAO,CAACC,GAAR;;AAXS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARH,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAeA,MAAMI,MAAM,GAAGvD,SAAS,CAAC;AACrBwD,IAAAA,aAAa,EAAElD,UADM;AAErBmD,IAAAA,gBAAgB,EAAE1D,iBAFG;AAGrBoD,IAAAA,QAAQ,EAARA;AAHqB,GAAD,CAAxB;AAzFuC,MAgGnCC,MAhGmC,GAsGnCG,MAtGmC,CAgGnCH,MAhGmC;AAAA,MAiGnCM,SAjGmC,GAsGnCH,MAtGmC,CAiGnCG,SAjGmC;AAAA,MAkGnCC,MAlGmC,GAsGnCJ,MAtGmC,CAkGnCI,MAlGmC;AAAA,MAmGnCC,SAnGmC,GAsGnCL,MAtGmC,CAmGnCK,SAnGmC;AAAA,MAoGnCC,OApGmC,GAsGnCN,MAtGmC,CAoGnCM,OApGmC;AAAA,MAqGnCC,UArGmC,GAsGnCP,MAtGmC,CAqGnCO,UArGmC;AAAA,MAwGlCvC,QAxGkC,GAwGtB6B,MAxGsB,CAwGlC7B,QAxGkC;;AA0GvC,MAAMwC,aAAa,GAAG,SAAhBA,aAAgB,CAACf,KAAD;AAAA,WAAW,YAAM;AACnCnB,MAAAA,YAAY,CAACmB,KAAD,CAAZ;AACH,KAFqB;AAAA,GAAtB;;AAIA,MAAMgB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,OAAD;AAAA,WAAa,iBAAc;AAAA,UAAZC,MAAY,SAAZA,MAAY;AACpDR,MAAAA,SAAS,iCAAKN,MAAL,2BAAca,OAAd,EAAwBC,MAAM,CAACC,OAA/B,GAAT;AACH,KAF4B;AAAA,GAA7B;;AAGAd,EAAAA,OAAO,CAACC,GAAR,CAAY/B,QAAZ;;AAEA,MAAM6C,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,SAAD,EAAYrB,KAAZ;AAAA,WAAsB,YAAM;AACrD,UAAIzB,QAAQ,CAAC8C,SAAD,CAAZ,EAAyB;AACrB,YAAI9C,QAAQ,CAAC8C,SAAD,CAAR,CAAoBC,IAApB,CAAyB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAAClD,EAAJ,KAAW2B,KAAK,CAAC3B,EAArB;AAAA,SAA5B,CAAJ,EAA0D;AACtDE,UAAAA,QAAQ,CAAC8C,SAAD,CAAR,CAAoBG,GAApB,CAAwB,UAACD,GAAD,EAAME,KAAN,EAAgB;AACpC,gBAAIF,GAAG,CAAClD,EAAJ,KAAW2B,KAAK,CAAC3B,EAArB,EAAyB;AACrBE,cAAAA,QAAQ,CAAC8C,SAAD,CAAR,CAAoBK,MAApB,CAA2BD,KAA3B,EAAkC,CAAlC;AACH;AACJ,WAJD;AAKH,SAND,MAMO;AACHlD,UAAAA,QAAQ,mCACDA,QADC,2BAEH8C,SAFG,+BAEa9C,QAAQ,CAAC8C,SAAD,CAFrB,IAEkCrB,KAFlC,IAAR;AAIH;AACJ,OAbD,MAaO;AACHzB,QAAAA,QAAQ,mCAAOA,QAAP,2BAAkB8C,SAAlB,EAA8B,CAACrB,KAAD,CAA9B,EAAR;AACH;;AACDU,MAAAA,SAAS,iCAAKN,MAAL;AAAa7B,QAAAA,QAAQ,EAARA;AAAb,SAAT;AACH,KAlB4B;AAAA,GAA7B;;AAoBA,MAAMoD,cAAc,GAAG,SAAjBA,cAAiB,CAACN,SAAD;AAAA,WAAe,UAACO,QAAD,EAAWC,SAAX;AAAA,aAAyB,YAAM;AACjEA,QAAAA,SAAS,CAAC,IAAD,CAAT,CADiE,CAGjE;;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBJ,GAAtB,CAA0B,UAAAzB,GAAG,EAAI;AAC7B,cAAIxB,QAAQ,CAACwB,GAAD,CAAZ,EAAmB;AACfxB,YAAAA,QAAQ,mCACDA,QADC,2BAEHwB,GAFG,EAEG;AAAC1B,cAAAA,EAAE,EAAE,IAAL;AAAWC,cAAAA,IAAI,EAAE;AAAjB,aAFH,EAAR;AAIH;;AACDoC,UAAAA,SAAS,iCACFN,MADE;AAEL7B,YAAAA,QAAQ,kCACDA,QADC,2BAEH8C,SAFG,EAESO,QAFT;AAFH,aAAT;AAOH,SAdD;AAeH,OAnBqC;AAAA,KAAf;AAAA,GAAvB;;AAqBA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACX,SAAD,EAAYrB,KAAZ;AAAA,WAAsB,YAAM;AAC/C,UAAIzB,QAAQ,CAAC8C,SAAD,CAAR,IAAuB9C,QAAQ,CAAC8C,SAAD,CAAR,CAAoBhD,EAApB,KAA2B2B,KAAK,CAAC3B,EAA5D,EAAgE;AAC5D,eAAOE,QAAQ,CAAC8C,SAAD,CAAf;AACH,OAFD,MAEO;AACH9C,QAAAA,QAAQ,mCACDA,QADC,2BAEH8C,SAFG,EAESrB,KAFT,EAAR;AAIH;;AACDU,MAAAA,SAAS,iCAAKN,MAAL;AAAa7B,QAAAA,QAAQ,EAARA;AAAb,SAAT;AACH,KAVsB;AAAA,GAAvB;;AAYA,MAAM0D,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAIlC,KAAJ,EAAc;AAC/BU,IAAAA,SAAS,iCACFN,MADE;AAELpC,MAAAA,QAAQ,kCACDoC,MAAM,CAACpC,QADN;AAEJC,QAAAA,QAAQ,EAAE+B;AAFN;AAFH,OAAT;AAOH,GARD;;AAUA,MAAMmC,aAAa,GAAG,SAAhBA,aAAgB,CAACnC,KAAD;AAAA,WAAW,YAAM;AACnC,UAAII,MAAM,CAACpC,QAAP,CAAgBI,IAAhB,CAAqBkD,IAArB,CAA0B,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAAClD,EAAJ,KAAW2B,KAAK,CAAC3B,EAArB;AAAA,OAA7B,CAAJ,EAA2D;AACvD+B,QAAAA,MAAM,CAACpC,QAAP,CAAgBI,IAAhB,CAAqBoD,GAArB,CAAyB,UAACD,GAAD,EAAME,KAAN,EAAgB;AACrC,cAAIF,GAAG,CAAClD,EAAJ,KAAW2B,KAAK,CAAC3B,EAArB,EAAyB;AACrB+B,YAAAA,MAAM,CAACpC,QAAP,CAAgBI,IAAhB,CAAqBsD,MAArB,CAA4BD,KAA5B,EAAmC,CAAnC;AACH;AACJ,SAJD;AAKAf,QAAAA,SAAS,mBAAKN,MAAL,EAAT;AACH,OAPD,MAOO;AACHM,QAAAA,SAAS,iCACFN,MADE;AAELpC,UAAAA,QAAQ,kCACDoC,MAAM,CAACpC,QADN;AAEJI,YAAAA,IAAI,+BACGgC,MAAM,CAACpC,QAAP,CAAgBI,IADnB,IAEA4B,KAFA;AAFA;AAFH,WAAT;AAUH;AACJ,KApBqB;AAAA,GAAtB;;AAsBA,MAAMoC,UAAU,GAAG,SAAbA,UAAa,QAAc;AAAA,QAAZlB,MAAY,SAAZA,MAAY;AAAA,QACxBlB,KADwB,GACfkB,MADe,CACxBlB,KADwB;AAE7B,QAAMqC,KAAK,GAAG,wCAAd;AACA,QAAMC,OAAO,GAAGD,KAAK,CAACE,IAAN,CAAWvC,KAAX,CAAhB;;AACA,QAAIsC,OAAJ,EAAa;AACTtC,MAAAA,KAAK,GAAGA,KAAK,CAACwC,OAAN,CAAc,QAAd,EAAwB,UAAAC,CAAC;AAAA,2BAASA,CAAT;AAAA,OAAzB,EAAuCD,OAAvC,CAA+C,QAA/C,EAAyD,UAAAC,CAAC;AAAA,yBAAOA,CAAP;AAAA,OAA1D,CAAR;AACA/B,MAAAA,SAAS,iCACFN,MADE;AAELpC,QAAAA,QAAQ,kCACDoC,MAAM,CAACpC,QADN,2BAEHkD,MAAM,CAAC5C,IAFJ,EAEW0B,KAFX;AAFH,SAAT;AAOH;AACJ,GAdD;;AAgBA1D,EAAAA,SAAS,CAAC,YAAM;AACZsE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,IAAAA,SAAS,mBAAKpD,UAAL,EAAT;AACAsB,IAAAA,SAAS,IAAIC,YAAY,CAAC,KAAD,CAAzB;AACH,GAJQ,EAIN,CAACH,WAAW,CAACO,IAAZ,CAAiBZ,EAAlB,EAAsBK,WAAW,CAACO,IAAZ,CAAiBX,IAAvC,CAJM,CAAT,CAxNuC,CA8NvC;;AACA,MAAMoE,OAAO,GAAGrF,SAAS,EAAzB;AACA,SACI,MAAC,UAAD,QACI,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC;AAApB,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE;AAAzB,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE;AAAvB,KACI,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAEkD;AAAvB,KACI;AAAM,IAAA,QAAQ,EAAEA,MAAM,CAACoC;AAAvB,KAEQ7D,SAAS,GACH,MAAC,YAAD,OADG,GAGD,MAAC,SAAD;AACI,IAAA,SAAS,EAAEH,SADf;AAEI,IAAA,SAAS,EAAEC,SAFf;AAGI,IAAA,YAAY,EAAEC,YAHlB;AAII,IAAA,WAAW,EAAEH,WAJjB;AAKI,IAAA,MAAM,EAAEiC,MALZ;AAMI,IAAA,OAAO,EAAEE,OANb;AAOI,IAAA,MAAM,EAAET,MAPZ;AAQI,IAAA,SAAS,EAAEM,SARf;AASI,IAAA,UAAU,EAAEI,UAThB;AAUI,IAAA,UAAU,EAAEsB,UAVhB;AAWI,IAAA,YAAY,EAAEH,YAXlB;AAYI,IAAA,aAAa,EAAEE,aAZnB;AAaI,IAAA,cAAc,EAAER,cAbpB;AAcI,IAAA,cAAc,EAAEK,cAdpB;AAeI,IAAA,oBAAoB,EAAEZ,oBAf1B;AAgBI,IAAA,oBAAoB,EAAEJ;AAhB1B,IALhB,EAyBI;AAAK,IAAA,SAAS,EAAE0B,OAAO,CAACE;AAAxB,KAEQhE,SAAS,IACL,MAAC,eAAD;AACI,IAAA,SAAS,EAAE8D,OAAO,CAACG,UADvB;AAEI,IAAA,OAAO,EAAE9B,aAAa,CAAC,KAAD;AAF1B,KAII,MAAC,UAAD,yCAJJ,CAHZ,EAaI,MAAC,eAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,QAAQ,EAAE,EAAErC,WAAW,CAACY,MAAZ,CAAmBjB,EAAnB,IAAyBK,WAAW,CAACe,QAAZ,CAAqBpB,EAAhD,CAFd;AAGI,IAAA,SAAS,EAAEqE,OAAO,CAACG;AAHvB,KAKI,MAAC,UAAD,QAEQjE,SAAS,GACH,SADG,GAEH,OAJd,CALJ,CAbJ,CAzBJ,CADJ,CADJ,CADJ,EA0DI,MAAC,MAAD;AAAQ,IAAA,MAAM;AAAd,KACI,MAAC,IAAD;AACI,IAAA,IAAI,MADR;AAEI,IAAA,EAAE,EAAE,CAFR;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,SAAS,EAAE8D,OAAO,CAACI;AALvB,KAOI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,IADJ,CAPJ,CADJ,CA1DJ,CADJ,CADJ,CADJ;AA8EH,CA9SM;;GAAMtE,W;UACwBtB,W,EAwFlBF,S,EAsICK,S;;;KA/NPmB,W","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {Grid, Hidden, Container, Typography} from '@material-ui/core';\r\nimport {userAPI} from '@src/api/api';\r\nimport {AdvrtForm} from './advrt_form/AdvrtForm';\r\nimport {SuccessAdvrt} from './success_advrt/SuccessAdvrt';\r\nimport {CreateAdFields} from \"@root/interfaces/Advertisement\";\r\nimport {createAdvrtSchema} from \"@root/validation_schemas/createAdvrtSchema\";\r\nimport {useFormik, FormikProvider} from \"formik\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"@src/redux/rootReducer\";\r\nimport {ButtonComponent} from \"@src/components/elements/button/Button\";\r\nimport {MainLayout} from \"@src/components/MainLayout\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\nconst initFields: CreateAdFields = {\r\n    title: '',\r\n    price: '',\r\n    safe_deal: false,\r\n    delivery: false,\r\n    exchange: false,\r\n    location: null,\r\n    files: [],\r\n    description: '',\r\n    phone: '',\r\n    avalTime: {\r\n        isActive: false,\r\n        start_time: '00:00',\r\n        end_time: '00:00',\r\n        week: [\r\n            {id: 1, name: 'Пн'},\r\n            {id: 2, name: 'Вт'},\r\n            {id: 3, name: 'Ср'},\r\n            {id: 4, name: 'Чт'},\r\n            {id: 5, name: 'Пт'},\r\n            {id: 6, name: 'Сб'},\r\n            {id: 7, name: 'Вс'}\r\n        ],\r\n    },\r\n    // auction: {\r\n    //     duration_id: null,\r\n    //     offer_the_price: null,\r\n    //     auto_renewal: false,\r\n    //     display_phone: false,\r\n    //     reserve_price: null,\r\n    //     price_by_now: {\r\n    //         isActive: false,\r\n    //         price: ''\r\n    //     }\r\n    // },\r\n    adParams: {}\r\n};\r\n\r\nexport const CreateAdvrt: FC<void> = () => {\r\n    const {createAdvrt, locations} = useSelector((store: RootState) => store);\r\n\r\n    const [isPreview, setIsPreview] = useState(false);\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n    const prepareData = (data: CreateAdFields) => {\r\n        const form = new FormData();\r\n        const {\r\n            avalTime,\r\n            safe_deal,\r\n            delivery,\r\n            exchange,\r\n            location,\r\n            files,\r\n            ...otherValues\r\n        } = data;\r\n\r\n        form.set('ads_type_id', createAdvrt.adType.id.toString());\r\n        form.set('safe_deal', Number(safe_deal).toString());\r\n        form.set('delivery', Number(delivery).toString());\r\n        form.set('exchange', Number(exchange).toString());\r\n        form.set('parent_categories_id', createAdvrt.category.id.toString());\r\n\r\n        files.forEach(({file}: any) => (\r\n            form.append('files[]', file, file.name))\r\n        );\r\n\r\n        if (avalTime.isActive) {\r\n            avalTime.week.forEach((day, i) => (\r\n                form.append(`week[${i}]`, day.id.toString())\r\n            ));\r\n            form.set('start_time', avalTime.start_time.toString());\r\n            form.set('end_time', avalTime.end_time.toString());\r\n        }\r\n\r\n        for (const key in location) {\r\n            if (typeof location[key] === 'number') {\r\n                form.set(key, Number(location[key]).toString());\r\n            }\r\n        }\r\n\r\n        for (let key in otherValues) {\r\n            const value = otherValues[key];\r\n            if (value) {\r\n                if (typeof value === 'string') {\r\n                    form.set(key, value);\r\n                } else if (Array.isArray(value)) {\r\n                    value.forEach((value, i) => (\r\n                        form.append(`${key}[${i}]`, value.id))\r\n                    )\r\n                } else {\r\n                    if (value.id) {\r\n                        switch (key) {\r\n                            case 'models' :\r\n                                key = 'model'\r\n                                break;\r\n                            case 'colors' :\r\n                                key = 'color'\r\n                                break;\r\n                        }\r\n                        form.set(`${key}_id`, value.id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // for (const key of form.entries()) {\r\n        //     console.log(key[0] + '-' + key[1]);\r\n        // }\r\n\r\n        return form;\r\n    };\r\n\r\n    const onSubmit = async (values: CreateAdFields) => {\r\n        try {\r\n            if (!isPreview) {\r\n                setIsPreview(true);\r\n            } else {\r\n                const data = prepareData(values);\r\n                await userAPI.createAdvrt(data);\r\n                // setIsSuccess(true);\r\n                console.log('success');\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initFields,\r\n        validationSchema: createAdvrtSchema,\r\n        onSubmit\r\n    });\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        touched,\r\n        handleBlur,\r\n    } = formik;\r\n\r\n    let {adParams} = values;\r\n\r\n    const handlePreview = (value) => () => {\r\n        setIsPreview(value);\r\n    };\r\n\r\n    const handleCheckboxChange = (valName) => ({target}) => {\r\n        setValues({...values, [valName]: target.checked});\r\n    };\r\n    console.log(adParams)\r\n\r\n    const handleParamsCheckbox = (valueName, value) => () => {\r\n        if (adParams[valueName]) {\r\n            if (adParams[valueName].some(val => val.id === value.id)) {\r\n                adParams[valueName].map((val, index) => {\r\n                    if (val.id === value.id) {\r\n                        adParams[valueName].splice(index, 1);\r\n                    }\r\n                });\r\n            } else {\r\n                adParams = {\r\n                    ...adParams,\r\n                    [valueName]: [...adParams[valueName], value]\r\n                };\r\n            }\r\n        } else {\r\n            adParams = {...adParams, [valueName]: [value]};\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleMenuItem = (valueName) => (newValue, setAnchor) => () => {\r\n        setAnchor(null);\r\n\r\n        // Reset sub props in values\r\n        Object.keys(newValue).map(key => {\r\n            if (adParams[key]) {\r\n                adParams = {\r\n                    ...adParams,\r\n                    [key]: {id: null, name: 'Не выбрано'}\r\n                };\r\n            }\r\n            setValues({\r\n                ...values,\r\n                adParams: {\r\n                    ...adParams,\r\n                    [valueName]: newValue\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    const handleListItem = (valueName, value) => () => {\r\n        if (adParams[valueName] && adParams[valueName].id === value.id) {\r\n            delete adParams[valueName];\r\n        } else {\r\n            adParams = {\r\n                ...adParams,\r\n                [valueName]: value\r\n            };\r\n        }\r\n        setValues({...values, adParams});\r\n    };\r\n\r\n    const handleSwitch = (_, value) => {\r\n        setValues({\r\n            ...values,\r\n            avalTime: {\r\n                ...values.avalTime,\r\n                isActive: value\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleWeekDay = (value) => () => {\r\n        if (values.avalTime.week.some(val => val.id === value.id)) {\r\n            values.avalTime.week.map((val, index) => {\r\n                if (val.id === value.id) {\r\n                    values.avalTime.week.splice(index, 1)\r\n                }\r\n            });\r\n            setValues({...values});\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    week: [\r\n                        ...values.avalTime.week,\r\n                        value\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTime = ({target}) => {\r\n        let {value} = target;\r\n        const regEx = /^([0-1]?[0-9]|2[0-3])?:([0-5][0-9]?)?$/;\r\n        const isValid = regEx.test(value);\r\n        if (isValid) {\r\n            value = value.replace(/^:(.+)/, m => `00${m}`).replace(/(.+):$/, m => `${m}00`);\r\n            setValues({\r\n                ...values,\r\n                avalTime: {\r\n                    ...values.avalTime,\r\n                    [target.name]: value\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setErrors({});\r\n        setValues({...initFields});\r\n        isPreview && setIsPreview(false);\r\n    }, [createAdvrt.data.id, createAdvrt.data.name]);\r\n\r\n    // console.log(values, errors)\r\n    const classes = useStyles();\r\n    return (\r\n        <MainLayout>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} md={9}>\r\n                        <FormikProvider value={formik}>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                {\r\n                                    isSuccess\r\n                                        ? <SuccessAdvrt/>\r\n                                        : (\r\n                                            <AdvrtForm\r\n                                                locations={locations}\r\n                                                isPreview={isPreview}\r\n                                                setIsPreview={setIsPreview}\r\n                                                createAdvrt={createAdvrt}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                values={values}\r\n                                                setValues={setValues}\r\n                                                handleBlur={handleBlur}\r\n                                                handleTime={handleTime}\r\n                                                handleSwitch={handleSwitch}\r\n                                                handleWeekDay={handleWeekDay}\r\n                                                handleMenuItem={handleMenuItem}\r\n                                                handleListItem={handleListItem}\r\n                                                handleParamsCheckbox={handleParamsCheckbox}\r\n                                                handleCheckboxChange={handleCheckboxChange}\r\n                                            />\r\n                                        )\r\n                                }\r\n                                <div className={classes.nextButtonBlock}>\r\n                                    {\r\n                                        isPreview && (\r\n                                            <ButtonComponent\r\n                                                className={classes.nextButton}\r\n                                                onClick={handlePreview(false)}\r\n                                            >\r\n                                                <Typography>\r\n                                                    Назад\r\n                                                </Typography>\r\n                                            </ButtonComponent>\r\n                                        )\r\n                                    }\r\n                                    <ButtonComponent\r\n                                        type='submit'\r\n                                        disabled={!(createAdvrt.adType.id && createAdvrt.category.id)}\r\n                                        className={classes.nextButton}\r\n                                    >\r\n                                        <Typography>\r\n                                            {\r\n                                                isPreview\r\n                                                    ? 'Создать'\r\n                                                    : 'Далее'\r\n                                            }\r\n                                        </Typography>\r\n                                    </ButtonComponent>\r\n                                </div>\r\n                            </form>\r\n                        </FormikProvider>\r\n                    </Grid>\r\n                    <Hidden smDown>\r\n                        <Grid\r\n                            item\r\n                            md={3}\r\n                            container\r\n                            justify=\"flex-end\"\r\n                            className={classes.adBanner}\r\n                        >\r\n                            <Grid item md={12}>\r\n                                <div className=\"right-banner\"/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Hidden>\r\n                </Grid>\r\n            </Container>\r\n        </MainLayout>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}