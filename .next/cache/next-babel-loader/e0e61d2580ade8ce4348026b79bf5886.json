{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Link } from '@root/i18n';\nimport { Card, CardActionArea, CardContent, CardMedia, IconButton, Typography } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { FavoriteIcon, DeliveryIcon, SafeIcon, SwapIcon } from '@src/components/elements/icons';\nimport { transformTitle } from \"@src/helpers\";\nimport { useStyles } from './useStyles';\nexport var CardItem = function CardItem(props) {\n  _s();\n\n  var t = props.t,\n      id = props.id,\n      isFetch = props.isFetch,\n      images = props.images,\n      delivery = props.delivery,\n      safe_deal = props.safe_deal,\n      exchange = props.exchange,\n      title = props.title,\n      price = props.price,\n      location = props.location,\n      created_at = props.created_at,\n      currency = props.currency,\n      ads_type = props.ads_type,\n      region = props.region,\n      city = props.city,\n      district = props.district;\n  var translatedTitle = transformTitle(title);\n  var classes = useStyles(ads_type);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(IconButton, {\n    className: \"favorite-btn\"\n  }, __jsx(FavoriteIcon, {\n    id: id\n  })), __jsx(Link, {\n    href: \"/obyavlenie/\".concat(translatedTitle, \"-\").concat(id)\n  }, __jsx(\"a\", null, __jsx(Card, {\n    elevation: 0,\n    title: title\n  }, isFetch ? __jsx(Skeleton, {\n    variant: \"rect\",\n    className: classes.skeleton\n  }) : __jsx(CardMedia, {\n    className: \"card-media\",\n    image: images.length ? images[0].url[\"default\"] : null\n  }, __jsx(\"div\", {\n    className: \"card-header\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, t(\"common:\".concat(ads_type)))), __jsx(\"div\", {\n    className: \"icons\"\n  }, !!delivery && __jsx(\"span\", null, __jsx(DeliveryIcon, null)), !!safe_deal && __jsx(\"span\", null, __jsx(SafeIcon, null)), !!exchange && __jsx(\"span\", null, __jsx(SwapIcon, null))))), __jsx(CardActionArea, null, __jsx(CardContent, null, isFetch ? __jsx(React.Fragment, null, __jsx(Skeleton, {\n    variant: \"rect\"\n  }), __jsx(Skeleton, {\n    variant: \"rect\"\n  }), __jsx(Skeleton, {\n    variant: \"rect\"\n  }), __jsx(\"br\", null), __jsx(Skeleton, {\n    variant: \"rect\"\n  })) : __jsx(React.Fragment, null, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"initial\",\n    noWrap: true\n  }, title), __jsx(Typography, {\n    variant: \"h5\",\n    color: \"initial\"\n  }, price, __jsx(\"span\", null, currency.name)), __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"initial\"\n  }, location), __jsx(Typography, {\n    variant: \"caption\",\n    noWrap: true,\n    color: \"initial\",\n    className: \"card-location\"\n  }, created_at))))))));\n};\n\n_s(CardItem, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardItem\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/card/Card.tsx"],"names":["React","Link","Card","CardActionArea","CardContent","CardMedia","IconButton","Typography","Skeleton","FavoriteIcon","DeliveryIcon","SafeIcon","SwapIcon","transformTitle","useStyles","CardItem","props","t","id","isFetch","images","delivery","safe_deal","exchange","title","price","location","created_at","currency","ads_type","region","city","district","translatedTitle","classes","root","skeleton","length","url","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAQC,IAAR,QAAmB,YAAnB;AACA,SACIC,IADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,UALJ,EAMIC,UANJ,QAOO,mBAPP;AAQA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SACIC,YADJ,EAEIC,YAFJ,EAGIC,QAHJ,EAIIC,QAJJ,QAKO,gCALP;AAQA,SAAQC,cAAR,QAA6B,cAA7B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAOA,OAAO,IAAMC,QAA2B,GAAG,SAA9BA,QAA8B,CAACC,KAAD,EAAW;AAAA;;AAAA,MAE9CC,CAF8C,GAkB9CD,KAlB8C,CAE9CC,CAF8C;AAAA,MAG9CC,EAH8C,GAkB9CF,KAlB8C,CAG9CE,EAH8C;AAAA,MAI9CC,OAJ8C,GAkB9CH,KAlB8C,CAI9CG,OAJ8C;AAAA,MAK9CC,MAL8C,GAkB9CJ,KAlB8C,CAK9CI,MAL8C;AAAA,MAM9CC,QAN8C,GAkB9CL,KAlB8C,CAM9CK,QAN8C;AAAA,MAO9CC,SAP8C,GAkB9CN,KAlB8C,CAO9CM,SAP8C;AAAA,MAQ9CC,QAR8C,GAkB9CP,KAlB8C,CAQ9CO,QAR8C;AAAA,MAS9CC,KAT8C,GAkB9CR,KAlB8C,CAS9CQ,KAT8C;AAAA,MAU9CC,KAV8C,GAkB9CT,KAlB8C,CAU9CS,KAV8C;AAAA,MAW9CC,QAX8C,GAkB9CV,KAlB8C,CAW9CU,QAX8C;AAAA,MAY9CC,UAZ8C,GAkB9CX,KAlB8C,CAY9CW,UAZ8C;AAAA,MAa9CC,QAb8C,GAkB9CZ,KAlB8C,CAa9CY,QAb8C;AAAA,MAc9CC,QAd8C,GAkB9Cb,KAlB8C,CAc9Ca,QAd8C;AAAA,MAe9CC,MAf8C,GAkB9Cd,KAlB8C,CAe9Cc,MAf8C;AAAA,MAgB9CC,IAhB8C,GAkB9Cf,KAlB8C,CAgB9Ce,IAhB8C;AAAA,MAiB9CC,QAjB8C,GAkB9ChB,KAlB8C,CAiB9CgB,QAjB8C;AAoBlD,MAAMC,eAAe,GAAGpB,cAAc,CAACW,KAAD,CAAtC;AAEA,MAAMU,OAAO,GAAGpB,SAAS,CAACe,QAAD,CAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAEK,OAAO,CAACC;AAAxB,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC;AAAtB,KACI,MAAC,YAAD;AAAc,IAAA,EAAE,EAAEjB;AAAlB,IADJ,CADJ,EAII,MAAC,IAAD;AACI,IAAA,IAAI,wBAAiBe,eAAjB,cAAoCf,EAApC;AADR,KAGI,iBACI,MAAC,IAAD;AACI,IAAA,SAAS,EAAE,CADf;AAEI,IAAA,KAAK,EAAEM;AAFX,KAIKL,OAAO,GACF,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC,MAAlB;AAAyB,IAAA,SAAS,EAAEe,OAAO,CAACE;AAA5C,IADE,GAEF,MAAC,SAAD;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,KAAK,EAAEhB,MAAM,CAACiB,MAAP,GAAgBjB,MAAM,CAAC,CAAD,CAAN,CAAUkB,GAAV,WAAhB,GAAwC;AAFjD,KAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KACKrB,CAAC,kBAAWY,QAAX,EADN,CADJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC;AAAf,KACK,CAAC,CAACR,QAAF,IACG,oBACR,MAAC,YAAD,OADQ,CAFR,EAMK,CAAC,CAACC,SAAF,IACG,oBACR,MAAC,QAAD,OADQ,CAPR,EAWK,CAAC,CAACC,QAAF,IACG,oBACR,MAAC,QAAD,OADQ,CAZR,CANJ,CAJF,CANV,EAmCI,MAAC,cAAD,QACI,MAAC,WAAD,QACKJ,OAAO,GACF,4BACE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC;AAAlB,IADF,EAEE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC;AAAlB,IAFF,EAGE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC;AAAlB,IAHF,EAIE,iBAJF,EAKE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC;AAAlB,IALF,CADE,GAQF,4BACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,KAAK,EAAC,SAAtC;AAAgD,IAAA,MAAM;AAAtD,KACKK,KADL,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC;AAA/B,KACKC,KADL,EAEI,oBAAOG,QAAQ,CAACW,IAAhB,CAFJ,CAJF,EAmBE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,KAAK,EAAC;AAAtC,KACKb,QADL,CAnBF,EAuBE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAA8B,IAAA,MAAM,MAApC;AAAqC,IAAA,KAAK,EAAC,SAA3C;AAAqD,IAAA,SAAS,EAAC;AAA/D,KACKC,UADL,CAvBF,CATV,CADJ,CAnCJ,CADJ,CAHJ,CAJJ,CADJ;AAwFH,CA/GM;;GAAMZ,Q;UAsBOD,S;;;KAtBPC,Q","sourcesContent":["import React, {FC} from 'react';\r\nimport {Link} from '@root/i18n';\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    IconButton,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {\r\n    FavoriteIcon,\r\n    DeliveryIcon,\r\n    SafeIcon,\r\n    SwapIcon\r\n} from '@src/components/elements/icons';\r\nimport {WithT} from \"i18next\";\r\nimport {InnerCardData} from \"@root/interfaces/CardData\";\r\nimport {transformTitle} from \"@src/helpers\";\r\nimport {useStyles} from './useStyles';\r\n\r\n\r\ntype CardItemProps = {\r\n    isFetch: boolean;\r\n} & InnerCardData & WithT;\r\n\r\nexport const CardItem: FC<CardItemProps> = (props) => {\r\n    const {\r\n        t,\r\n        id,\r\n        isFetch,\r\n        images,\r\n        delivery,\r\n        safe_deal,\r\n        exchange,\r\n        title,\r\n        price,\r\n        location,\r\n        created_at,\r\n        currency,\r\n        ads_type,\r\n        region,\r\n        city,\r\n        district,\r\n    } = props;\r\n\r\n    const translatedTitle = transformTitle(title);\r\n\r\n    const classes = useStyles(ads_type);\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton className='favorite-btn'>\r\n                <FavoriteIcon id={id}/>\r\n            </IconButton>\r\n            <Link\r\n                href={`/obyavlenie/${translatedTitle}-${id}`}\r\n            >\r\n                <a>\r\n                    <Card\r\n                        elevation={0}\r\n                        title={title}\r\n                    >\r\n                        {isFetch\r\n                            ? <Skeleton variant=\"rect\" className={classes.skeleton}/>\r\n                            : <CardMedia\r\n                                className=\"card-media\"\r\n                                image={images.length ? images[0].url.default : null}\r\n                            >\r\n                                <div className=\"card-header\">\r\n                                    <div className='title'>\r\n                                        <Typography variant=\"subtitle2\">\r\n                                            {t(`common:${ads_type}`)}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className='icons'>\r\n                                        {!!delivery && (\r\n                                            <span>\r\n                                    <DeliveryIcon/>\r\n                                </span>\r\n                                        )}\r\n                                        {!!safe_deal && (\r\n                                            <span>\r\n                                    <SafeIcon/>\r\n                                </span>\r\n                                        )}\r\n                                        {!!exchange && (\r\n                                            <span>\r\n                                    <SwapIcon/>\r\n                                </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </CardMedia>}\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                {isFetch\r\n                                    ? <>\r\n                                        <Skeleton variant=\"rect\"/>\r\n                                        <Skeleton variant=\"rect\"/>\r\n                                        <Skeleton variant=\"rect\"/>\r\n                                        <br/>\r\n                                        <Skeleton variant=\"rect\"/>\r\n                                    </>\r\n                                    : <>\r\n                                        <Typography variant=\"subtitle1\" color=\"initial\" noWrap>\r\n                                            {title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h5\" color=\"initial\">\r\n                                            {price}\r\n                                            <span>{currency.name}</span>\r\n                                        </Typography>\r\n                                        {/* <div>\r\n                                            {region.name || city.name || district.name ? (\r\n                                                <Typography variant=\"caption\" noWrap color=\"initial\" className=\"card-location\">\r\n                                                    {`${region.name ?? ''}`}\r\n                                                    {city.name ? `, ${city.name}` : ''}\r\n                                                    {district.name ? `, ${district.name}` : ''}\r\n                                                </Typography>\r\n                                            ) : (\r\n                                                <Typography variant=\"subtitle1\">Не указано</Typography>\r\n                                            )}\r\n                                        </div> */}\r\n                                        <Typography variant=\"subtitle1\" color=\"initial\">\r\n                                            {location}\r\n                                        </Typography>\r\n                                        \r\n                                        <Typography variant=\"caption\" noWrap color=\"initial\" className=\"card-location\">\r\n                                            {created_at}\r\n                                        </Typography>\r\n                                    </>}\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </a>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}