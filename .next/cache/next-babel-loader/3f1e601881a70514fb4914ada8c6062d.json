{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport CyrillicToTranslit from 'cyrillic-to-translit-js';\nexport var transformTitle = function transformTitle(title) {\n  var transform = new CyrillicToTranslit().transform;\n  var formatRegEx = /[\\-\\,\\.\\;\\\"\\']+/g;\n  return transform(title).toLowerCase().replace(formatRegEx, ' ').replace(/\\s+/g, '-');\n};\nexport var numberRegEx = /^[0-9]*$/;\nexport var categoryDataNormalization = function categoryDataNormalization(categoryList) {\n  return categoryList.map(function (category) {\n    if (category) {\n      var model = category.model.map(function (subCategory) {\n        return _objectSpread(_objectSpread({}, subCategory), {}, {\n          parents: [{\n            id: category.id,\n            name: category.name\n          }]\n        });\n      });\n      return _objectSpread(_objectSpread({}, category), {}, {\n        model: model\n      });\n    } else if (category.type) {\n      var type = category.model.map(function (subCategory) {\n        return _objectSpread(_objectSpread({}, subCategory), {}, {\n          parents: [{\n            id: category.id,\n            name: category.name\n          }]\n        });\n      });\n      return _objectSpread(_objectSpread({}, category), {}, {\n        type: type\n      });\n    }\n  });\n};\nexport var categorySearchHelper = function categorySearchHelper(text, categoryList) {\n  var searchRegExp = RegExp(text, 'i');\n  return categoryList.reduce(function (list, category) {\n    category.model.forEach(function (sub_ctgr) {\n      if (searchRegExp.test(sub_ctgr.name)) {\n        list.push(sub_ctgr);\n      }\n    });\n    return list;\n  }, []);\n};\nexport var prepareCreateAncmnt = function prepareCreateAncmnt(data, adParams) {\n  return Object.keys(data).reduce(function (acc, key) {\n    if (Array.isArray(data[key]) || data[key] === '') {\n      acc[key] = data[key];\n    }\n\n    if (Array.isArray(data[key]) && data[key].length && adParams !== undefined && adParams[key]) {\n      acc = _objectSpread(_objectSpread({}, acc), prepareCreateAncmnt(adParams[key]));\n    }\n\n    return acc;\n  }, {});\n};\nexport var pricePrettier = function pricePrettier(price) {\n  return price && price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/helpers.ts"],"names":["CyrillicToTranslit","transformTitle","title","transform","formatRegEx","toLowerCase","replace","numberRegEx","categoryDataNormalization","categoryList","map","category","model","subCategory","parents","id","name","type","categorySearchHelper","text","searchRegExp","RegExp","reduce","list","forEach","sub_ctgr","test","push","prepareCreateAncmnt","data","adParams","Object","keys","acc","key","Array","isArray","length","undefined","pricePrettier","price","toString"],"mappings":"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","sourcesContent":["import {CategoryType, ModelType} from \"@root/interfaces/Categories\";\r\nimport {IdNameType} from \"@root/interfaces/Announcement\";\r\nimport CyrillicToTranslit from 'cyrillic-to-translit-js';\r\n\r\n\r\nexport const transformTitle = (title: string): string => {\r\n    const transform = new CyrillicToTranslit().transform;\r\n    const formatRegEx = /[\\-\\,\\.\\;\\\"\\']+/g;\r\n\r\n    return transform(title)\r\n        .toLowerCase()\r\n        .replace(formatRegEx, ' ')\r\n        .replace(/\\s+/g, '-');\r\n};\r\n\r\n\r\nexport const numberRegEx = /^[0-9]*$/;\r\n\r\ntype SearchType = (IdNameType & {\r\n    parent: IdNameType,\r\n    icons: [],\r\n    image: { url: string }\r\n})[];\r\n\r\nexport const categoryDataNormalization = (categoryList: (CategoryType | ModelType)[]) => (\r\n    categoryList.map(category => {\r\n        if (category) {\r\n            const model = category.model.map(subCategory => ({\r\n                ...subCategory,\r\n                parents: [{\r\n                    id: category.id,\r\n                    name: category.name\r\n                }]\r\n            }));\r\n            return {...category, model};\r\n        } else if (category.type) {\r\n            const type = category.model.map(subCategory => ({\r\n                ...subCategory,\r\n                parents: [{\r\n                    id: category.id,\r\n                    name: category.name\r\n                }]\r\n            }));\r\n            return {...category, type};\r\n        }\r\n    })\r\n);\r\n\r\nexport const categorySearchHelper = (text: string, categoryList: CategoryType[]): SearchType => {\r\n    const searchRegExp = RegExp(text, 'i');\r\n    return categoryList\r\n        .reduce((list, category) => {\r\n            category.model.forEach(sub_ctgr => {\r\n                if (searchRegExp.test(sub_ctgr.name)) {\r\n                    list.push(sub_ctgr);\r\n                }\r\n            })\r\n            return list;\r\n        }, []);\r\n};\r\n\r\nexport const prepareCreateAncmnt = (data: any, adParams?: any): any => (\r\n    Object.keys(data).reduce((acc, key) => {\r\n        if (Array.isArray(data[key]) || data[key] === '') {\r\n            acc[key] = data[key];\r\n        }\r\n        if (\r\n            Array.isArray(data[key])\r\n            && data[key].length\r\n            && adParams !== undefined && adParams[key]\r\n        ) {\r\n            acc = {\r\n                ...acc,\r\n                ...prepareCreateAncmnt(adParams[key])\r\n            };\r\n        }\r\n        return acc;\r\n    }, {})\r\n);\r\n\r\nexport const pricePrettier = (price: number): string =>\r\n    price && price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");"]},"metadata":{},"sourceType":"module"}