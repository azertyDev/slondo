{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { userApi } from '../../api/api';\nexport const selfDataActionTypes = {\n  FETCH_SELF_DATA_BEGIN: 'FETCH_SELF_DATA_BEGIN',\n  FETCH_SELF_DATA_SUCCESS: 'FETCH_SELF_DATA_SUCCESS',\n  FETCH_SELF_DATA_FAILURE: 'FETCH_SELF_DATA_FAILURE'\n};\nconst selfDataActions = {\n  fetchSelfDataBegin: () => ({\n    type: selfDataActionTypes.FETCH_SELF_DATA_BEGIN\n  }),\n  fetchSelfDataSuccess: selfData => ({\n    type: selfDataActionTypes.FETCH_SELF_DATA_SUCCESS,\n    payload: _objectSpread({}, selfData)\n  }),\n  fetchSelfDataFailure: error => {\n    console.log(error);\n    return {\n      type: selfDataActionTypes.FETCH_SELF_DATA_FAILURE,\n      payload: error\n    };\n  }\n};\nexport const getSelfData = async (phone, password) => {\n  try {\n    selfDataActions.fetchSelfDataBegin();\n    const {\n      userInfo\n    } = await userApi.login(phone, password);\n    selfDataActions.fetchSelfDataSuccess(userInfo);\n  } catch (e) {\n    selfDataActions.fetchSelfDataFailure(e);\n  }\n};","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/redux/actions/selfDataActions.ts"],"names":["userApi","selfDataActionTypes","FETCH_SELF_DATA_BEGIN","FETCH_SELF_DATA_SUCCESS","FETCH_SELF_DATA_FAILURE","selfDataActions","fetchSelfDataBegin","type","fetchSelfDataSuccess","selfData","payload","fetchSelfDataFailure","error","console","log","getSelfData","phone","password","userInfo","login","e"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,eAAtB;AAEA,OAAO,MAAMC,mBAAmB,GAAG;AAC/BC,EAAAA,qBAAqB,EAAE,uBADQ;AAE/BC,EAAAA,uBAAuB,EAAE,yBAFM;AAG/BC,EAAAA,uBAAuB,EAAE;AAHM,CAA5B;AAMP,MAAMC,eAAe,GAAG;AACpBC,EAAAA,kBAAkB,EAAE,OAAO;AACvBC,IAAAA,IAAI,EAAEN,mBAAmB,CAACC;AADH,GAAP,CADA;AAIpBM,EAAAA,oBAAoB,EAAGC,QAAD,KAAe;AACjCF,IAAAA,IAAI,EAAEN,mBAAmB,CAACE,uBADO;AAEjCO,IAAAA,OAAO,oBAAMD,QAAN;AAF0B,GAAf,CAJF;AAQpBE,EAAAA,oBAAoB,EAAGC,KAAD,IAAW;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO;AACHL,MAAAA,IAAI,EAAEN,mBAAmB,CAACG,uBADvB;AAEHM,MAAAA,OAAO,EAAEE;AAFN,KAAP;AAIH;AAdmB,CAAxB;AAiBA,OAAO,MAAMG,WAAW,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAClD,MAAI;AACAZ,IAAAA,eAAe,CAACC,kBAAhB;AACA,UAAM;AAACY,MAAAA;AAAD,QAAa,MAAMlB,OAAO,CAACmB,KAAR,CAAcH,KAAd,EAAqBC,QAArB,CAAzB;AACAZ,IAAAA,eAAe,CAACG,oBAAhB,CAAqCU,QAArC;AACH,GAJD,CAIE,OAAOE,CAAP,EAAU;AACRf,IAAAA,eAAe,CAACM,oBAAhB,CAAqCS,CAArC;AACH;AACJ,CARM","sourcesContent":["import {userApi} from '../../api/api'\r\n\r\nexport const selfDataActionTypes = {\r\n    FETCH_SELF_DATA_BEGIN: 'FETCH_SELF_DATA_BEGIN',\r\n    FETCH_SELF_DATA_SUCCESS: 'FETCH_SELF_DATA_SUCCESS',\r\n    FETCH_SELF_DATA_FAILURE: 'FETCH_SELF_DATA_FAILURE'\r\n};\r\n\r\nconst selfDataActions = {\r\n    fetchSelfDataBegin: () => ({\r\n        type: selfDataActionTypes.FETCH_SELF_DATA_BEGIN\r\n    }),\r\n    fetchSelfDataSuccess: (selfData) => ({\r\n        type: selfDataActionTypes.FETCH_SELF_DATA_SUCCESS,\r\n        payload: {...selfData}\r\n    }),\r\n    fetchSelfDataFailure: (error) => {\r\n        console.log(error)\r\n        return {\r\n            type: selfDataActionTypes.FETCH_SELF_DATA_FAILURE,\r\n            payload: error\r\n        }\r\n    }\r\n};\r\n\r\nexport const getSelfData = async (phone, password) => {\r\n    try {\r\n        selfDataActions.fetchSelfDataBegin()\r\n        const {userInfo} = await userApi.login(phone, password);\r\n        selfDataActions.fetchSelfDataSuccess(userInfo)\r\n    } catch (e) {\r\n        selfDataActions.fetchSelfDataFailure(e)\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}