{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card, CardActionArea, CardContent, CardMedia, IconButton, Typography } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { FavoriteIcon, DeliveryIcon, SafeIcon, SwapIcon } from '@src/components/elements/icons';\nimport { useStyles } from './useStyles';\nexport var CardItem = function CardItem(props) {\n  _s();\n\n  var classes = useStyles();\n  return __jsx(Card, {\n    className: classes.root,\n    elevation: 0\n  }, props.isFetch ? __jsx(Skeleton, {\n    variant: \"rect\",\n    className: classes.skeleton\n  }) : __jsx(CardMedia, {\n    className: \"card-media\",\n    image: props.images.length ? props.images[0].url[\"default\"] : null\n  }, __jsx(\"div\", {\n    className: \"card-header\"\n  }, __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, props.cardType), __jsx(IconButton, null, __jsx(FavoriteIcon, {\n    id: props.id\n  }))), __jsx(\"div\", null, props.delivery ? __jsx(\"span\", null, __jsx(DeliveryIcon, null)) : null, props.safe_deal ? __jsx(\"span\", null, __jsx(SafeIcon, null)) : null, props.exchange ? __jsx(\"span\", null, __jsx(SwapIcon, null)) : null))), __jsx(CardActionArea, {\n    title: props.title\n  }, __jsx(CardContent, null, props.isFetch ? __jsx(React.Fragment, null, __jsx(Skeleton, {\n    variant: \"rect\"\n  }), __jsx(Skeleton, {\n    variant: \"rect\"\n  }), __jsx(Skeleton, {\n    variant: \"rect\"\n  }), __jsx(Skeleton, {\n    variant: \"rect\"\n  })) : __jsx(React.Fragment, null, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"initial\",\n    noWrap: true\n  }, props.title), __jsx(Typography, {\n    variant: \"h5\",\n    color: \"initial\"\n  }, props.price, __jsx(\"span\", null, props.currency.name)), __jsx(Typography, {\n    variant: \"caption\",\n    noWrap: true,\n    color: \"initial\",\n    className: \"card-location\"\n  }, props.location), __jsx(\"br\", null), __jsx(Typography, {\n    variant: \"caption\",\n    noWrap: true,\n    color: \"initial\",\n    className: \"card-location\"\n  }, props.created_at)))));\n};\n\n_s(CardItem, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardItem\");","map":{"version":3,"sources":["C:/Users/abror/Documents/projects/slondo/src/components/elements/card/Card.tsx"],"names":["React","Card","CardActionArea","CardContent","CardMedia","IconButton","Typography","Skeleton","FavoriteIcon","DeliveryIcon","SafeIcon","SwapIcon","useStyles","CardItem","props","classes","root","isFetch","skeleton","images","length","url","cardType","id","delivery","safe_deal","exchange","title","price","currency","name","location","created_at"],"mappings":"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","sourcesContent":["import React, {FC} from 'react'\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    IconButton,\r\n    Typography,\r\n} from '@material-ui/core'\r\nimport {InnerCardData} from \"@root/interfaces/CardData\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {FavoriteIcon, DeliveryIcon, SafeIcon, SwapIcon} from '@src/components/elements/icons';\r\nimport {useStyles} from './useStyles'\r\n\r\n\r\nexport const CardItem: FC<InnerCardData & { className: string; isFetch: boolean }> = (props) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root} elevation={0}>\r\n            {props.isFetch\r\n                ? <Skeleton variant=\"rect\" className={classes.skeleton}/>\r\n                : <CardMedia\r\n                    className=\"card-media\"\r\n                    image={props.images.length ? props.images[0].url.default : null}\r\n                >\r\n                    <div className=\"card-header\">\r\n                        <div>\r\n                            <Typography variant=\"subtitle2\">{props.cardType}</Typography>\r\n                            <IconButton>\r\n                                <FavoriteIcon id={props.id}/>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div>\r\n                            {props.delivery\r\n                                ? <span>\r\n                                        <DeliveryIcon/>\r\n                                    </span>\r\n                                : null}\r\n                            {props.safe_deal\r\n                                ? <span>\r\n                                    <SafeIcon/>\r\n                                </span>\r\n                                : null}\r\n                            {props.exchange\r\n                                ? <span>\r\n                                    <SwapIcon/>\r\n                                </span>\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                </CardMedia>}\r\n            <CardActionArea title={props.title}>\r\n                <CardContent>\r\n                    {props.isFetch\r\n                        ? <>\r\n                            <Skeleton variant=\"rect\"/>\r\n                            <Skeleton variant=\"rect\"/>\r\n                            <Skeleton variant=\"rect\"/>\r\n                            <Skeleton variant=\"rect\"/>\r\n                        </>\r\n                        : <>\r\n                            <Typography variant=\"subtitle1\" color=\"initial\" noWrap>\r\n                                {props.title}\r\n                            </Typography>\r\n                            <Typography variant=\"h5\" color=\"initial\">\r\n                                {props.price}\r\n                                <span>{props.currency.name}</span>\r\n                            </Typography>\r\n                            <Typography variant=\"caption\" noWrap={true} color=\"initial\" className=\"card-location\">\r\n                                {props.location}\r\n                            </Typography>\r\n                            <br/>\r\n                            <Typography variant=\"caption\" noWrap={true} color=\"initial\" className=\"card-location\">\r\n                                {props.created_at}\r\n                            </Typography>\r\n                        </>}\r\n                    {/*{props.isFetch*/}\r\n                    {/*    ? <Skeleton variant=\"rect\"/>*/}\r\n                    {/*    : <Typography variant=\"h5\" color=\"initial\">*/}\r\n                    {/*        {props.price}*/}\r\n                    {/*        <span>{props.currency.name}</span>*/}\r\n                    {/*    </Typography>*/}\r\n                    {/*}*/}\r\n                    {/*{props.isFetch*/}\r\n                    {/*    ? <Skeleton variant=\"rect\"/>*/}\r\n                    {/*    : <Typography variant=\"caption\" noWrap={true} color=\"initial\" className=\"card-location\">*/}\r\n                    {/*        {props.location}*/}\r\n                    {/*    </Typography>*/}\r\n                    {/*}*/}\r\n                    {/*<br/>*/}\r\n                    {/*{props.isFetch*/}\r\n                    {/*    ? <Skeleton variant=\"rect\"/>*/}\r\n                    {/*    : <Typography variant=\"caption\" noWrap={true} color=\"initial\" className=\"card-location\">*/}\r\n                    {/*        {props.created_at}*/}\r\n                    {/*    </Typography>*/}\r\n                    {/*}*/}\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}